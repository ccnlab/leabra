// ta_Dump File v2.0 -- code v5.0.1.0
LeabraProject .projects[0] { 
  taBase_Group @.templates = [0] {
  };

  Doc_Group @.docs = [1] {
    taDoc @[0] { };
  };

  Wizard_Group @.wizards = [1] {
    LeabraWizard @[0] { 
   UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
   };

      LayerWizElList @.layer_cfg = [3] {
	LayerWizEl @[0] { };
	LayerWizEl @[1] { };
	LayerWizEl @[2] { };
      };
    };
  };

  SelectEdit_Group @.edits = [0] {
  };

  DataTable_Group @.data = [0] {
    DataTable_Group @.gp[0] { 
    };
    DataTable_Group @.gp[1] { 
    };
    DataTable_Group @.gp[2] { 
    };
  };

  taBase_Group @.data_proc = [4] {
    taDataProc @[0] { 
   UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
   };
};
    taDataAnal @[1] { 
   UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
   };
};
    taDataGen @[2] { 
   UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
   };
};
    taImageProc @[3] { 
   UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
   };
};
  };

  Program_Group @.programs = [9] {
    Program @[0] { 
      ProgObjList @.objs = [2] {
	DataTable @[0] { 
	  DataTableCols @.data = [15] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	    float_Data @[8] { };
	    float_Data @[9] { };
	    float_Data @[10] { };
	    float_Data @[11] { };
	    float_Data @[12] { };
	    float_Data @[13] { };
	    float_Data @[14] { };
	  };
	};
	DataTable @[1] { 
	  DataTableCols @.data = [7] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	  };
	};
      };

      ProgType_List @.types = [1] {
	DynEnumType @[0] { 
	  DynEnumItem_List @.enums = [2] {
	    DynEnumItem @[0] { };
	    DynEnumItem @[1] { };
	  };
	};
      };

      ProgVar_List @.args = [0] {
      };

      ProgVar_List @.vars = [43] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
	ProgVar @[4] { };
	ProgVar @[5] { };
	ProgVar @[6] { };
	ProgVar @[7] { };
	ProgVar @[8] { };
	ProgVar @[9] { };
	ProgVar @[10] { };
	ProgVar @[11] { };
	ProgVar @[12] { };
	ProgVar @[13] { };
	ProgVar @[14] { };
	ProgVar @[15] { };
	ProgVar @[16] { };
	ProgVar @[17] { };
	ProgVar @[18] { };
	ProgVar @[19] { };
	ProgVar @[20] { };
	ProgVar @[21] { };
	ProgVar @[22] { };
	ProgVar @[23] { };
	ProgVar @[24] { };
	ProgVar @[25] { };
	ProgVar @[26] { };
	ProgVar @[27] { };
	ProgVar @[28] { };
	ProgVar @[29] { };
	ProgVar @[30] { };
	ProgVar @[31] { };
	ProgVar @[32] { };
	ProgVar @[33] { };
	ProgVar @[34] { };
	ProgVar @[35] { };
	ProgVar @[36] { };
	ProgVar @[37] { };
	ProgVar @[38] { };
	ProgVar @[39] { };
	ProgVar @[40] { };
	ProgVar @[41] { };
	ProgVar @[42] { };
      };

      Function_List @.functions = [5] {
	Function @[0] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [2] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    IfElse @[1] { 
	      ProgEl_List @.true_code = [2] {
		AssignExpr @[0] { };
		AssignExpr @[1] { };
	      };

	      ProgEl_List @.false_code = [2] {
		AssignExpr @[0] { };
		AssignExpr @[1] { };
	      };
	    };
	  };
	};
	Function @[1] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [12] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    AssignExpr @[3] { };
	    VarIncr @[4] { };
	    VarIncr @[5] { };
	    VarIncr @[6] { };
	    IfElse @[7] { 
	      ProgEl_List @.true_code = [1] {
		VarIncr @[0] { };
	      };

	      ProgEl_List @.false_code = [0] {
	      };
	    };
	    IfElse @[8] { 
	      ProgEl_List @.true_code = [2] {
		VarIncr @[0] { };
		VarIncr @[1] { };
	      };

	      ProgEl_List @.false_code = [0] {
	      };
	    };
	    VarIncr @[9] { };
	    AssignExpr @[10] { };
	    If @[11] { 
	      ProgEl_List @.true_code = [1] {
		AssignExpr @[0] { };
	      };
	    };
	  };
	};
	Function @[2] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [2] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    IfElse @[1] { 
	      ProgEl_List @.true_code = [1] {
		AssignExpr @[0] { };
	      };

	      ProgEl_List @.false_code = [1] {
		IfElse @[0] { 
		  ProgEl_List @.true_code = [1] {
		    AssignExpr @[0] { };
		  };

		  ProgEl_List @.false_code = [1] {
		    AssignExpr @[0] { };
		  };
		};
	      };
	    };
	  };
	};
	Function @[3] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [7] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AddNewDataRow @[1] { };
	    DataVarProg @[2] { };
	    DataVarProg @[3] { };
	    DataVarProg @[4] { };
	    DataVarProg @[5] { };
	    DoneWritingDataRow @[6] { };
	  };
	};
	Function @[4] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [12] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    AssignExpr @[5] { };
	    AssignExpr @[6] { };
	    AssignExpr @[7] { };
	    AssignExpr @[8] { };
	    AssignExpr @[9] { };
	    AssignExpr @[10] { };
	    AssignExpr @[11] { };
	  };
	};
      };

      ProgEl_List @.load_code = [0] {
      };

      ProgEl_List @.init_code = [0] {
      };

      ProgEl_List @.prog_code = [4] {
	ResetDataRows @[0] { };
	Switch @[1] { 
	  ProgEl_List @.cases = [2] {
	    CaseBlock @[0] { 
	      ProgEl_List @.prog_code = [4] {
		FunctionCall @[0] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		ForLoop @[1] { 
		  ProgEl_List @.loop_code = [4] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    FunctionCall @[1] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    FunctionCall @[2] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    StopStepPoint @[3] { };
		  };
		};
		FunctionCall @[2] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		FunctionCall @[3] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
	      };
	    };
	    CaseBlock @[1] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [4] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			ForLoop @[1] { 
			  ProgEl_List @.loop_code = [4] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    FunctionCall @[1] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    FunctionCall @[2] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    StopStepPoint @[3] { };
			  };
			};
			FunctionCall @[2] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			FunctionCall @[3] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	  };
	};
	DataGroupProg @[2] { 
	  DataOpList @.ops = [7] {
	    DataGroupEl @[0] { };
	    DataGroupEl @[1] { };
	    DataGroupEl @[2] { };
	    DataGroupEl @[3] { };
	    DataGroupEl @[4] { };
	    DataGroupEl @[5] { };
	    DataGroupEl @[6] { };
	  };
	};
	DataAnalCall @[3] { 
	  ProgArg_List @.meth_args = [3] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	  };
	};
      };
    };
    Program @[1] { 
      ProgObjList @.objs = [2] {
	DataTable @[0] { 
	  DataTableCols @.data = [13] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	    float_Data @[8] { };
	    float_Data @[9] { };
	    float_Data @[10] { };
	    float_Data @[11] { };
	    float_Data @[12] { };
	  };
	};
	DataTable @[1] { 
	  DataTableCols @.data = [5] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	  };
	};
      };

      ProgType_List @.types = [1] {
	DynEnumType @[0] { 
	  DynEnumItem_List @.enums = [2] {
	    DynEnumItem @[0] { };
	    DynEnumItem @[1] { };
	  };
	};
      };

      ProgVar_List @.args = [0] {
      };

      ProgVar_List @.vars = [37] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
	ProgVar @[4] { };
	ProgVar @[5] { };
	ProgVar @[6] { };
	ProgVar @[7] { };
	ProgVar @[8] { };
	ProgVar @[9] { };
	ProgVar @[10] { };
	ProgVar @[11] { };
	ProgVar @[12] { };
	ProgVar @[13] { };
	ProgVar @[14] { };
	ProgVar @[15] { };
	ProgVar @[16] { };
	ProgVar @[17] { };
	ProgVar @[18] { };
	ProgVar @[19] { };
	ProgVar @[20] { };
	ProgVar @[21] { };
	ProgVar @[22] { };
	ProgVar @[23] { };
	ProgVar @[24] { };
	ProgVar @[25] { };
	ProgVar @[26] { };
	ProgVar @[27] { };
	ProgVar @[28] { };
	ProgVar @[29] { };
	ProgVar @[30] { };
	ProgVar @[31] { };
	ProgVar @[32] { };
	ProgVar @[33] { };
	ProgVar @[34] { };
	ProgVar @[35] { };
	ProgVar @[36] { };
      };

      Function_List @.functions = [4] {
	Function @[0] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [12] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    AssignExpr @[5] { };
	    VarIncr @[6] { };
	    VarIncr @[7] { };
	    VarIncr @[8] { };
	    IfElse @[9] { 
	      ProgEl_List @.true_code = [1] {
		VarIncr @[0] { };
	      };

	      ProgEl_List @.false_code = [0] {
	      };
	    };
	    IfElse @[10] { 
	      ProgEl_List @.true_code = [2] {
		VarIncr @[0] { };
		VarIncr @[1] { };
	      };

	      ProgEl_List @.false_code = [0] {
	      };
	    };
	    If @[11] { 
	      ProgEl_List @.true_code = [1] {
		AssignExpr @[0] { };
	      };
	    };
	  };
	};
	Function @[1] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [2] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    IfElse @[1] { 
	      ProgEl_List @.true_code = [1] {
		AssignExpr @[0] { };
	      };

	      ProgEl_List @.false_code = [1] {
		IfElse @[0] { 
		  ProgEl_List @.true_code = [1] {
		    AssignExpr @[0] { };
		  };

		  ProgEl_List @.false_code = [1] {
		    AssignExpr @[0] { };
		  };
		};
	      };
	    };
	  };
	};
	Function @[2] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [6] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AddNewDataRow @[1] { };
	    DataVarProg @[2] { };
	    DataVarProg @[3] { };
	    DataVarProg @[4] { };
	    DataVarProg @[5] { };
	  };
	};
	Function @[3] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [6] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    AssignExpr @[5] { };
	  };
	};
      };

      ProgEl_List @.load_code = [0] {
      };

      ProgEl_List @.init_code = [0] {
      };

      ProgEl_List @.prog_code = [3] {
	ResetDataRows @[0] { };
	Switch @[1] { 
	  ProgEl_List @.cases = [2] {
	    CaseBlock @[0] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [8] {
		    IfContinue @[0] { };
		    AssignExpr @[1] { };
		    AssignExpr @[2] { };
		    AssignExpr @[3] { };
		    FunctionCall @[4] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    ForLoop @[5] { 
		      ProgEl_List @.loop_code = [3] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			FunctionCall @[1] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			StopStepPoint @[2] { };
		      };
		    };
		    FunctionCall @[6] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    FunctionCall @[7] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[1] { 
	      ProgEl_List @.prog_code = [12] {
		Comment @[0] { };
		AssignExpr @[1] { };
		AssignExpr @[2] { };
		AssignExpr @[3] { };
		FunctionCall @[4] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		ForLoop @[5] { 
		  ProgEl_List @.loop_code = [6] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    FunctionCall @[1] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    If @[2] { 
		      ProgEl_List @.true_code = [1] {
			AssignExpr @[0] { };
		      };
		    };
		    StopStepPoint @[3] { };
		    FunctionCall @[4] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    FunctionCall @[5] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		  };
		};
		Comment @[6] { };
		AssignExpr @[7] { };
		AssignExpr @[8] { };
		AssignExpr @[9] { };
		FunctionCall @[10] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		ForLoop @[11] { 
		  ProgEl_List @.loop_code = [6] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    FunctionCall @[1] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    If @[2] { 
		      ProgEl_List @.true_code = [1] {
			AssignExpr @[0] { };
		      };
		    };
		    StopStepPoint @[3] { };
		    FunctionCall @[4] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    FunctionCall @[5] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		  };
		};
	      };
	    };
	  };
	};
	DataGroupProg @[2] { 
	  DataOpList @.ops = [5] {
	    DataGroupEl @[0] { };
	    DataGroupEl @[1] { };
	    DataGroupEl @[2] { };
	    DataGroupEl @[3] { };
	    DataGroupEl @[4] { };
	  };
	};
      };
    };
    Program @[2] { 
      ProgObjList @.objs = [8] {
	DataTable @[0] { 
	  DataTableCols @.data = [39] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	    float_Data @[8] { };
	    float_Data @[9] { };
	    float_Data @[10] { };
	    float_Data @[11] { };
	    float_Data @[12] { };
	    float_Data @[13] { };
	    float_Data @[14] { };
	    float_Data @[15] { };
	    float_Data @[16] { };
	    float_Data @[17] { };
	    float_Data @[18] { };
	    float_Data @[19] { };
	    float_Data @[20] { };
	    float_Data @[21] { };
	    float_Data @[22] { };
	    float_Data @[23] { };
	    float_Data @[24] { };
	    float_Data @[25] { };
	    float_Data @[26] { };
	    float_Data @[27] { };
	    float_Data @[28] { };
	    float_Data @[29] { };
	    float_Data @[30] { };
	    float_Data @[31] { };
	    float_Data @[32] { };
	    float_Data @[33] { };
	    float_Data @[34] { };
	    float_Data @[35] { };
	    float_Data @[36] { };
	    float_Data @[37] { };
	    float_Data @[38] { };
	  };
	};
	DataTable @[1] { 
	  DataTableCols @.data = [39] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	    float_Data @[8] { };
	    float_Data @[9] { };
	    float_Data @[10] { };
	    float_Data @[11] { };
	    float_Data @[12] { };
	    float_Data @[13] { };
	    float_Data @[14] { };
	    float_Data @[15] { };
	    float_Data @[16] { };
	    float_Data @[17] { };
	    float_Data @[18] { };
	    float_Data @[19] { };
	    float_Data @[20] { };
	    float_Data @[21] { };
	    float_Data @[22] { };
	    float_Data @[23] { };
	    float_Data @[24] { };
	    float_Data @[25] { };
	    float_Data @[26] { };
	    float_Data @[27] { };
	    float_Data @[28] { };
	    float_Data @[29] { };
	    float_Data @[30] { };
	    float_Data @[31] { };
	    float_Data @[32] { };
	    float_Data @[33] { };
	    float_Data @[34] { };
	    float_Data @[35] { };
	    float_Data @[36] { };
	    float_Data @[37] { };
	    float_Data @[38] { };
	  };
	};
	DataTable @[2] { 
	  DataTableCols @.data = [8] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	  };
	};
	DataTable @[3] { 
	  DataTableCols @.data = [8] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	  };
	};
	DataTable @[4] { 
	  DataTableCols @.data = [8] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	  };
	};
	DataTable @[5] { 
	  DataTableCols @.data = [7] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	  };
	};
	DataTable @[6] { 
	  DataTableCols @.data = [1] {
	    float_Data @[0] { };
	  };
	};
	DataTable @[7] { 
	  DataTableCols @.data = [1] {
	    float_Data @[0] { };
	  };
	};
      };

      ProgType_List @.types = [1] {
	DynEnumType @[0] { 
	  DynEnumItem_List @.enums = [10] {
	    DynEnumItem @[0] { };
	    DynEnumItem @[1] { };
	    DynEnumItem @[2] { };
	    DynEnumItem @[3] { };
	    DynEnumItem @[4] { };
	    DynEnumItem @[5] { };
	    DynEnumItem @[6] { };
	    DynEnumItem @[7] { };
	    DynEnumItem @[8] { };
	    DynEnumItem @[9] { };
	  };
	};
      };

      ProgVar_List @.args = [0] {
      };

      ProgVar_List @.vars = [105] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
	ProgVar @[4] { };
	ProgVar @[5] { };
	ProgVar @[6] { };
	ProgVar @[7] { };
	ProgVar @[8] { };
	ProgVar @[9] { };
	ProgVar @[10] { };
	ProgVar @[11] { };
	ProgVar @[12] { };
	ProgVar @[13] { };
	ProgVar @[14] { };
	ProgVar @[15] { };
	ProgVar @[16] { };
	ProgVar @[17] { };
	ProgVar @[18] { };
	ProgVar @[19] { };
	ProgVar @[20] { };
	ProgVar @[21] { };
	ProgVar @[22] { };
	ProgVar @[23] { };
	ProgVar @[24] { };
	ProgVar @[25] { };
	ProgVar @[26] { };
	ProgVar @[27] { };
	ProgVar @[28] { };
	ProgVar @[29] { };
	ProgVar @[30] { };
	ProgVar @[31] { };
	ProgVar @[32] { };
	ProgVar @[33] { };
	ProgVar @[34] { };
	ProgVar @[35] { };
	ProgVar @[36] { };
	ProgVar @[37] { };
	ProgVar @[38] { };
	ProgVar @[39] { };
	ProgVar @[40] { };
	ProgVar @[41] { };
	ProgVar @[42] { };
	ProgVar @[43] { };
	ProgVar @[44] { };
	ProgVar @[45] { };
	ProgVar @[46] { };
	ProgVar @[47] { };
	ProgVar @[48] { };
	ProgVar @[49] { };
	ProgVar @[50] { };
	ProgVar @[51] { };
	ProgVar @[52] { };
	ProgVar @[53] { };
	ProgVar @[54] { };
	ProgVar @[55] { };
	ProgVar @[56] { };
	ProgVar @[57] { };
	ProgVar @[58] { };
	ProgVar @[59] { };
	ProgVar @[60] { };
	ProgVar @[61] { };
	ProgVar @[62] { };
	ProgVar @[63] { };
	ProgVar @[64] { };
	ProgVar @[65] { };
	ProgVar @[66] { };
	ProgVar @[67] { };
	ProgVar @[68] { };
	ProgVar @[69] { };
	ProgVar @[70] { };
	ProgVar @[71] { };
	ProgVar @[72] { };
	ProgVar @[73] { };
	ProgVar @[74] { };
	ProgVar @[75] { };
	ProgVar @[76] { };
	ProgVar @[77] { };
	ProgVar @[78] { };
	ProgVar @[79] { };
	ProgVar @[80] { };
	ProgVar @[81] { };
	ProgVar @[82] { };
	ProgVar @[83] { };
	ProgVar @[84] { };
	ProgVar @[85] { };
	ProgVar @[86] { };
	ProgVar @[87] { };
	ProgVar @[88] { };
	ProgVar @[89] { };
	ProgVar @[90] { };
	ProgVar @[91] { };
	ProgVar @[92] { };
	ProgVar @[93] { };
	ProgVar @[94] { };
	ProgVar @[95] { };
	ProgVar @[96] { };
	ProgVar @[97] { };
	ProgVar @[98] { };
	ProgVar @[99] { };
	ProgVar @[100] { };
	ProgVar @[101] { };
	ProgVar @[102] { };
	ProgVar @[103] { };
	ProgVar @[104] { };
      };

      Function_List @.functions = [11] {
	Function @[0] { 
	  ProgVar_List @.args = [4] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	  };

	  ProgEl_List @.fun_code = [3] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [1] {
		ProgVar @[0] { };
	      };
	    };
	    AssignExpr @[1] { };
	    ReturnExpr @[2] { };
	  };
	};
	Function @[1] { 
	  ProgVar_List @.args = [4] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	  };

	  ProgEl_List @.fun_code = [2] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    ReturnExpr @[1] { };
	  };
	};
	Function @[2] { 
	  ProgVar_List @.args = [4] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	  };

	  ProgEl_List @.fun_code = [3] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    If @[1] { 
	      ProgEl_List @.true_code = [1] {
		ReturnExpr @[0] { };
	      };
	    };
	    ReturnExpr @[2] { };
	  };
	};
	Function @[3] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [3] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [7] {
		ProgVar @[0] { };
		ProgVar @[1] { };
		ProgVar @[2] { };
		ProgVar @[3] { };
		ProgVar @[4] { };
		ProgVar @[5] { };
		ProgVar @[6] { };
	      };
	    };
	    ResetDataRows @[1] { };
	    ForLoop @[2] { 
	      ProgEl_List @.loop_code = [8] {
		FunctionCall @[0] { 
		  ProgArg_List @.fun_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
		FunctionCall @[1] { 
		  ProgArg_List @.fun_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
		FunctionCall @[2] { 
		  ProgArg_List @.fun_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
		FunctionCall @[3] { 
		  ProgArg_List @.fun_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
		FunctionCall @[4] { 
		  ProgArg_List @.fun_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
		AddNewDataRow @[5] { };
		DataVarProg @[6] { };
		DataVarProg @[7] { };
	      };
	    };
	  };
	};
	Function @[4] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [22] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    Comment @[1] { };
	    FunctionCall @[2] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[3] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[4] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[5] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[6] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[7] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[8] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    AssignExpr @[9] { };
	    AssignExpr @[10] { };
	    AssignExpr @[11] { };
	    AssignExpr @[12] { };
	    AssignExpr @[13] { };
	    AssignExpr @[14] { };
	    VarIncr @[15] { };
	    VarIncr @[16] { };
	    VarIncr @[17] { };
	    VarIncr @[18] { };
	    VarIncr @[19] { };
	    VarIncr @[20] { };
	    VarIncr @[21] { };
	  };
	};
	Function @[5] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [17] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    IfReturn @[1] { };
	    AddNewDataRow @[2] { };
	    DataVarProg @[3] { };
	    DataVarProg @[4] { };
	    DataVarProg @[5] { };
	    DataVarProg @[6] { };
	    DataVarProg @[7] { };
	    DataVarProg @[8] { };
	    DataVarProg @[9] { };
	    DataVarProg @[10] { };
	    DataVarProg @[11] { };
	    DataVarProg @[12] { };
	    DataVarProg @[13] { };
	    DataVarProg @[14] { };
	    DataVarProg @[15] { };
	    DataVarProg @[16] { };
	  };
	};
	Function @[6] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [8] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    AssignExpr @[5] { };
	    AssignExpr @[6] { };
	    AssignExpr @[7] { };
	  };
	};
	Function @[7] { 
	  ProgVar_List @.args = [4] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	  };

	  ProgEl_List @.fun_code = [4] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [3] {
		ProgVar @[0] { };
		ProgVar @[1] { };
		ProgVar @[2] { };
	      };
	    };
	    AssignExpr @[1] { };
	    ForLoop @[2] { 
	      ProgEl_List @.loop_code = [2] {
		RandomCall @[0] { 
		  ProgArg_List @.meth_args = [1] {
		    ProgArg @[0] { };
		  };
		};
		If @[1] { 
		  ProgEl_List @.true_code = [3] {
		    AddNewDataRow @[0] { };
		    DataVarProg @[1] { };
		    VarIncr @[2] { };
		  };
		};
	      };
	    };
	    ReturnExpr @[3] { };
	  };
	};
	Function @[8] { 
	  ProgVar_List @.args = [6] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	    ProgVar @[4] { };
	    ProgVar @[5] { };
	  };

	  ProgEl_List @.fun_code = [15] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    ResetDataRows @[1] { };
	    ResetDataRows @[2] { };
	    FunctionCall @[3] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[4] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[5] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[6] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    AssignExpr @[7] { };
	    AssignExpr @[8] { };
	    AssignExpr @[9] { };
	    AssignExpr @[10] { };
	    AssignExpr @[11] { };
	    AssignExpr @[12] { };
	    AssignExpr @[13] { };
	    AssignExpr @[14] { };
	  };
	};
	Function @[9] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [11] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [3] {
		ProgVar @[0] { };
		ProgVar @[1] { };
		ProgVar @[2] { };
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    ForLoop @[5] { 
	      ProgEl_List @.loop_code = [5] {
		DataVarProg @[0] { };
		IfBreak @[1] { };
		MemberMethodCall @[2] { 
		  ProgArg_List @.meth_args = [1] {
		    ProgArg @[0] { };
		  };
		};
		VarIncr @[3] { };
		AssignExpr @[4] { };
	      };
	    };
	    ForLoop @[6] { 
	      ProgEl_List @.loop_code = [5] {
		DataVarProg @[0] { };
		IfBreak @[1] { };
		MemberMethodCall @[2] { 
		  ProgArg_List @.meth_args = [1] {
		    ProgArg @[0] { };
		  };
		};
		VarIncr @[3] { };
		AssignExpr @[4] { };
	      };
	    };
	    AssignExpr @[7] { };
	    AssignExpr @[8] { };
	    AssignExpr @[9] { };
	    VarIncr @[10] { };
	  };
	};
	Function @[10] { 
	  ProgVar_List @.args = [1] {
	    ProgVar @[0] { };
	  };

	  ProgEl_List @.fun_code = [2] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    ForLoop @[1] { 
	      ProgEl_List @.loop_code = [3] {
		FunctionCall @[0] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		If @[1] { 
		  ProgEl_List @.true_code = [1] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		  };
		};
		FunctionCall @[2] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
	      };
	    };
	  };
	};
      };

      ProgEl_List @.load_code = [0] {
      };

      ProgEl_List @.init_code = [0] {
      };

      ProgEl_List @.prog_code = [9] {
	If @[0] { 
	  ProgEl_List @.true_code = [1] {
	    ResetDataRows @[0] { };
	  };
	};
	AssignExpr @[1] { };
	AssignExpr @[2] { };
	Switch @[3] { 
	  ProgEl_List @.cases = [10] {
	    CaseBlock @[0] { 
	      ProgEl_List @.prog_code = [3] {
		FunctionCall @[0] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		FunctionCall @[1] { 
		  ProgArg_List @.fun_args = [6] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		    ProgArg @[4] { };
		    ProgArg @[5] { };
		  };
		};
		FunctionCall @[2] { 
		  ProgArg_List @.fun_args = [1] {
		    ProgArg @[0] { };
		  };
		};
	      };
	    };
	    CaseBlock @[1] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [3] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    FunctionCall @[1] { 
		      ProgArg_List @.fun_args = [6] {
			ProgArg @[0] { };
			ProgArg @[1] { };
			ProgArg @[2] { };
			ProgArg @[3] { };
			ProgArg @[4] { };
			ProgArg @[5] { };
		      };
		    };
		    FunctionCall @[2] { 
		      ProgArg_List @.fun_args = [1] {
			ProgArg @[0] { };
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[2] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [3] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			FunctionCall @[1] { 
			  ProgArg_List @.fun_args = [6] {
			    ProgArg @[0] { };
			    ProgArg @[1] { };
			    ProgArg @[2] { };
			    ProgArg @[3] { };
			    ProgArg @[4] { };
			    ProgArg @[5] { };
			  };
			};
			FunctionCall @[2] { 
			  ProgArg_List @.fun_args = [1] {
			    ProgArg @[0] { };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[3] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [3] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			FunctionCall @[1] { 
			  ProgArg_List @.fun_args = [6] {
			    ProgArg @[0] { };
			    ProgArg @[1] { };
			    ProgArg @[2] { };
			    ProgArg @[3] { };
			    ProgArg @[4] { };
			    ProgArg @[5] { };
			  };
			};
			FunctionCall @[2] { 
			  ProgArg_List @.fun_args = [1] {
			    ProgArg @[0] { };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[4] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [1] {
			ForLoop @[0] { 
			  ProgEl_List @.loop_code = [3] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    FunctionCall @[1] { 
			      ProgArg_List @.fun_args = [6] {
				ProgArg @[0] { };
				ProgArg @[1] { };
				ProgArg @[2] { };
				ProgArg @[3] { };
				ProgArg @[4] { };
				ProgArg @[5] { };
			      };
			    };
			    FunctionCall @[2] { 
			      ProgArg_List @.fun_args = [1] {
				ProgArg @[0] { };
			      };
			    };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[5] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [1] {
			ForLoop @[0] { 
			  ProgEl_List @.loop_code = [3] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    FunctionCall @[1] { 
			      ProgArg_List @.fun_args = [6] {
				ProgArg @[0] { };
				ProgArg @[1] { };
				ProgArg @[2] { };
				ProgArg @[3] { };
				ProgArg @[4] { };
				ProgArg @[5] { };
			      };
			    };
			    FunctionCall @[2] { 
			      ProgArg_List @.fun_args = [1] {
				ProgArg @[0] { };
			      };
			    };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[6] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [1] {
			ForLoop @[0] { 
			  ProgEl_List @.loop_code = [3] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    FunctionCall @[1] { 
			      ProgArg_List @.fun_args = [6] {
				ProgArg @[0] { };
				ProgArg @[1] { };
				ProgArg @[2] { };
				ProgArg @[3] { };
				ProgArg @[4] { };
				ProgArg @[5] { };
			      };
			    };
			    FunctionCall @[2] { 
			      ProgArg_List @.fun_args = [1] {
				ProgArg @[0] { };
			      };
			    };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[7] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [1] {
			ForLoop @[0] { 
			  ProgEl_List @.loop_code = [3] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    FunctionCall @[1] { 
			      ProgArg_List @.fun_args = [6] {
				ProgArg @[0] { };
				ProgArg @[1] { };
				ProgArg @[2] { };
				ProgArg @[3] { };
				ProgArg @[4] { };
				ProgArg @[5] { };
			      };
			    };
			    FunctionCall @[2] { 
			      ProgArg_List @.fun_args = [1] {
				ProgArg @[0] { };
			      };
			    };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[8] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [1] {
			ForLoop @[0] { 
			  ProgEl_List @.loop_code = [1] {
			    ForLoop @[0] { 
			      ProgEl_List @.loop_code = [1] {
				ForLoop @[0] { 
				  ProgEl_List @.loop_code = [3] {
				    FunctionCall @[0] { 
				      ProgArg_List @.fun_args = [0] {
				      };
				    };
				    FunctionCall @[1] { 
				      ProgArg_List @.fun_args = [6] {
					ProgArg @[0] { };
					ProgArg @[1] { };
					ProgArg @[2] { };
					ProgArg @[3] { };
					ProgArg @[4] { };
					ProgArg @[5] { };
				      };
				    };
				    FunctionCall @[2] { 
				      ProgArg_List @.fun_args = [1] {
					ProgArg @[0] { };
				      };
				    };
				  };
				};
			      };
			    };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[9] { 
	      ProgEl_List @.prog_code = [1] {
		PrintExpr @[0] { };
	      };
	    };
	  };
	};
	DataSelectRowsProg @[4] { 
	  DataOpList @.ops = [1] {
	    DataSelectEl @[0] { };
	  };
	};
	DataGroupProg @[5] { 
	  DataOpList @.ops = [8] {
	    DataGroupEl @[0] { };
	    DataGroupEl @[1] { };
	    DataGroupEl @[2] { };
	    DataGroupEl @[3] { };
	    DataGroupEl @[4] { };
	    DataGroupEl @[5] { };
	    DataGroupEl @[6] { };
	    DataGroupEl @[7] { };
	  };
	};
	DataGroupProg @[6] { 
	  DataOpList @.ops = [8] {
	    DataGroupEl @[0] { };
	    DataGroupEl @[1] { };
	    DataGroupEl @[2] { };
	    DataGroupEl @[3] { };
	    DataGroupEl @[4] { };
	    DataGroupEl @[5] { };
	    DataGroupEl @[6] { };
	    DataGroupEl @[7] { };
	  };
	};
	DataGroupProg @[7] { 
	  DataOpList @.ops = [8] {
	    DataGroupEl @[0] { };
	    DataGroupEl @[1] { };
	    DataGroupEl @[2] { };
	    DataGroupEl @[3] { };
	    DataGroupEl @[4] { };
	    DataGroupEl @[5] { };
	    DataGroupEl @[6] { };
	    DataGroupEl @[7] { };
	  };
	};
	DataProcCall @[8] { 
	  ProgArg_List @.meth_args = [2] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	  };
	};
      };
    };
    Program @[3] { 
      ProgObjList @.objs = [9] {
	DataTable @[0] { 
	  DataTableCols @.data = [26] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	    float_Data @[8] { };
	    float_Data @[9] { };
	    float_Data @[10] { };
	    float_Data @[11] { };
	    float_Data @[12] { };
	    float_Data @[13] { };
	    float_Data @[14] { };
	    float_Data @[15] { };
	    float_Data @[16] { };
	    float_Data @[17] { };
	    float_Data @[18] { };
	    float_Data @[19] { };
	    float_Data @[20] { };
	    float_Data @[21] { };
	    float_Data @[22] { };
	    float_Data @[23] { };
	    float_Data @[24] { };
	    float_Data @[25] { };
	  };
	};
	DataTable @[1] { 
	  DataTableCols @.data = [26] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	    float_Data @[8] { };
	    float_Data @[9] { };
	    float_Data @[10] { };
	    float_Data @[11] { };
	    float_Data @[12] { };
	    float_Data @[13] { };
	    float_Data @[14] { };
	    float_Data @[15] { };
	    float_Data @[16] { };
	    float_Data @[17] { };
	    float_Data @[18] { };
	    float_Data @[19] { };
	    float_Data @[20] { };
	    float_Data @[21] { };
	    float_Data @[22] { };
	    float_Data @[23] { };
	    float_Data @[24] { };
	    float_Data @[25] { };
	  };
	};
	DataTable @[2] { 
	  DataTableCols @.data = [8] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	  };
	};
	DataTable @[3] { 
	  DataTableCols @.data = [8] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	  };
	};
	DataTable @[4] { 
	  DataTableCols @.data = [8] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	  };
	};
	DataTable @[5] { 
	  DataTableCols @.data = [1] {
	    float_Data @[0] { };
	  };
	};
	DataTable @[6] { 
	  DataTableCols @.data = [1] {
	    float_Data @[0] { };
	  };
	};
	DataTable @[7] { 
	  DataTableCols @.data = [27] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	    float_Data @[8] { };
	    float_Data @[9] { };
	    float_Data @[10] { };
	    float_Data @[11] { };
	    float_Data @[12] { };
	    float_Data @[13] { };
	    float_Data @[14] { };
	    float_Data @[15] { };
	    float_Data @[16] { };
	    float_Data @[17] { };
	    float_Data @[18] { };
	    float_Data @[19] { };
	    float_Data @[20] { };
	    float_Data @[21] { };
	    float_Data @[22] { };
	    float_Data @[23] { };
	    float_Data @[24] { };
	    float_Data @[25] { };
	    float_Data @[26] { };
	  };
	};
	DataTable @[8] { 
	  DataTableCols @.data = [27] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	    float_Data @[8] { };
	    float_Data @[9] { };
	    float_Data @[10] { };
	    float_Data @[11] { };
	    float_Data @[12] { };
	    float_Data @[13] { };
	    float_Data @[14] { };
	    float_Data @[15] { };
	    float_Data @[16] { };
	    float_Data @[17] { };
	    float_Data @[18] { };
	    float_Data @[19] { };
	    float_Data @[20] { };
	    float_Data @[21] { };
	    float_Data @[22] { };
	    float_Data @[23] { };
	    float_Data @[24] { };
	    float_Data @[25] { };
	    float_Data @[26] { };
	  };
	};
      };

      ProgType_List @.types = [2] {
	DynEnumType @[0] { 
	  DynEnumItem_List @.enums = [14] {
	    DynEnumItem @[0] { };
	    DynEnumItem @[1] { };
	    DynEnumItem @[2] { };
	    DynEnumItem @[3] { };
	    DynEnumItem @[4] { };
	    DynEnumItem @[5] { };
	    DynEnumItem @[6] { };
	    DynEnumItem @[7] { };
	    DynEnumItem @[8] { };
	    DynEnumItem @[9] { };
	    DynEnumItem @[10] { };
	    DynEnumItem @[11] { };
	    DynEnumItem @[12] { };
	    DynEnumItem @[13] { };
	  };
	};
	DynEnumType @[1] { 
	  DynEnumItem_List @.enums = [2] {
	    DynEnumItem @[0] { };
	    DynEnumItem @[1] { };
	  };
	};
      };

      ProgVar_List @.args = [0] {
      };

      ProgVar_List @.vars = [102] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
	ProgVar @[4] { };
	ProgVar @[5] { };
	ProgVar @[6] { };
	ProgVar @[7] { };
	ProgVar @[8] { };
	ProgVar @[9] { };
	ProgVar @[10] { };
	ProgVar @[11] { };
	ProgVar @[12] { };
	ProgVar @[13] { };
	ProgVar @[14] { };
	ProgVar @[15] { };
	ProgVar @[16] { };
	ProgVar @[17] { };
	ProgVar @[18] { };
	ProgVar @[19] { };
	ProgVar @[20] { };
	ProgVar @[21] { };
	ProgVar @[22] { };
	ProgVar @[23] { };
	ProgVar @[24] { };
	ProgVar @[25] { };
	ProgVar @[26] { };
	ProgVar @[27] { };
	ProgVar @[28] { };
	ProgVar @[29] { };
	ProgVar @[30] { };
	ProgVar @[31] { };
	ProgVar @[32] { };
	ProgVar @[33] { };
	ProgVar @[34] { };
	ProgVar @[35] { };
	ProgVar @[36] { };
	ProgVar @[37] { };
	ProgVar @[38] { };
	ProgVar @[39] { };
	ProgVar @[40] { };
	ProgVar @[41] { };
	ProgVar @[42] { };
	ProgVar @[43] { };
	ProgVar @[44] { };
	ProgVar @[45] { };
	ProgVar @[46] { };
	ProgVar @[47] { };
	ProgVar @[48] { };
	ProgVar @[49] { };
	ProgVar @[50] { };
	ProgVar @[51] { };
	ProgVar @[52] { };
	ProgVar @[53] { };
	ProgVar @[54] { };
	ProgVar @[55] { };
	ProgVar @[56] { };
	ProgVar @[57] { };
	ProgVar @[58] { };
	ProgVar @[59] { };
	ProgVar @[60] { };
	ProgVar @[61] { };
	ProgVar @[62] { };
	ProgVar @[63] { };
	ProgVar @[64] { };
	ProgVar @[65] { };
	ProgVar @[66] { };
	ProgVar @[67] { };
	ProgVar @[68] { };
	ProgVar @[69] { };
	ProgVar @[70] { };
	ProgVar @[71] { };
	ProgVar @[72] { };
	ProgVar @[73] { };
	ProgVar @[74] { };
	ProgVar @[75] { };
	ProgVar @[76] { };
	ProgVar @[77] { };
	ProgVar @[78] { };
	ProgVar @[79] { };
	ProgVar @[80] { };
	ProgVar @[81] { };
	ProgVar @[82] { };
	ProgVar @[83] { };
	ProgVar @[84] { };
	ProgVar @[85] { };
	ProgVar @[86] { };
	ProgVar @[87] { };
	ProgVar @[88] { };
	ProgVar @[89] { };
	ProgVar @[90] { };
	ProgVar @[91] { };
	ProgVar @[92] { };
	ProgVar @[93] { };
	ProgVar @[94] { };
	ProgVar @[95] { };
	ProgVar @[96] { };
	ProgVar @[97] { };
	ProgVar @[98] { };
	ProgVar @[99] { };
	ProgVar @[100] { };
	ProgVar @[101] { };
      };

      Function_List @.functions = [13] {
	Function @[0] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [13] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    AssignExpr @[5] { };
	    AssignExpr @[6] { };
	    If @[7] { 
	      ProgEl_List @.true_code = [3] {
		AssignExpr @[0] { };
		VarIncr @[1] { };
		VarIncr @[2] { };
	      };
	    };
	    If @[8] { 
	      ProgEl_List @.true_code = [3] {
		AssignExpr @[0] { };
		VarIncr @[1] { };
		VarIncr @[2] { };
	      };
	    };
	    VarIncr @[9] { };
	    VarIncr @[10] { };
	    VarIncr @[11] { };
	    VarIncr @[12] { };
	  };
	};
	Function @[1] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [3] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    VarIncr @[2] { };
	  };
	};
	Function @[2] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [12] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    IfReturn @[1] { };
	    AddNewDataRow @[2] { };
	    DataVarProg @[3] { };
	    DataVarProg @[4] { };
	    DataVarProg @[5] { };
	    DataVarProg @[6] { };
	    DataVarProg @[7] { };
	    DataVarProg @[8] { };
	    DataVarProg @[9] { };
	    DataVarProg @[10] { };
	    DoneWritingDataRow @[11] { };
	  };
	};
	Function @[3] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [12] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    IfElse @[1] { 
	      ProgEl_List @.true_code = [1] {
		VarIncr @[0] { };
	      };

	      ProgEl_List @.false_code = [0] {
	      };
	    };
	    IfElse @[2] { 
	      ProgEl_List @.true_code = [2] {
		VarIncr @[0] { };
		VarIncr @[1] { };
	      };

	      ProgEl_List @.false_code = [0] {
	      };
	    };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    AssignExpr @[5] { };
	    AssignExpr @[6] { };
	    VarIncr @[7] { };
	    VarIncr @[8] { };
	    VarIncr @[9] { };
	    VarIncr @[10] { };
	    IfElse @[11] { 
	      ProgEl_List @.true_code = [1] {
		If @[0] { 
		  ProgEl_List @.true_code = [1] {
		    AssignExpr @[0] { };
		  };
		};
	      };

	      ProgEl_List @.false_code = [1] {
		AssignExpr @[0] { };
	      };
	    };
	  };
	};
	Function @[4] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [3] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    IfElse @[1] { 
	      ProgEl_List @.true_code = [1] {
		AssignExpr @[0] { };
	      };

	      ProgEl_List @.false_code = [1] {
		IfElse @[0] { 
		  ProgEl_List @.true_code = [1] {
		    AssignExpr @[0] { };
		  };

		  ProgEl_List @.false_code = [1] {
		    IfElse @[0] { 
		      ProgEl_List @.true_code = [1] {
			AssignExpr @[0] { };
		      };

		      ProgEl_List @.false_code = [1] {
			AssignExpr @[0] { };
		      };
		    };
		  };
		};
	      };
	    };
	    VarIncr @[2] { };
	  };
	};
	Function @[5] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [13] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    IfReturn @[1] { };
	    AddNewDataRow @[2] { };
	    DataVarProg @[3] { };
	    DataVarProg @[4] { };
	    DataVarProg @[5] { };
	    DataVarProg @[6] { };
	    DataVarProg @[7] { };
	    DataVarProg @[8] { };
	    DataVarProg @[9] { };
	    DataVarProg @[10] { };
	    DataVarProg @[11] { };
	    DoneWritingDataRow @[12] { };
	  };
	};
	Function @[6] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [13] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    AssignExpr @[5] { };
	    AssignExpr @[6] { };
	    AssignExpr @[7] { };
	    AssignExpr @[8] { };
	    AssignExpr @[9] { };
	    AssignExpr @[10] { };
	    AssignExpr @[11] { };
	    AssignExpr @[12] { };
	  };
	};
	Function @[7] { 
	  ProgVar_List @.args = [4] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	  };

	  ProgEl_List @.fun_code = [5] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [3] {
		ProgVar @[0] { };
		ProgVar @[1] { };
		ProgVar @[2] { };
	      };
	    };
	    AssignExpr @[1] { };
	    ForLoop @[2] { 
	      ProgEl_List @.loop_code = [2] {
		RandomCall @[0] { 
		  ProgArg_List @.meth_args = [1] {
		    ProgArg @[0] { };
		  };
		};
		If @[1] { 
		  ProgEl_List @.true_code = [3] {
		    AddNewDataRow @[0] { };
		    DataVarProg @[1] { };
		    VarIncr @[2] { };
		  };
		};
	      };
	    };
	    DoneWritingDataRow @[3] { };
	    ReturnExpr @[4] { };
	  };
	};
	Function @[8] { 
	  ProgVar_List @.args = [2] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	  };

	  ProgEl_List @.fun_code = [9] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [1] {
		ProgVar @[0] { };
	      };
	    };
	    ResetDataRows @[1] { };
	    ResetDataRows @[2] { };
	    AssignExpr @[3] { };
	    AddNewDataRow @[4] { };
	    DataVarProg @[5] { };
	    AssignExpr @[6] { };
	    AddNewDataRow @[7] { };
	    DataVarProg @[8] { };
	  };
	};
	Function @[9] { 
	  ProgVar_List @.args = [6] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	    ProgVar @[4] { };
	    ProgVar @[5] { };
	  };

	  ProgEl_List @.fun_code = [15] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    ResetDataRows @[1] { };
	    ResetDataRows @[2] { };
	    FunctionCall @[3] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[4] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[5] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[6] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    AssignExpr @[7] { };
	    AssignExpr @[8] { };
	    AssignExpr @[9] { };
	    AssignExpr @[10] { };
	    AssignExpr @[11] { };
	    AssignExpr @[12] { };
	    AssignExpr @[13] { };
	    AssignExpr @[14] { };
	  };
	};
	Function @[10] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [7] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [3] {
		ProgVar @[0] { };
		ProgVar @[1] { };
		ProgVar @[2] { };
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    ForLoop @[3] { 
	      ProgEl_List @.loop_code = [3] {
		DataVarProg @[0] { };
		IfBreak @[1] { };
		AssignExpr @[2] { };
	      };
	    };
	    ForLoop @[4] { 
	      ProgEl_List @.loop_code = [3] {
		DataVarProg @[0] { };
		IfBreak @[1] { };
		AssignExpr @[2] { };
	      };
	    };
	    AssignExpr @[5] { };
	    AssignExpr @[6] { };
	  };
	};
	Function @[11] { 
	  ProgVar_List @.args = [1] {
	    ProgVar @[0] { };
	  };

	  ProgEl_List @.fun_code = [3] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    Switch @[1] { 
	      ProgEl_List @.cases = [2] {
		CaseBlock @[0] { 
		  ProgEl_List @.prog_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [4] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			FunctionCall @[1] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			If @[2] { 
			  ProgEl_List @.true_code = [1] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			  };
			};
			FunctionCall @[3] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
		      };
		    };
		  };
		};
		CaseBlock @[1] { 
		  ProgEl_List @.prog_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [4] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			FunctionCall @[1] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			If @[2] { 
			  ProgEl_List @.true_code = [1] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			  };
			};
			FunctionCall @[3] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    StopStepPoint @[2] { };
	  };
	};
	Function @[12] { 
	  ProgVar_List @.args = [1] {
	    ProgVar @[0] { };
	  };

	  ProgEl_List @.fun_code = [5] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    DataGroupProg @[1] { 
	      DataOpList @.ops = [8] {
		DataGroupEl @[0] { };
		DataGroupEl @[1] { };
		DataGroupEl @[2] { };
		DataGroupEl @[3] { };
		DataGroupEl @[4] { };
		DataGroupEl @[5] { };
		DataGroupEl @[6] { };
		DataGroupEl @[7] { };
	      };
	    };
	    DataGroupProg @[2] { 
	      DataOpList @.ops = [8] {
		DataGroupEl @[0] { };
		DataGroupEl @[1] { };
		DataGroupEl @[2] { };
		DataGroupEl @[3] { };
		DataGroupEl @[4] { };
		DataGroupEl @[5] { };
		DataGroupEl @[6] { };
		DataGroupEl @[7] { };
	      };
	    };
	    DataGroupProg @[3] { 
	      DataOpList @.ops = [8] {
		DataGroupEl @[0] { };
		DataGroupEl @[1] { };
		DataGroupEl @[2] { };
		DataGroupEl @[3] { };
		DataGroupEl @[4] { };
		DataGroupEl @[5] { };
		DataGroupEl @[6] { };
		DataGroupEl @[7] { };
	      };
	    };
	    DataProcCall @[4] { 
	      ProgArg_List @.meth_args = [2] {
		ProgArg @[0] { };
		ProgArg @[1] { };
	      };
	    };
	  };
	};
      };

      ProgEl_List @.load_code = [0] {
      };

      ProgEl_List @.init_code = [0] {
      };

      ProgEl_List @.prog_code = [4] {
	If @[0] { 
	  ProgEl_List @.true_code = [2] {
	    ResetDataRows @[0] { };
	    ResetDataRows @[1] { };
	  };
	};
	AssignExpr @[1] { };
	Switch @[2] { 
	  ProgEl_List @.cases = [14] {
	    CaseBlock @[0] { 
	      ProgEl_List @.prog_code = [3] {
		FunctionCall @[0] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		FunctionCall @[1] { 
		  ProgArg_List @.fun_args = [6] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		    ProgArg @[4] { };
		    ProgArg @[5] { };
		  };
		};
		FunctionCall @[2] { 
		  ProgArg_List @.fun_args = [1] {
		    ProgArg @[0] { };
		  };
		};
	      };
	    };
	    CaseBlock @[1] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [3] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    FunctionCall @[1] { 
		      ProgArg_List @.fun_args = [6] {
			ProgArg @[0] { };
			ProgArg @[1] { };
			ProgArg @[2] { };
			ProgArg @[3] { };
			ProgArg @[4] { };
			ProgArg @[5] { };
		      };
		    };
		    FunctionCall @[2] { 
		      ProgArg_List @.fun_args = [1] {
			ProgArg @[0] { };
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[2] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [3] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			FunctionCall @[1] { 
			  ProgArg_List @.fun_args = [6] {
			    ProgArg @[0] { };
			    ProgArg @[1] { };
			    ProgArg @[2] { };
			    ProgArg @[3] { };
			    ProgArg @[4] { };
			    ProgArg @[5] { };
			  };
			};
			FunctionCall @[2] { 
			  ProgArg_List @.fun_args = [1] {
			    ProgArg @[0] { };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[3] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [3] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			FunctionCall @[1] { 
			  ProgArg_List @.fun_args = [6] {
			    ProgArg @[0] { };
			    ProgArg @[1] { };
			    ProgArg @[2] { };
			    ProgArg @[3] { };
			    ProgArg @[4] { };
			    ProgArg @[5] { };
			  };
			};
			FunctionCall @[2] { 
			  ProgArg_List @.fun_args = [1] {
			    ProgArg @[0] { };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[4] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [1] {
			ForLoop @[0] { 
			  ProgEl_List @.loop_code = [3] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    FunctionCall @[1] { 
			      ProgArg_List @.fun_args = [6] {
				ProgArg @[0] { };
				ProgArg @[1] { };
				ProgArg @[2] { };
				ProgArg @[3] { };
				ProgArg @[4] { };
				ProgArg @[5] { };
			      };
			    };
			    FunctionCall @[2] { 
			      ProgArg_List @.fun_args = [1] {
				ProgArg @[0] { };
			      };
			    };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[5] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [1] {
			ForLoop @[0] { 
			  ProgEl_List @.loop_code = [3] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    FunctionCall @[1] { 
			      ProgArg_List @.fun_args = [6] {
				ProgArg @[0] { };
				ProgArg @[1] { };
				ProgArg @[2] { };
				ProgArg @[3] { };
				ProgArg @[4] { };
				ProgArg @[5] { };
			      };
			    };
			    FunctionCall @[2] { 
			      ProgArg_List @.fun_args = [1] {
				ProgArg @[0] { };
			      };
			    };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[6] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [1] {
			ForLoop @[0] { 
			  ProgEl_List @.loop_code = [3] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    FunctionCall @[1] { 
			      ProgArg_List @.fun_args = [6] {
				ProgArg @[0] { };
				ProgArg @[1] { };
				ProgArg @[2] { };
				ProgArg @[3] { };
				ProgArg @[4] { };
				ProgArg @[5] { };
			      };
			    };
			    FunctionCall @[2] { 
			      ProgArg_List @.fun_args = [1] {
				ProgArg @[0] { };
			      };
			    };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[7] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [1] {
			ForLoop @[0] { 
			  ProgEl_List @.loop_code = [3] {
			    FunctionCall @[0] { 
			      ProgArg_List @.fun_args = [0] {
			      };
			    };
			    FunctionCall @[1] { 
			      ProgArg_List @.fun_args = [6] {
				ProgArg @[0] { };
				ProgArg @[1] { };
				ProgArg @[2] { };
				ProgArg @[3] { };
				ProgArg @[4] { };
				ProgArg @[5] { };
			      };
			    };
			    FunctionCall @[2] { 
			      ProgArg_List @.fun_args = [1] {
				ProgArg @[0] { };
			      };
			    };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[8] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [1] {
			ForLoop @[0] { 
			  ProgEl_List @.loop_code = [1] {
			    ForLoop @[0] { 
			      ProgEl_List @.loop_code = [1] {
				ForLoop @[0] { 
				  ProgEl_List @.loop_code = [3] {
				    FunctionCall @[0] { 
				      ProgArg_List @.fun_args = [0] {
				      };
				    };
				    FunctionCall @[1] { 
				      ProgArg_List @.fun_args = [6] {
					ProgArg @[0] { };
					ProgArg @[1] { };
					ProgArg @[2] { };
					ProgArg @[3] { };
					ProgArg @[4] { };
					ProgArg @[5] { };
				      };
				    };
				    FunctionCall @[2] { 
				      ProgArg_List @.fun_args = [1] {
					ProgArg @[0] { };
				      };
				    };
				  };
				};
			      };
			    };
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[9] { 
	      ProgEl_List @.prog_code = [1] {
		PrintExpr @[0] { };
	      };
	    };
	    CaseBlock @[10] { 
	      ProgEl_List @.prog_code = [3] {
		FunctionCall @[0] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		FunctionCall @[1] { 
		  ProgArg_List @.fun_args = [2] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		  };
		};
		FunctionCall @[2] { 
		  ProgArg_List @.fun_args = [1] {
		    ProgArg @[0] { };
		  };
		};
	      };
	    };
	    CaseBlock @[11] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [3] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    FunctionCall @[1] { 
		      ProgArg_List @.fun_args = [2] {
			ProgArg @[0] { };
			ProgArg @[1] { };
		      };
		    };
		    FunctionCall @[2] { 
		      ProgArg_List @.fun_args = [1] {
			ProgArg @[0] { };
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[12] { 
	      ProgEl_List @.prog_code = [0] {
	      };
	    };
	    CaseBlock @[13] { 
	      ProgEl_List @.prog_code = [0] {
	      };
	    };
	  };
	};
	Switch @[3] { 
	  ProgEl_List @.cases = [2] {
	    CaseBlock @[0] { 
	      ProgEl_List @.prog_code = [2] {
		DataSelectRowsProg @[0] { 
		  DataOpList @.ops = [1] {
		    DataSelectEl @[0] { };
		  };
		};
		FunctionCall @[1] { 
		  ProgArg_List @.fun_args = [1] {
		    ProgArg @[0] { };
		  };
		};
	      };
	    };
	    CaseBlock @[1] { 
	      ProgEl_List @.prog_code = [2] {
		DataSelectRowsProg @[0] { 
		  DataOpList @.ops = [1] {
		    DataSelectEl @[0] { };
		  };
		};
		FunctionCall @[1] { 
		  ProgArg_List @.fun_args = [1] {
		    ProgArg @[0] { };
		  };
		};
	      };
	    };
	  };
	};
      };
    };
    Program @[4] { 
      ProgObjList @.objs = [1] {
	DataTable @[0] { 
	  DataTableCols @.data = [7] {
	    float_Data @[0] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[1] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[2] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[3] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[4] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[5] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[6] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	  };
	};
      };

      ProgType_List @.types = [2] {
	DynEnumType @[0] { 
	  DynEnumItem_List @.enums = [5] {
	    DynEnumItem @[0] { };
	    DynEnumItem @[1] { };
	    DynEnumItem @[2] { };
	    DynEnumItem @[3] { };
	    DynEnumItem @[4] { };
	  };
	};
	DynEnumType @[1] { 
	  DynEnumItem_List @.enums = [8] {
	    DynEnumItem @[0] { };
	    DynEnumItem @[1] { };
	    DynEnumItem @[2] { };
	    DynEnumItem @[3] { };
	    DynEnumItem @[4] { };
	    DynEnumItem @[5] { };
	    DynEnumItem @[6] { };
	    DynEnumItem @[7] { };
	  };
	};
      };

      ProgVar_List @.args = [0] {
      };

      ProgVar_List @.vars = [23] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
	ProgVar @[4] { };
	ProgVar @[5] { };
	ProgVar @[6] { };
	ProgVar @[7] { };
	ProgVar @[8] { };
	ProgVar @[9] { };
	ProgVar @[10] { };
	ProgVar @[11] { };
	ProgVar @[12] { };
	ProgVar @[13] { };
	ProgVar @[14] { };
	ProgVar @[15] { };
	ProgVar @[16] { };
	ProgVar @[17] { };
	ProgVar @[18] { };
	ProgVar @[19] { };
	ProgVar @[20] { };
	ProgVar @[21] { };
	ProgVar @[22] { };
      };

      Function_List @.functions = [2] {
	Function @[0] { 
	  ProgVar_List @.args = [4] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	  };

	  ProgEl_List @.fun_code = [9] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    AssignExpr @[5] { };
	    AssignExpr @[6] { };
	    Switch @[7] { 
	      ProgEl_List @.cases = [5] {
		CaseBlock @[0] { 
		  ProgEl_List @.prog_code = [1] {
		    AssignExpr @[0] { };
		  };
		};
		CaseBlock @[1] { 
		  ProgEl_List @.prog_code = [1] {
		    AssignExpr @[0] { };
		  };
		};
		CaseBlock @[2] { 
		  ProgEl_List @.prog_code = [1] {
		    AssignExpr @[0] { };
		  };
		};
		CaseBlock @[3] { 
		  ProgEl_List @.prog_code = [1] {
		    AssignExpr @[0] { };
		  };
		};
		CaseBlock @[4] { 
		  ProgEl_List @.prog_code = [1] {
		    AssignExpr @[0] { };
		  };
		};
	      };
	    };
	    ReturnExpr @[8] { };
	  };
	};
	Function @[1] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [5] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AddNewDataRow @[1] { };
	    DataVarProg @[2] { };
	    DataVarProg @[3] { };
	    DoneWritingDataRow @[4] { };
	  };
	};
      };

      ProgEl_List @.load_code = [0] {
      };

      ProgEl_List @.init_code = [0] {
      };

      ProgEl_List @.prog_code = [2] {
	ResetDataRows @[0] { };
	Switch @[1] { 
	  ProgEl_List @.cases = [8] {
	    CaseBlock @[0] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [2] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [4] {
			ProgArg @[0] { };
			ProgArg @[1] { };
			ProgArg @[2] { };
			ProgArg @[3] { };
		      };
		    };
		    FunctionCall @[1] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[1] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [2] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [4] {
			    ProgArg @[0] { };
			    ProgArg @[1] { };
			    ProgArg @[2] { };
			    ProgArg @[3] { };
			  };
			};
			FunctionCall @[1] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[2] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [2] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [4] {
			ProgArg @[0] { };
			ProgArg @[1] { };
			ProgArg @[2] { };
			ProgArg @[3] { };
		      };
		    };
		    FunctionCall @[1] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[3] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [2] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [4] {
			    ProgArg @[0] { };
			    ProgArg @[1] { };
			    ProgArg @[2] { };
			    ProgArg @[3] { };
			  };
			};
			FunctionCall @[1] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[4] { 
	      ProgEl_List @.prog_code = [0] {
	      };
	    };
	    CaseBlock @[5] { 
	      ProgEl_List @.prog_code = [0] {
	      };
	    };
	    CaseBlock @[6] { 
	      ProgEl_List @.prog_code = [0] {
	      };
	    };
	    CaseBlock @[7] { 
	      ProgEl_List @.prog_code = [0] {
	      };
	    };
	  };
	};
      };
    };
    Program @[5] { 
      ProgObjList @.objs = [3] {
	DataTable @[0] { 
	  DataTableCols @.data = [26] {
	    float_Data @[0] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[1] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[2] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[3] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[4] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[5] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[6] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[7] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[8] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[9] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[10] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[11] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[12] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[13] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[14] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[15] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[16] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[17] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[18] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[19] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[20] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[21] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[22] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[23] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[24] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[25] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	  };
	};
	DataTable @[1] { 
	  DataTableCols @.data = [26] {
	    float_Data @[0] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[1] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[2] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[3] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[4] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[5] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[6] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[7] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[8] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[9] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[10] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[11] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[12] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[13] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[14] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[15] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[16] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[17] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[18] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[19] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[20] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[21] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[22] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[23] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[24] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[25] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	  };
	};
	DataTable @[2] { 
	  DataTableCols @.data = [2] {
	    float_Data @[0] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[1] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	  };
	};
      };

      ProgType_List @.types = [0] {
      };

      ProgVar_List @.args = [0] {
      };

      ProgVar_List @.vars = [9] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
	ProgVar @[4] { };
	ProgVar @[5] { };
	ProgVar @[6] { };
	ProgVar @[7] { };
	ProgVar @[8] { };
      };

      Function_List @.functions = [0] {
      };

      ProgEl_List @.load_code = [0] {
      };

      ProgEl_List @.init_code = [0] {
      };

      ProgEl_List @.prog_code = [5] {
	MethodCall @[0] { 
	  ProgArg_List @.meth_args = [5] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	    ProgArg @[3] { };
	    ProgArg @[4] { };
	  };
	};
	AssignExpr @[1] { };
	AssignExpr @[2] { };
	ForLoop @[3] { 
	  ProgEl_List @.loop_code = [6] {
	    AssignExpr @[0] { };
	    AssignExpr @[1] { };
	    MethodCall @[2] { 
	      ProgArg_List @.meth_args = [5] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
		ProgArg @[4] { };
	      };
	    };
	    If @[3] { 
	      ProgEl_List @.true_code = [2] {
		MethodCall @[0] { 
		  ProgArg_List @.meth_args = [1] {
		    ProgArg @[0] { };
		  };
		};
		UserScript @[1] { };
	      };
	    };
	    MethodCall @[4] { 
	      ProgArg_List @.meth_args = [1] {
		ProgArg @[0] { };
	      };
	    };
	    MemberAssign @[5] { };
	  };
	};
	MethodCall @[4] { 
	  ProgArg_List @.meth_args = [1] {
	    ProgArg @[0] { };
	  };
	};
      };
    };
    Program @[6] { 
      ProgObjList @.objs = [4] {
	DataTable @[0] { 
	  DataTableCols @.data = [2] {
	    float_Data @[0] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[1] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	  };
	};
	DataTable @[1] { 
	  DataTableCols @.data = [2] {
	    String_Data @[0] { };
	    String_Data @[1] { };
	  };
	};
	DataTable @[2] { 
	  DataTableCols @.data = [5] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	  };
	};
	DataTable @[3] { 
	  DataTableCols @.data = [5] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	  };
	};
      };

      ProgType_List @.types = [0] {
      };

      ProgVar_List @.args = [0] {
      };

      ProgVar_List @.vars = [24] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
	ProgVar @[4] { };
	ProgVar @[5] { };
	ProgVar @[6] { };
	ProgVar @[7] { };
	ProgVar @[8] { };
	ProgVar @[9] { };
	ProgVar @[10] { };
	ProgVar @[11] { };
	ProgVar @[12] { };
	ProgVar @[13] { };
	ProgVar @[14] { };
	ProgVar @[15] { };
	ProgVar @[16] { };
	ProgVar @[17] { };
	ProgVar @[18] { };
	ProgVar @[19] { };
	ProgVar @[20] { };
	ProgVar @[21] { };
	ProgVar @[22] { };
	ProgVar @[23] { };
      };

      Function_List @.functions = [0] {
      };

      ProgEl_List @.load_code = [0] {
      };

      ProgEl_List @.init_code = [0] {
      };

      ProgEl_List @.prog_code = [6] {
	ResetDataRows @[0] { };
	ResetDataRows @[1] { };
	DataGenCall @[2] { 
	  ProgArg_List @.meth_args = [6] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	    ProgArg @[3] { };
	    ProgArg @[4] { };
	    ProgArg @[5] { };
	  };
	};
	ForLoop @[3] { 
	  ProgEl_List @.loop_code = [15] {
	    DataVarProg @[0] { };
	    IfContinue @[1] { };
	    MethodCall @[2] { 
	      ProgArg_List @.meth_args = [5] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
		ProgArg @[4] { };
	      };
	    };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    AssignExpr @[5] { };
	    AssignExpr @[6] { };
	    AssignExpr @[7] { };
	    AssignExpr @[8] { };
	    ForLoop @[9] { 
	      ProgEl_List @.loop_code = [2] {
		AssignExpr @[0] { };
		If @[1] { 
		  ProgEl_List @.true_code = [2] {
		    AssignExpr @[0] { };
		    IfBreak @[1] { };
		  };
		};
	      };
	    };
	    AssignExpr @[10] { };
	    AddNewDataRow @[11] { };
	    DataVarProg @[12] { };
	    DataVarProg @[13] { };
	    DoneWritingDataRow @[14] { };
	  };
	};
	MethodCall @[4] { 
	  ProgArg_List @.meth_args = [1] {
	    ProgArg @[0] { };
	  };
	};
	DataAnalCall @[5] { 
	  ProgArg_List @.meth_args = [3] {
	    ProgArg @[0] { };
	    ProgArg @[1] { };
	    ProgArg @[2] { };
	  };
	};
      };
    };
    Program @[7] { 
      ProgObjList @.objs = [6] {
	DataTable @[0] { 
	  DataTableCols @.data = [2] {
	    float_Data @[0] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	    float_Data @[1] { 
       UserDataItem_List @*(.user_data_) {
		UserDataItem @[0] { };
       };
};
	  };
	};
	DataTable @[1] { 
	  DataTableCols @.data = [2] {
	    String_Data @[0] { };
	    String_Data @[1] { };
	  };
	};
	DataTable @[2] { 
	  DataTableCols @.data = [7] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	  };
	};
	DataTable @[3] { 
	  DataTableCols @.data = [7] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	  };
	};
	DataTable @[4] { 
	  DataTableCols @.data = [4] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	  };
	};
	DataTable @[5] { 
	  DataTableCols @.data = [2] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	  };
	};
      };

      ProgType_List @.types = [2] {
	DynEnumType @[0] { 
	  DynEnumItem_List @.enums = [4] {
	    DynEnumItem @[0] { };
	    DynEnumItem @[1] { };
	    DynEnumItem @[2] { };
	    DynEnumItem @[3] { };
	  };
	};
	DynEnumType @[1] { 
	  DynEnumItem_List @.enums = [2] {
	    DynEnumItem @[0] { };
	    DynEnumItem @[1] { };
	  };
	};
      };

      ProgVar_List @.args = [0] {
      };

      ProgVar_List @.vars = [36] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
	ProgVar @[4] { };
	ProgVar @[5] { };
	ProgVar @[6] { };
	ProgVar @[7] { };
	ProgVar @[8] { };
	ProgVar @[9] { };
	ProgVar @[10] { };
	ProgVar @[11] { };
	ProgVar @[12] { };
	ProgVar @[13] { };
	ProgVar @[14] { };
	ProgVar @[15] { };
	ProgVar @[16] { };
	ProgVar @[17] { };
	ProgVar @[18] { };
	ProgVar @[19] { };
	ProgVar @[20] { };
	ProgVar @[21] { };
	ProgVar @[22] { };
	ProgVar @[23] { };
	ProgVar @[24] { };
	ProgVar @[25] { };
	ProgVar @[26] { };
	ProgVar @[27] { };
	ProgVar @[28] { };
	ProgVar @[29] { };
	ProgVar @[30] { };
	ProgVar @[31] { };
	ProgVar @[32] { };
	ProgVar @[33] { };
	ProgVar @[34] { };
	ProgVar @[35] { };
      };

      Function_List @.functions = [2] {
	Function @[0] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [3] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    DataCalcLoop @[1] { 
	      DataOpList @.src_cols = [7] {
		DataOpEl @[0] { };
		DataOpEl @[1] { };
		DataOpEl @[2] { };
		DataOpEl @[3] { };
		DataOpEl @[4] { };
		DataOpEl @[5] { };
		DataOpEl @[6] { };
	      };

	      DataOpList @.dest_cols = [0] {
	      };

	      ProgEl_List @.loop_code = [4] {
		AssignExpr @[0] { };
		IfElse @[1] { 
		  ProgEl_List @.true_code = [1] {
		    AssignExpr @[0] { };
		  };

		  ProgEl_List @.false_code = [1] {
		    AssignExpr @[0] { };
		  };
		};
		AssignExpr @[2] { };
		DataCalcSetSrcRow @[3] { };
	      };

	      ProgVar_List @.src_col_vars = [7] {
		ProgVar @[0] { };
		ProgVar @[1] { };
		ProgVar @[2] { };
		ProgVar @[3] { };
		ProgVar @[4] { };
		ProgVar @[5] { };
		ProgVar @[6] { };
	      };

	      ProgVar_List @.dest_col_vars = [0] {
	      };
	    };
	    MathCall @[2] { 
	      ProgArg_List @.meth_args = [2] {
		ProgArg @[0] { };
		ProgArg @[1] { };
	      };
	    };
	  };
	};
	Function @[1] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [4] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    ResetDataRows @[1] { };
	    ForLoop @[2] { 
	      ProgEl_List @.loop_code = [3] {
		IfElse @[0] { 
		  ProgEl_List @.true_code = [1] {
		    AssignExpr @[0] { };
		  };

		  ProgEl_List @.false_code = [1] {
		    AssignExpr @[0] { };
		  };
		};
		AddNewDataRow @[1] { };
		DataVarProg @[2] { };
	      };
	    };
	    DoneWritingDataRow @[3] { };
	  };
	};
      };

      ProgEl_List @.load_code = [0] {
      };

      ProgEl_List @.init_code = [0] {
      };

      ProgEl_List @.prog_code = [4] {
	FunctionCall @[0] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	};
	If @[1] { 
	  ProgEl_List @.true_code = [4] {
	    ResetDataRows @[0] { };
	    ResetDataRows @[1] { };
	    DataGenCall @[2] { 
	      ProgArg_List @.meth_args = [6] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
		ProgArg @[4] { };
		ProgArg @[5] { };
	      };
	    };
	    ForLoop @[3] { 
	      ProgEl_List @.loop_code = [12] {
		DataVarProg @[0] { };
		IfContinue @[1] { };
		MethodCall @[2] { 
		  ProgArg_List @.meth_args = [5] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		    ProgArg @[4] { };
		  };
		};
		AssignExpr @[3] { };
		AssignExpr @[4] { };
		AssignExpr @[5] { };
		AssignExpr @[6] { };
		ForLoop @[7] { 
		  ProgEl_List @.loop_code = [2] {
		    AssignExpr @[0] { };
		    If @[1] { 
		      ProgEl_List @.true_code = [2] {
			AssignExpr @[0] { };
			IfBreak @[1] { };
		      };
		    };
		  };
		};
		AssignExpr @[8] { };
		AddNewDataRow @[9] { };
		DataVarProg @[10] { };
		DoneWritingDataRow @[11] { };
	      };
	    };
	  };
	};
	IfElse @[2] { 
	  ProgEl_List @.true_code = [3] {
	    ResetDataRows @[0] { };
	    ForLoop @[1] { 
	      ProgEl_List @.loop_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [1] {
		    ForLoop @[0] { 
		      ProgEl_List @.loop_code = [3] {
			AddNewDataRow @[0] { };
			FunctionCall @[1] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			DataVarProg @[2] { };
		      };
		    };
		  };
		};
	      };
	    };
	    MethodCall @[2] { 
	      ProgArg_List @.meth_args = [12] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
		ProgArg @[4] { };
		ProgArg @[5] { };
		ProgArg @[6] { };
		ProgArg @[7] { };
		ProgArg @[8] { };
		ProgArg @[9] { };
		ProgArg @[10] { };
		ProgArg @[11] { };
	      };
	    };
	  };

	  ProgEl_List @.false_code = [1] {
	    If @[0] { 
	      ProgEl_List @.true_code = [2] {
		FunctionCall @[0] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		DataAnalCall @[1] { 
		  ProgArg_List @.meth_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
	      };
	    };
	  };
	};
	Switch @[3] { 
	  ProgEl_List @.cases = [2] {
	    CaseBlock @[0] { 
	      ProgEl_List @.prog_code = [2] {
		DataSelectRowsProg @[0] { 
		  DataOpList @.ops = [1] {
		    DataSelectEl @[0] { };
		  };
		};
		DataAnalCall @[1] { 
		  ProgArg_List @.meth_args = [3] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		  };
		};
	      };
	    };
	    CaseBlock @[1] { 
	      ProgEl_List @.prog_code = [2] {
		DataSelectRowsProg @[0] { 
		  DataOpList @.ops = [1] {
		    DataSelectEl @[0] { };
		  };
		};
		DataAnalCall @[1] { 
		  ProgArg_List @.meth_args = [3] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		  };
		};
	      };
	    };
	  };
	};
      };
    };
    Program @[8] { 
      ProgObjList @.objs = [3] {
	DataTable @[0] { 
	  DataTableCols @.data = [28] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	    float_Data @[7] { };
	    float_Data @[8] { };
	    float_Data @[9] { };
	    float_Data @[10] { };
	    float_Data @[11] { };
	    float_Data @[12] { };
	    float_Data @[13] { };
	    float_Data @[14] { };
	    float_Data @[15] { };
	    float_Data @[16] { };
	    float_Data @[17] { };
	    float_Data @[18] { };
	    float_Data @[19] { };
	    float_Data @[20] { };
	    float_Data @[21] { };
	    float_Data @[22] { };
	    float_Data @[23] { };
	    float_Data @[24] { };
	    float_Data @[25] { };
	    float_Data @[26] { };
	    float_Data @[27] { };
	  };
	};
	DataTable @[1] { 
	  DataTableCols @.data = [4] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	  };
	};
	DataTable @[2] { 
	  DataTableCols @.data = [7] {
	    float_Data @[0] { };
	    float_Data @[1] { };
	    float_Data @[2] { };
	    float_Data @[3] { };
	    float_Data @[4] { };
	    float_Data @[5] { };
	    float_Data @[6] { };
	  };
	};
      };

      ProgType_List @.types = [1] {
	DynEnumType @[0] { 
	  DynEnumItem_List @.enums = [2] {
	    DynEnumItem @[0] { };
	    DynEnumItem @[1] { };
	  };
	};
      };

      ProgVar_List @.args = [0] {
      };

      ProgVar_List @.vars = [76] {
	ProgVar @[0] { };
	ProgVar @[1] { };
	ProgVar @[2] { };
	ProgVar @[3] { };
	ProgVar @[4] { };
	ProgVar @[5] { };
	ProgVar @[6] { };
	ProgVar @[7] { };
	ProgVar @[8] { };
	ProgVar @[9] { };
	ProgVar @[10] { };
	ProgVar @[11] { };
	ProgVar @[12] { };
	ProgVar @[13] { };
	ProgVar @[14] { };
	ProgVar @[15] { };
	ProgVar @[16] { };
	ProgVar @[17] { };
	ProgVar @[18] { };
	ProgVar @[19] { };
	ProgVar @[20] { };
	ProgVar @[21] { };
	ProgVar @[22] { };
	ProgVar @[23] { };
	ProgVar @[24] { };
	ProgVar @[25] { };
	ProgVar @[26] { };
	ProgVar @[27] { };
	ProgVar @[28] { };
	ProgVar @[29] { };
	ProgVar @[30] { };
	ProgVar @[31] { };
	ProgVar @[32] { };
	ProgVar @[33] { };
	ProgVar @[34] { };
	ProgVar @[35] { };
	ProgVar @[36] { };
	ProgVar @[37] { };
	ProgVar @[38] { };
	ProgVar @[39] { };
	ProgVar @[40] { };
	ProgVar @[41] { };
	ProgVar @[42] { };
	ProgVar @[43] { };
	ProgVar @[44] { };
	ProgVar @[45] { };
	ProgVar @[46] { };
	ProgVar @[47] { };
	ProgVar @[48] { };
	ProgVar @[49] { };
	ProgVar @[50] { };
	ProgVar @[51] { };
	ProgVar @[52] { };
	ProgVar @[53] { };
	ProgVar @[54] { };
	ProgVar @[55] { };
	ProgVar @[56] { };
	ProgVar @[57] { };
	ProgVar @[58] { };
	ProgVar @[59] { };
	ProgVar @[60] { };
	ProgVar @[61] { };
	ProgVar @[62] { };
	ProgVar @[63] { };
	ProgVar @[64] { };
	ProgVar @[65] { };
	ProgVar @[66] { };
	ProgVar @[67] { };
	ProgVar @[68] { };
	ProgVar @[69] { };
	ProgVar @[70] { };
	ProgVar @[71] { };
	ProgVar @[72] { };
	ProgVar @[73] { };
	ProgVar @[74] { };
	ProgVar @[75] { };
      };

      Function_List @.functions = [6] {
	Function @[0] { 
	  ProgVar_List @.args = [4] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	  };

	  ProgEl_List @.fun_code = [3] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [1] {
		ProgVar @[0] { };
	      };
	    };
	    AssignExpr @[1] { };
	    ReturnExpr @[2] { };
	  };
	};
	Function @[1] { 
	  ProgVar_List @.args = [4] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	  };

	  ProgEl_List @.fun_code = [2] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    ReturnExpr @[1] { };
	  };
	};
	Function @[2] { 
	  ProgVar_List @.args = [4] {
	    ProgVar @[0] { };
	    ProgVar @[1] { };
	    ProgVar @[2] { };
	    ProgVar @[3] { };
	  };

	  ProgEl_List @.fun_code = [3] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    If @[1] { 
	      ProgEl_List @.true_code = [1] {
		ReturnExpr @[0] { };
	      };
	    };
	    ReturnExpr @[2] { };
	  };
	};
	Function @[3] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [3] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [7] {
		ProgVar @[0] { };
		ProgVar @[1] { };
		ProgVar @[2] { };
		ProgVar @[3] { };
		ProgVar @[4] { };
		ProgVar @[5] { };
		ProgVar @[6] { };
	      };
	    };
	    ResetDataRows @[1] { };
	    ForLoop @[2] { 
	      ProgEl_List @.loop_code = [8] {
		FunctionCall @[0] { 
		  ProgArg_List @.fun_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
		FunctionCall @[1] { 
		  ProgArg_List @.fun_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
		FunctionCall @[2] { 
		  ProgArg_List @.fun_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
		FunctionCall @[3] { 
		  ProgArg_List @.fun_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
		FunctionCall @[4] { 
		  ProgArg_List @.fun_args = [4] {
		    ProgArg @[0] { };
		    ProgArg @[1] { };
		    ProgArg @[2] { };
		    ProgArg @[3] { };
		  };
		};
		AddNewDataRow @[5] { };
		DataVarProg @[6] { };
		DataVarProg @[7] { };
	      };
	    };
	  };
	};
	Function @[4] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [40] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    IfElse @[3] { 
	      ProgEl_List @.true_code = [1] {
		MemberMethodCall @[0] { 
		  ProgArg_List @.meth_args = [1] {
		    ProgArg @[0] { };
		  };
		};
	      };

	      ProgEl_List @.false_code = [1] {
		AssignExpr @[0] { };
	      };
	    };
	    IfElse @[4] { 
	      ProgEl_List @.true_code = [1] {
		MemberMethodCall @[0] { 
		  ProgArg_List @.meth_args = [1] {
		    ProgArg @[0] { };
		  };
		};
	      };

	      ProgEl_List @.false_code = [1] {
		AssignExpr @[0] { };
	      };
	    };
	    AssignExpr @[5] { };
	    VarIncr @[6] { };
	    Comment @[7] { };
	    FunctionCall @[8] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[9] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[10] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[11] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[12] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[13] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    FunctionCall @[14] { 
	      ProgArg_List @.fun_args = [4] {
		ProgArg @[0] { };
		ProgArg @[1] { };
		ProgArg @[2] { };
		ProgArg @[3] { };
	      };
	    };
	    AssignExpr @[15] { };
	    AssignExpr @[16] { };
	    AssignExpr @[17] { };
	    AssignExpr @[18] { };
	    AssignExpr @[19] { };
	    AssignExpr @[20] { };
	    VarIncr @[21] { };
	    VarIncr @[22] { };
	    VarIncr @[23] { };
	    VarIncr @[24] { };
	    VarIncr @[25] { };
	    VarIncr @[26] { };
	    VarIncr @[27] { };
	    AddNewDataRow @[28] { };
	    DataVarProg @[29] { };
	    DataVarProg @[30] { };
	    DataVarProg @[31] { };
	    DataVarProg @[32] { };
	    DataVarProg @[33] { };
	    DataVarProg @[34] { };
	    DataVarProg @[35] { };
	    DataVarProg @[36] { };
	    DataVarProg @[37] { };
	    DataVarProg @[38] { };
	    DataVarProg @[39] { };
	  };
	};
	Function @[5] { 
	  ProgVar_List @.args = [0] {
	  };

	  ProgEl_List @.fun_code = [8] {
	    ProgVars @[0] { 
	      ProgVar_List @.local_vars = [0] {
	      };
	    };
	    AssignExpr @[1] { };
	    AssignExpr @[2] { };
	    AssignExpr @[3] { };
	    AssignExpr @[4] { };
	    AssignExpr @[5] { };
	    AssignExpr @[6] { };
	    AssignExpr @[7] { };
	  };
	};
      };

      ProgEl_List @.load_code = [0] {
      };

      ProgEl_List @.init_code = [0] {
      };

      ProgEl_List @.prog_code = [5] {
	FunctionCall @[0] { 
	  ProgArg_List @.fun_args = [0] {
	  };
	};
	ResetDataRows @[1] { };
	AssignExpr @[2] { };
	Switch @[3] { 
	  ProgEl_List @.cases = [2] {
	    CaseBlock @[0] { 
	      ProgEl_List @.prog_code = [1] {
		ForLoop @[0] { 
		  ProgEl_List @.loop_code = [5] {
		    AssignExpr @[0] { };
		    AssignExpr @[1] { };
		    AssignExpr @[2] { };
		    FunctionCall @[3] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    ForLoop @[4] { 
		      ProgEl_List @.loop_code = [2] {
			FunctionCall @[0] { 
			  ProgArg_List @.fun_args = [0] {
			  };
			};
			StopStepPoint @[1] { };
		      };
		    };
		  };
		};
	      };
	    };
	    CaseBlock @[1] { 
	      ProgEl_List @.prog_code = [12] {
		Comment @[0] { };
		AssignExpr @[1] { };
		AssignExpr @[2] { };
		AssignExpr @[3] { };
		FunctionCall @[4] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		ForLoop @[5] { 
		  ProgEl_List @.loop_code = [3] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    If @[1] { 
		      ProgEl_List @.true_code = [1] {
			AssignExpr @[0] { };
		      };
		    };
		    StopStepPoint @[2] { };
		  };
		};
		Comment @[6] { };
		AssignExpr @[7] { };
		AssignExpr @[8] { };
		AssignExpr @[9] { };
		FunctionCall @[10] { 
		  ProgArg_List @.fun_args = [0] {
		  };
		};
		ForLoop @[11] { 
		  ProgEl_List @.loop_code = [3] {
		    FunctionCall @[0] { 
		      ProgArg_List @.fun_args = [0] {
		      };
		    };
		    If @[1] { 
		      ProgEl_List @.true_code = [1] {
			AssignExpr @[0] { };
		      };
		    };
		    StopStepPoint @[2] { };
		  };
		};
	      };
	    };
	  };
	};
	DataGroupProg @[4] { 
	  DataOpList @.ops = [4] {
	    DataGroupEl @[0] { };
	    DataGroupEl @[1] { };
	    DataGroupEl @[2] { };
	    DataGroupEl @[3] { };
	  };
	};
      };
    };
  };

  DataViewer_List @.viewers = [1] {
    MainWindowViewer @[0] { 
   UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
	UserDataItem @[1] { };
	UserDataItem @[2] { };
	UserDataItem @[3] { };
	UserDataItem @[4] { };
	UserDataItem @[5] { };
   };

      ToolBar_List @.toolbars = [1] {
	ToolBar @[0] { 
     UserDataItem_List @*(.user_data_) {
	    UserDataItem @[0] { };
     };
};
      };

      FrameViewer_List @.frames = [3] {
	tabBrowseViewer @[0] { };
	PanelViewer @[1] { };
	T3DataViewer @[2] { 
	  T3DataViewFrame_List @.frames = [10] {
	    T3DataViewFrame @[0] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [15] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		    GraphColView @[7] { };
		    GraphColView @[8] { };
		    GraphColView @[9] { };
		    GraphColView @[10] { };
		    GraphColView @[11] { };
		    GraphColView @[12] { };
		    GraphColView @[13] { };
		    GraphColView @[14] { };
		  };
		};
	      };

	      T3SavedView_List @.saved_views = [6] {
		T3SavedView @[0] { };
		T3SavedView @[1] { };
		T3SavedView @[2] { };
		T3SavedView @[3] { };
		T3SavedView @[4] { };
		T3SavedView @[5] { };
	      };
	    };
	    T3DataViewFrame @[1] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [7] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		  };
		};
	      };

	      T3SavedView_List @.saved_views = [6] {
		T3SavedView @[0] { };
		T3SavedView @[1] { };
		T3SavedView @[2] { };
		T3SavedView @[3] { };
		T3SavedView @[4] { };
		T3SavedView @[5] { };
	      };
	    };
	    T3DataViewFrame @[2] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [13] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		    GraphColView @[7] { };
		    GraphColView @[8] { };
		    GraphColView @[9] { };
		    GraphColView @[10] { };
		    GraphColView @[11] { };
		    GraphColView @[12] { };
		  };
		};
	      };

	      T3SavedView_List @.saved_views = [6] {
		T3SavedView @[0] { };
		T3SavedView @[1] { };
		T3SavedView @[2] { };
		T3SavedView @[3] { };
		T3SavedView @[4] { };
		T3SavedView @[5] { };
	      };
	    };
	    T3DataViewFrame @[3] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [5] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		  };
		};
	      };

	      T3SavedView_List @.saved_views = [6] {
		T3SavedView @[0] { };
		T3SavedView @[1] { };
		T3SavedView @[2] { };
		T3SavedView @[3] { };
		T3SavedView @[4] { };
		T3SavedView @[5] { };
	      };
	    };
	    T3DataViewFrame @[4] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [26] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		    GraphColView @[7] { };
		    GraphColView @[8] { };
		    GraphColView @[9] { };
		    GraphColView @[10] { };
		    GraphColView @[11] { };
		    GraphColView @[12] { };
		    GraphColView @[13] { };
		    GraphColView @[14] { };
		    GraphColView @[15] { };
		    GraphColView @[16] { };
		    GraphColView @[17] { };
		    GraphColView @[18] { };
		    GraphColView @[19] { };
		    GraphColView @[20] { };
		    GraphColView @[21] { };
		    GraphColView @[22] { };
		    GraphColView @[23] { };
		    GraphColView @[24] { };
		    GraphColView @[25] { };
		  };
		};
	      };

	      T3SavedView_List @.saved_views = [6] {
		T3SavedView @[0] { };
		T3SavedView @[1] { };
		T3SavedView @[2] { };
		T3SavedView @[3] { };
		T3SavedView @[4] { };
		T3SavedView @[5] { };
	      };
	    };
	    T3DataViewFrame @[5] { 
	      T3DataView_List @.children = [2] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [26] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		    GraphColView @[7] { };
		    GraphColView @[8] { };
		    GraphColView @[9] { };
		    GraphColView @[10] { };
		    GraphColView @[11] { };
		    GraphColView @[12] { };
		    GraphColView @[13] { };
		    GraphColView @[14] { };
		    GraphColView @[15] { };
		    GraphColView @[16] { };
		    GraphColView @[17] { };
		    GraphColView @[18] { };
		    GraphColView @[19] { };
		    GraphColView @[20] { };
		    GraphColView @[21] { };
		    GraphColView @[22] { };
		    GraphColView @[23] { };
		    GraphColView @[24] { };
		    GraphColView @[25] { };
		  };
		};
		GraphTableView @[1] { 
		  T3DataView_List @.children = [26] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		    GraphColView @[7] { };
		    GraphColView @[8] { };
		    GraphColView @[9] { };
		    GraphColView @[10] { };
		    GraphColView @[11] { };
		    GraphColView @[12] { };
		    GraphColView @[13] { };
		    GraphColView @[14] { };
		    GraphColView @[15] { };
		    GraphColView @[16] { };
		    GraphColView @[17] { };
		    GraphColView @[18] { };
		    GraphColView @[19] { };
		    GraphColView @[20] { };
		    GraphColView @[21] { };
		    GraphColView @[22] { };
		    GraphColView @[23] { };
		    GraphColView @[24] { };
		    GraphColView @[25] { };
		  };
		};
	      };

	      T3SavedView_List @.saved_views = [6] {
		T3SavedView @[0] { };
		T3SavedView @[1] { };
		T3SavedView @[2] { };
		T3SavedView @[3] { };
		T3SavedView @[4] { };
		T3SavedView @[5] { };
	      };
	    };
	    T3DataViewFrame @[6] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [5] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		  };
		};
	      };

	      T3SavedView_List @.saved_views = [6] {
		T3SavedView @[0] { };
		T3SavedView @[1] { };
		T3SavedView @[2] { };
		T3SavedView @[3] { };
		T3SavedView @[4] { };
		T3SavedView @[5] { };
	      };
	    };
	    T3DataViewFrame @[7] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [7] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		    GraphColView @[4] { };
		    GraphColView @[5] { };
		    GraphColView @[6] { };
		  };
		};
	      };

	      T3SavedView_List @.saved_views = [6] {
		T3SavedView @[0] { };
		T3SavedView @[1] { };
		T3SavedView @[2] { };
		T3SavedView @[3] { };
		T3SavedView @[4] { };
		T3SavedView @[5] { };
	      };
	    };
	    T3DataViewFrame @[8] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [4] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		    GraphColView @[2] { };
		    GraphColView @[3] { };
		  };
		};
	      };

	      T3SavedView_List @.saved_views = [6] {
		T3SavedView @[0] { };
		T3SavedView @[1] { };
		T3SavedView @[2] { };
		T3SavedView @[3] { };
		T3SavedView @[4] { };
		T3SavedView @[5] { };
	      };
	    };
	    T3DataViewFrame @[9] { 
	      T3DataView_List @.children = [1] {
		GraphTableView @[0] { 
		  T3DataView_List @.children = [2] {
		    GraphColView @[0] { };
		    GraphColView @[1] { };
		  };
		};
	      };

	      T3SavedView_List @.saved_views = [6] {
		T3SavedView @[0] { };
		T3SavedView @[1] { };
		T3SavedView @[2] { };
		T3SavedView @[3] { };
		T3SavedView @[4] { };
		T3SavedView @[5] { };
	      };
	    };
	  };
	};
      };

      DockViewer_List @.docks = [1] {
	ToolBoxDockViewer @[0] { 
     UserDataItem_List @*(.user_data_) {
	    UserDataItem @[0] { };
	    UserDataItem @[1] { };
	    UserDataItem @[2] { };
	    UserDataItem @[3] { };
	    UserDataItem @[4] { };
	    UserDataItem @[5] { };
     };
};
      };
    };
  };

  Network_Group @.networks = [1] {
    LeabraNetwork @[0] { 
   UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
	UserDataItem @[1] { };
	UserDataItem @[2] { };
	UserDataItem @[3] { };
	UserDataItem @[4] { };
	UserDataItem @[5] { };
	UserDataItem @[6] { };
	UserDataItem @[7] { };
	UserDataItem @[8] { };
	UserDataItem @[9] { };
	UserDataItem @[10] { };
	UserDataItem @[11] { };
	UserDataItem @[12] { };
	UserDataItem @[13] { };
	UserDataItem @[14] { };
	UserDataItem @[15] { };
	UserDataItem @[16] { };
	UserDataItem @[17] { };
	UserDataItem @[18] { };
   };

      BaseSpec_Group @.specs = [4] {
	LeabraUnitSpec @[0] { 
	  BaseSpec_Group @.children = [0] {
	  };

	  Schedule @.noise_sched = [0] {
	  };
	};
	LeabraUnitSpec @[1] { 
	  BaseSpec_Group @.children = [0] {
	  };

	  Schedule @.noise_sched = [0] {
	  };
	};
	LeabraBiasSpec @[2] { 
	  BaseSpec_Group @.children = [0] {
	  };

	  Schedule @.lrate_sched = [0] {
	  };
	};
	LeabraLayerSpec @[3] { 
	  BaseSpec_Group @.children = [0] {
	  };
	};
      };

      Layer_Group @.layers = [1] {
	LeabraLayer @[0] { 
	  Projection_Group @.projections = [0] {
	  };

	  Unit_Group @.units = [1] {
	  };
	};
      };

      NetViewObj_Group @.view_objs = [0] {
      };
    };
  };
};
LeabraProject .projects[0] {
 name="Project_0";
 desc=;
 tags=;
 version {
  major=0;
  minor=0;
  step=0;
 };
 wiki_url {
  sync=0;
  wiki=;
  url=;
 };
 templates {
  name=;
  el_typ=taBase;
  el_def=0;
 };
 docs {
  name=;
  el_typ=taDoc;
  el_def=0;
  taDoc @[0] {
   name="ProjectDocs";
   auto_open=1;
   web_doc=0;
   wiki=;
   url="local";
   full_url="local";
   text_size=1;
   text="<html>
<head></head>
<body>
= Ct STDP Sim =

Key papers:

* [[http://grey.colorado.edu/ccnlab/index.php/RubinGerkinBiEtAl05]]
* [[http://grey.colorado.edu/ccnlab/index.php/GerkinLauNauenEtAl07]]

== RubinEtAl05 ==

This sim replicates the P,A,V,B,D,W dynamics and parameters exactly from RubinEtAl05, while using a vastly simplified CA_i (cai) dynamics that are computed from a sender conductance alpha function and a recv back-projecting alpha function (narrower) (computed from the SendSpikeAlpha and RecvSpikeAlpha unit specs in Network_0), and some factors for how much comes directly from the sender spike alone, the recv spike alone, and the product of sender * recv (which is the NMDA unblocking).  That this is able to capture the key phenomena without all the other complex NMDA channel dynamics from the RubinEtAl paper is very encouraging.

</body>
</html>
";
   html_text="<html><head></head><body>
<h1> Ct STDP Sim </h1>
<p>
Key papers:
</p><p>
</p><ul><li> <a href=\"http://grey.colorado.edu/ccnlab/index.php/RubinGerkinBiEtAl05\">http://grey.colorado.edu/ccnlab/index.php/RubinGerkinBiEtAl05</a>
</li><li> <a href=\"http://grey.colorado.edu/ccnlab/index.php/GerkinLauNauenEtAl07\">http://grey.colorado.edu/ccnlab/index.php/GerkinLauNauenEtAl07</a>
</li></ul>
<h2> RubinEtAl05 </h2>
<p>
This sim replicates the P,A,V,B,D,W dynamics and parameters exactly from RubinEtAl05, while using a vastly simplified CA_i (cai) dynamics that are computed from a sender conductance alpha function and a recv back-projecting alpha function (narrower) (computed from the SendSpikeAlpha and RecvSpikeAlpha unit specs in Network_0), and some factors for how much comes directly from the sender spike alone, the recv spike alone, and the product of sender * recv (which is the NMDA unblocking).  That this is able to capture the key phenomena without all the other complex NMDA channel dynamics from the RubinEtAl paper is very encouraging.
</p><p>


</p></body></html>";
  };
 };
 wizards {
  name=;
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="LeabraWizard_0";
   auto_open=0;
   n_layers=3;
   layer_cfg {
    name=;
    el_typ=LayerWizEl;
    el_def=0;
    LayerWizEl @[0] {
     name="Input";
     n_units=25;
     io_type=INPUT;
    };
    LayerWizEl @[1] {
     name="Hidden";
     n_units=25;
     io_type=HIDDEN;
    };
    LayerWizEl @[2] {
     name="Output";
     n_units=25;
     io_type=OUTPUT;
    };
   };
   connectivity=BIDIRECTIONAL;
   default_net_type=LeabraNetwork;
  };
 };
 edits {
  name=;
  el_typ=SelectEdit;
  el_def=0;
 };
 data {
  name=;
  el_typ=DataTable;
  el_def=0;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
  };
 };
 data_proc {
  name=;
  el_typ=taDataProc;
  el_def=0;
  taDataProc @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="data_base";
  };
  taDataAnal @[1] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="data_anal";
  };
  taDataGen @[2] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="data_gen";
  };
  taImageProc @[3] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="NO_CLIP";
     value 1 0=1;
     val_type_fixed=0;
    };
   };
   name="image_proc";
  };
 };
 programs {
  name=;
  el_typ=Program;
  el_def=0;
  step_prog=NULL;
  tags=;
  desc=;
  Program @[0] {
   name="XCALSpike";
   tags=;
   desc="spike-based XCAL based on Urakubo simplified";
   flags=;
   objs {
    name=;
    el_typ=DataTable;
    el_def=0;
    DataTable @[0] {
     name="XCALSpike_SimData";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="r_rate";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       name="s_rate";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[2] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[3] {
       name="s_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[4] {
       name="r_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[5] {
       name="Ca";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[6] {
       name="dCa";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[7] {
       name="Ca_max";
       desc="avg Ca";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[8] {
       name="Ca_avg";
       desc="avg CA";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[9] {
       name="NMDAR";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[10] {
       name="dNMDAR";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[11] {
       name="V";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[12] {
       name="dV";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[13] {
       name="dw";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[14] {
       name="w";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[1] {
     name="XCALSpike_OffData";
     desc=;
     data {
      name="data";
      el_typ=DataColTp;
      el_def=0;
      float_Data @[0] {
       name="r_rate";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 5;5;       };
      };
      float_Data @[1] {
       name="s_rate";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 5;5;       };
      };
      float_Data @[2] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 1000;1000;       };
      };
      float_Data @[3] {
       name="dw";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] -2.7642603;-2.7642603;       };
      };
      float_Data @[4] {
       name="Ca_max";
       desc="avg Ca";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 5.089241;5.089241;       };
      };
      float_Data @[5] {
       name="Ca_avg";
       desc="avg CA";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 1.2357396;1.2357396;       };
      };
      float_Data @[6] {
       name="w";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 0;0;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
   };
   types {
    name=;
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="SimType";
     desc=;
     enums {
      name=;
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="ONE_TRIAL";
       value=0;
       desc="run one trial";
      };
      DynEnumItem @[1] {
       name="FULL_RUN";
       value=1;
       desc="full run through all pre-post cases";
      };
     };
     bits=0;
    };
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="XCALSpike_SimData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[0].objs[0]$0$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="sim_type";
     var_type=T_DynEnum;
     dyn_enum_val {
      enum_type=.projects[0].programs[0].types[0]$1$;
      value=0;
     };
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="poisson";
     var_type=T_Bool;
     bool_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="use Poisson random firing (else regular firing)";
     init_from=NULL;
    };
    ProgVar @[3] {
     name="s_rate";
     var_type=T_Real;
     real_val=5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[4] {
     name="r_rate";
     var_type=T_Real;
     real_val=5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[5] {
     name="s_p";
     var_type=T_Real;
     real_val=0.005;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sending probability (Poisson)";
     init_from=NULL;
    };
    ProgVar @[6] {
     name="r_p";
     var_type=T_Real;
     real_val=0.005;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="recv probability (Poisson)";
     init_from=NULL;
    };
    ProgVar @[7] {
     name="rate_inc";
     var_type=T_Real;
     real_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="increment in rate for full search";
     init_from=NULL;
    };
    ProgVar @[8] {
     name="rate_st";
     var_type=T_Real;
     real_val=5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="starting rate";
     init_from=NULL;
    };
    ProgVar @[9] {
     name="rate_max";
     var_type=T_Real;
     real_val=105;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="starting rate";
     init_from=NULL;
    };
    ProgVar @[10] {
     name="s_act";
     var_type=T_Bool;
     bool_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[11] {
     name="r_act";
     var_type=T_Bool;
     bool_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[12] {
     name="NMDAR_dt";
     var_type=T_Real;
     real_val=40;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="40ms";
     init_from=NULL;
    };
    ProgVar @[13] {
     name="V_rest";
     var_type=T_Real;
     real_val=-65;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-65mV resting potential";
     init_from=NULL;
    };
    ProgVar @[14] {
     name="V_dt";
     var_type=T_Real;
     real_val=6;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="6 ms";
     init_from=NULL;
    };
    ProgVar @[15] {
     name="Ca_dt";
     var_type=T_Real;
     real_val=20;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="20ms ca time constant";
     init_from=NULL;
    };
    ProgVar @[16] {
     name="Ca_vgcc";
     var_type=T_Real;
     real_val=1.3;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="1.3 postsynaptic ca current";
     init_from=NULL;
    };
    ProgVar @[17] {
     name="Ca_v_nmda";
     var_type=T_Real;
     real_val=0.0223;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=".0223 in paper but this doesn't seem right";
     init_from=NULL;
    };
    ProgVar @[18] {
     name="Ca_nmda";
     var_type=T_Real;
     real_val=0.5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="baseline Ca from nmda irrespective of NMDA";
     init_from=NULL;
    };
    ProgVar @[19] {
     name="AP";
     var_type=T_Real;
     real_val=20;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="40mV action potential potential (backpropagated to spine)";
     init_from=NULL;
    };
    ProgVar @[20] {
     name="K_ca";
     var_type=T_Real;
     real_val=0.3;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="0.3 effective Ca thatgives 50% inhibition of maximal activity";
     init_from=NULL;
    };
    ProgVar @[21] {
     name="A_ltp";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="40 -- amplitude of LTP";
     init_from=NULL;
    };
    ProgVar @[22] {
     name="A_ltd";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="20 -- amplitude of LTD";
     init_from=NULL;
    };
    ProgVar @[23] {
     name="Th_ltp";
     var_type=T_Real;
     real_val=6.2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="6.2 threshold for ltp";
     init_from=NULL;
    };
    ProgVar @[24] {
     name="Th_ltd";
     var_type=T_Real;
     real_val=4;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="4 threshold for ltd";
     init_from=NULL;
    };
    ProgVar @[25] {
     name="time_max";
     var_type=T_Real;
     real_val=1000;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[26] {
     name="sim_dt";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="in msec";
     init_from=NULL;
    };
    ProgVar @[27] {
     name="s_interval";
     var_type=T_Int;
     int_val=200;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[28] {
     name="s_offset";
     var_type=T_Int;
     int_val=100;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[29] {
     name="r_interval";
     var_type=T_Int;
     int_val=200;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[30] {
     name="time";
     var_type=T_Int;
     int_val=1000;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[31] {
     name="XCALSpike_OffData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[0].objs[1]$2$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[32] {
     name="NMDAR";
     var_type=T_Real;
     real_val=0.03949437256013871;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[33] {
     name="dNMDAR";
     var_type=T_Real;
     real_val=-0.001012676219490736;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[34] {
     name="V";
     var_type=T_Real;
     real_val=-64.96614004295786;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[35] {
     name="dV";
     var_type=T_Real;
     real_val=-0.00677199140842788;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[36] {
     name="Ca";
     var_type=T_Real;
     real_val=0.9688718305694145;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[37] {
     name="dCa";
     var_type=T_Real;
     real_val=-0.02963512000796512;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[38] {
     name="dw";
     var_type=T_Real;
     real_val=-2.764260360060955;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[39] {
     name="w";
     var_type=T_Real;
     real_val=0.000319006;
     objs_ptr=0;
     flags=NULL_CHECK|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[40] {
     name="Ca_max";
     var_type=T_Real;
     real_val=5.089240894298648;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[41] {
     name="Ca_avg";
     var_type=T_Real;
     real_val=1.235739639939045;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[42] {
     name="Ca_sum";
     var_type=T_Real;
     real_val=1234.503900299105;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
    Function @[0] {
     desc=;
     flags=;
     name="XCALSpikeAct";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      IfElse @[1] {
       desc=;
       flags=;
       cond {
	expr="poisson";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[0].vars[10]$3$;
	 expr {
	  expr="Random::Poisson(s_p)";
	 };
	};
	AssignExpr @[1] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[0].vars[11]$4$;
	 expr {
	  expr="Random::Poisson(r_p)";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=$3$;
	 expr {
	  expr="(time + s_offset) % s_interval == 0";
	 };
	};
	AssignExpr @[1] {
	 desc=;
	 flags=;
	 result_var=$4$;
	 expr {
	  expr="time % r_interval == 0";
	 };
	};
       };
      };
     };
    };
    Function @[1] {
     desc="do one time step of computation using current parameters, and writing results to table";
     flags=;
     name="XCALSpikeCycle";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[0].vars[33]$5$;
       expr {
	expr="-NMDAR/NMDAR_dt";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=.projects[0].programs[0].vars[35]$6$;
       expr {
	expr="-(V - V_rest) / V_dt";
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=.projects[0].programs[0].vars[37]$7$;
       expr {
	expr="(NMDAR * (Ca_v_nmda * (V - V_rest) + Ca_nmda)) - (Ca / Ca_dt)";
       };
      };
      VarIncr @[4] {
       desc=;
       flags=;
       var=.projects[0].programs[0].vars[32]$8$;
       expr {
	expr="sim_dt*dNMDAR";
       };
      };
      VarIncr @[5] {
       desc=;
       flags=;
       var=.projects[0].programs[0].vars[34]$9$;
       expr {
	expr="sim_dt*dV";
       };
      };
      VarIncr @[6] {
       desc=;
       flags=;
       var=.projects[0].programs[0].vars[36]$10$;
       expr {
	expr="sim_dt*dCa";
       };
      };
      IfElse @[7] {
       desc=;
       flags=;
       cond {
	expr="s_act";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	VarIncr @[0] {
	 desc=;
	 flags=;
	 var=$8$;
	 expr {
	  expr="K_ca / (K_ca + Ca)";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
      };
      IfElse @[8] {
       desc=;
       flags=;
       cond {
	expr="r_act";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	VarIncr @[0] {
	 desc=;
	 flags=;
	 var=$9$;
	 expr {
	  expr="AP";
	 };
	};
	VarIncr @[1] {
	 desc=;
	 flags=;
	 var=$10$;
	 expr {
	  expr="Ca_vgcc";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
      };
      VarIncr @[9] {
       desc=;
       flags=;
       var=.projects[0].programs[0].vars[42]$11$;
       expr {
	expr="Ca";
       };
      };
      AssignExpr @[10] {
       desc=;
       flags=;
       result_var=.projects[0].programs[0].vars[41]$12$;
       expr {
	expr="Ca_sum / time";
       };
      };
      If @[11] {
       desc=;
       flags=;
       cond {
	expr="Ca > Ca_max";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[0].vars[40]$13$;
	 expr {
	  expr="Ca";
	 };
	};
       };
      };
     };
    };
    Function @[2] {
     desc="actually compute weight change based on Ca_max";
     flags=;
     name="XCALSpikeDWt";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      IfElse @[1] {
       desc=;
       flags=;
       cond {
	expr="Ca_avg > Th_ltp";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[0].vars[38]$14$;
	 expr {
	  expr="A_ltp * (Ca_avg - Th_ltp)";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	IfElse @[0] {
	 desc=;
	 flags=;
	 cond {
	  expr="Ca_avg > Th_ltd";
	 };
	 true_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc="no-mans-land";
	   flags=;
	   result_var=$14$;
	   expr {
	    expr="0.0";
	   };
	  };
	 };
	 false_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc="note: negative bc Ca_max < Th_ltd";
	   flags=;
	   result_var=$14$;
	   expr {
	    expr="A_ltd * (Ca_avg - Th_ltd)";
	   };
	  };
	 };
	};
       };
      };
     };
    };
    Function @[3] {
     desc=;
     flags=;
     name="RecordData";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AddNewDataRow @[1] {
       desc=;
       flags=;
       data_var=.projects[0].programs[0].vars[0]$15$;
      };
      DataVarProg @[2] {
       desc=;
       flags=;
       data_var=$15$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=.projects[0].programs[0].vars[30]$16$;
       var_2=.projects[0].programs[0].vars[4]$17$;
       var_3=.projects[0].programs[0].vars[3]$18$;
       var_4=NULL;
      };
      DataVarProg @[3] {
       desc=;
       flags=;
       data_var=$15$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=NULL;
       var_2=$3$;
       var_3=$4$;
       var_4=$12$;
      };
      DataVarProg @[4] {
       desc=;
       flags=;
       data_var=$15$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$8$;
       var_2=$5$;
       var_3=$9$;
       var_4=$6$;
      };
      DataVarProg @[5] {
       desc=;
       flags=;
       data_var=$15$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$10$;
       var_2=$7$;
       var_3=$14$;
       var_4=$13$;
      };
      DoneWritingDataRow @[6] {
       desc=;
       flags=;
       data_var=$15$;
      };
     };
    };
    Function @[4] {
     desc="initialize vals prior to run";
     flags=;
     name="InitRun";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=$8$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=$9$;
       expr {
	expr="V_rest";
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=$10$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=$13$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=$11$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[6] {
       desc=;
       flags=;
       result_var=$14$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[7] {
       desc=;
       flags=;
       result_var=.projects[0].programs[0].vars[29]$19$;
       expr {
	expr="1000.0 / r_rate";
       };
      };
      AssignExpr @[8] {
       desc=;
       flags=;
       result_var=.projects[0].programs[0].vars[27]$20$;
       expr {
	expr="1000.0 / s_rate";
       };
      };
      AssignExpr @[9] {
       desc=;
       flags=;
       result_var=.projects[0].programs[0].vars[28]$21$;
       expr {
	expr=".5 * s_interval";
       };
      };
      AssignExpr @[10] {
       desc=;
       flags=;
       result_var=.projects[0].programs[0].vars[5]$22$;
       expr {
	expr="s_rate / 1000.0";
       };
      };
      AssignExpr @[11] {
       desc=;
       flags=;
       result_var=.projects[0].programs[0].vars[6]$23$;
       expr {
	expr="r_rate / 1000.0";
       };
      };
     };
    };
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    ResetDataRows @[0] {
     desc=;
     flags=;
     data_var=$15$;
    };
    Switch @[1] {
     desc=;
     flags=;
     switch_var=.projects[0].programs[0].vars[1]$24$;
     cases {
      name=;
      el_typ=CaseBlock;
      el_def=0;
      CaseBlock @[0] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	FunctionCall @[0] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[0].functions[4]$25$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	ForLoop @[1] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=.projects[0].programs[0].functions[0]$26$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  FunctionCall @[1] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=.projects[0].programs[0].functions[1]$27$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  FunctionCall @[2] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=.projects[0].programs[0].functions[3]$28$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  StopStepPoint @[3] {
	   desc=;
	   flags=;
	  };
	 };
	 init {
	  expr="time = 1";
	 };
	 test {
	  expr="time < time_max";
	 };
	 iter {
	  expr="time += sim_dt";
	 };
	};
	FunctionCall @[2] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[0].functions[2]$29$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	FunctionCall @[3] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=$28$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
       };
       case_val {
	expr="ONE_TRIAL";
       };
      };
      CaseBlock @[1] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$25$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    ForLoop @[1] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$26$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      FunctionCall @[1] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$27$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      FunctionCall @[2] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$28$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      StopStepPoint @[3] {
	       desc=;
	       flags=;
	      };
	     };
	     init {
	      expr="time = 1";
	     };
	     test {
	      expr="time < time_max";
	     };
	     iter {
	      expr="time += sim_dt";
	     };
	    };
	    FunctionCall @[2] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$29$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    FunctionCall @[3] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$28$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	   };
	   init {
	    expr="s_rate = rate_st";
	   };
	   test {
	    expr="s_rate <= rate_max";
	   };
	   iter {
	    expr="s_rate += rate_inc";
	   };
	  };
	 };
	 init {
	  expr="r_rate = rate_st";
	 };
	 test {
	  expr="r_rate <= rate_max";
	 };
	 iter {
	  expr="r_rate += rate_inc";
	 };
	};
       };
       case_val {
	expr="FULL_RUN";
       };
      };
     };
    };
    DataGroupProg @[2] {
     desc=;
     flags=;
     src_data_var=$15$;
     dest_data_var=.projects[0].programs[0].vars[31]$30$;
     group_spec {
      name="group_spec";
      ops {
       name=;
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @[0] {
	col_name="r_rate";
	agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[1] {
	col_name="s_rate";
	agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[2] {
	col_name="time";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[3] {
	col_name="dw";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[4] {
	col_name="Ca_max";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[5] {
	col_name="Ca_avg";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[6] {
	col_name="w";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=0;
     };
    };
    DataAnalCall @[3] {
     desc=;
     flags=;
     result_var=NULL;
     object_type=taDataAnal;
     method=taDataAnal::Matrix3DGraph;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="data";
       required=0;
       def_val=;
       expr {
	expr="XCALSpike_OffData";
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="x_axis_col";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"s_rate\"";
       };
      };
      ProgArg @[2] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="z_axis_col";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"r_rate\"";
       };
      };
     };
    };
   };
  };
  Program @[1] {
   name="UrakuboEtAl08";
   tags=;
   desc="exact repl of Urakubo Et Al 2008 reduced STDP model";
   flags=;
   objs {
    name=;
    el_typ=DataTable;
    el_def=0;
    DataTable @[0] {
     name="UrakuboEtAl_SimData";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="r_fire_off";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[2] {
       name="s_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[3] {
       name="r_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[4] {
       name="Ca";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[5] {
       name="dCa";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[6] {
       name="Ca_max";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[7] {
       name="NMDAR";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[8] {
       name="dNMDAR";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[9] {
       name="V";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[10] {
       name="dV";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[11] {
       name="dw";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[12] {
       name="w";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[1] {
     name="UrakuboEtAl_OffData";
     desc=;
     data {
      name="data";
      el_typ=DataColTp;
      el_def=0;
      float_Data @[0] {
       name="r_fire_off";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [20] -100;-90;-80;-70;-60;-50;-40;-30;-20;-10;
10;20;30;40;50;60;70;80;90;100;
       };
      };
      float_Data @[1] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [20] 300;300;300;300;300;300;300;300;300;300;
300;300;300;300;300;300;300;300;300;300;
       };
      };
      float_Data @[2] {
       name="dw";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [20] 0;0;0;0;0;-3.1640105;-13.775851;-25.787043;-37.411903;-45.745911;
50.013977;46.375713;27.386887;0.46120301;0;0;0;0;0;0;
       };
      };
      float_Data @[3] {
       name="Ca_max";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [20] 4.9638662;4.8833475;4.7547216;4.5548553;4.2573328;3.8417995;3.3112075;2.7106478;2.1294048;1.7127044;
7.4503493;7.3593926;6.8846722;6.2115302;5.4781876;5.089241;5.089241;5.089241;5.089241;5.089241;
       };
      };
      float_Data @[4] {
       name="w";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [20] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
   };
   types {
    name=;
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="SimType";
     desc=;
     enums {
      name=;
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="PAIRS";
       value=0;
       desc="one pair of sender and receiver firing with timing firing offset (standard STDP data)";
      };
      DynEnumItem @[1] {
       name="TRIPLES";
       value=1;
       desc="triple firing data: pre-post-pre vs. post-pre-post -- all just at one offset";
      };
     };
     bits=0;
    };
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="UrakuboEtAl_SimData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[1].objs[0]$31$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="sim_type";
     var_type=T_DynEnum;
     dyn_enum_val {
      enum_type=.projects[0].programs[1].types[0]$32$;
      value=0;
     };
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="r_fire_t_trg";
     var_type=T_Int;
     int_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target recv firing time (actual time may be diff depending on protocol)";
     init_from=NULL;
    };
    ProgVar @[3] {
     name="s_fire_off_rng";
     var_type=T_Int;
     int_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="range around r_fire_t to vary s_fire_t";
     init_from=NULL;
    };
    ProgVar @[4] {
     name="s_fire_off_inc";
     var_type=T_Int;
     int_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="increment in s_fire_off to explore";
     init_from=NULL;
    };
    ProgVar @[5] {
     name="time_max";
     var_type=T_Real;
     real_val=300;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[6] {
     name="s_act";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[7] {
     name="r_act";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[8] {
     name="NMDAR_dt";
     var_type=T_Real;
     real_val=40;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="40ms";
     init_from=NULL;
    };
    ProgVar @[9] {
     name="V_rest";
     var_type=T_Real;
     real_val=-65;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-65mV resting potential";
     init_from=NULL;
    };
    ProgVar @[10] {
     name="V_dt";
     var_type=T_Real;
     real_val=6;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="6 ms";
     init_from=NULL;
    };
    ProgVar @[11] {
     name="Ca_dt";
     var_type=T_Real;
     real_val=20;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="20ms ca time constant";
     init_from=NULL;
    };
    ProgVar @[12] {
     name="Ca_vgcc";
     var_type=T_Real;
     real_val=1.3;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="1.3 postsynaptic ca current";
     init_from=NULL;
    };
    ProgVar @[13] {
     name="Ca_v_nmda";
     var_type=T_Real;
     real_val=0.0223;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=".0223 in paper but this doesn't seem right";
     init_from=NULL;
    };
    ProgVar @[14] {
     name="Ca_nmda";
     var_type=T_Real;
     real_val=0.5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="baseline Ca from nmda irrespective of NMDA";
     init_from=NULL;
    };
    ProgVar @[15] {
     name="AP";
     var_type=T_Real;
     real_val=30;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="40mV action potential potential (backpropagated to spine)";
     init_from=NULL;
    };
    ProgVar @[16] {
     name="K_ca";
     var_type=T_Real;
     real_val=0.3;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="0.3 effective Ca thatgives 50% inhibition of maximal activity";
     init_from=NULL;
    };
    ProgVar @[17] {
     name="A_ltp";
     var_type=T_Real;
     real_val=40;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="40 -- amplitude of LTP";
     init_from=NULL;
    };
    ProgVar @[18] {
     name="A_ltd";
     var_type=T_Real;
     real_val=20;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="20 -- amplitude of LTD";
     init_from=NULL;
    };
    ProgVar @[19] {
     name="Th_ltp";
     var_type=T_Real;
     real_val=6.2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="6.2 threshold for ltp";
     init_from=NULL;
    };
    ProgVar @[20] {
     name="Th_ltd";
     var_type=T_Real;
     real_val=4;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="4 threshold for ltd";
     init_from=NULL;
    };
    ProgVar @[21] {
     name="sim_dt";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="in msec";
     init_from=NULL;
    };
    ProgVar @[22] {
     name="s_fire_t";
     var_type=T_Int;
     int_val=200;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[23] {
     name="s_fire_off";
     var_type=T_Real;
     real_val=110;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="range around r_fire_t to vary s_fire_t";
     init_from=NULL;
    };
    ProgVar @[24] {
     name="r_fire_off";
     var_type=T_Real;
     real_val=-100;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-s_fire_off -- more typical for stdp expts";
     init_from=NULL;
    };
    ProgVar @[25] {
     name="r_fire_t";
     var_type=T_Int;
     int_val=100;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[26] {
     name="time";
     var_type=T_Real;
     real_val=300;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[27] {
     name="UrakuboEtAl_OffData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[1].objs[1]$33$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[28] {
     name="NMDAR";
     var_type=T_Real;
     real_val=0.07951615787331388;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[29] {
     name="dNMDAR";
     var_type=T_Real;
     real_val=-0.002038875842905484;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[30] {
     name="V";
     var_type=T_Real;
     real_val=-64.99999999999997;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[31] {
     name="dV";
     var_type=T_Real;
     real_val=-4.736951571734001e-15;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[32] {
     name="Ca";
     var_type=T_Real;
     real_val=1.46884620223575;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[33] {
     name="dCa";
     var_type=T_Real;
     real_val=-0.03438399289860818;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[34] {
     name="dw";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[35] {
     name="w";
     var_type=T_Real;
     real_val=0.000319006;
     objs_ptr=0;
     flags=NULL_CHECK|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[36] {
     name="Ca_max";
     var_type=T_Real;
     real_val=4.963866068470038;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
    Function @[0] {
     desc="do one time step of computation using current parameters, and writing results to table";
     flags=;
     name="UrakuboCycle";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[1].vars[6]$34$;
       expr {
	expr="(time == s_fire_t) ? 1.0 : 0.0";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=.projects[0].programs[1].vars[7]$35$;
       expr {
	expr="(time == r_fire_t) ? 1.0 : 0.0";
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=.projects[0].programs[1].vars[29]$36$;
       expr {
	expr="-NMDAR/NMDAR_dt";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=.projects[0].programs[1].vars[31]$37$;
       expr {
	expr="-(V - V_rest) / V_dt";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=.projects[0].programs[1].vars[33]$38$;
       expr {
	expr="(NMDAR * (Ca_v_nmda * (V - V_rest) + Ca_nmda)) - (Ca / Ca_dt)";
       };
      };
      VarIncr @[6] {
       desc=;
       flags=;
       var=.projects[0].programs[1].vars[28]$39$;
       expr {
	expr="sim_dt*dNMDAR";
       };
      };
      VarIncr @[7] {
       desc=;
       flags=;
       var=.projects[0].programs[1].vars[30]$40$;
       expr {
	expr="sim_dt*dV";
       };
      };
      VarIncr @[8] {
       desc=;
       flags=;
       var=.projects[0].programs[1].vars[32]$41$;
       expr {
	expr="sim_dt*dCa";
       };
      };
      IfElse @[9] {
       desc=;
       flags=;
       cond {
	expr="s_act";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	VarIncr @[0] {
	 desc=;
	 flags=;
	 var=$39$;
	 expr {
	  expr="(K_ca / (K_ca + Ca))";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
      };
      IfElse @[10] {
       desc=;
       flags=;
       cond {
	expr="r_act";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	VarIncr @[0] {
	 desc=;
	 flags=;
	 var=$40$;
	 expr {
	  expr="AP";
	 };
	};
	VarIncr @[1] {
	 desc=;
	 flags=;
	 var=$41$;
	 expr {
	  expr="Ca_vgcc";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
      };
      If @[11] {
       desc=;
       flags=;
       cond {
	expr="Ca > Ca_max";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[1].vars[36]$42$;
	 expr {
	  expr="Ca";
	 };
	};
       };
      };
     };
    };
    Function @[1] {
     desc="actually compute weight change based on Ca_max";
     flags=;
     name="UrakuboDWt";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      IfElse @[1] {
       desc=;
       flags=;
       cond {
	expr="Ca_max > Th_ltp";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[1].vars[34]$43$;
	 expr {
	  expr="A_ltp * (Ca_max - Th_ltp)";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	IfElse @[0] {
	 desc=;
	 flags=;
	 cond {
	  expr="Ca_max > Th_ltd";
	 };
	 true_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc="no-mans-land";
	   flags=;
	   result_var=$43$;
	   expr {
	    expr="0.0";
	   };
	  };
	 };
	 false_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc="note: negative bc Ca_max < Th_ltd";
	   flags=;
	   result_var=$43$;
	   expr {
	    expr="A_ltd * (Ca_max - Th_ltd)";
	   };
	  };
	 };
	};
       };
      };
     };
    };
    Function @[2] {
     desc=;
     flags=;
     name="RecordData";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AddNewDataRow @[1] {
       desc=;
       flags=;
       data_var=.projects[0].programs[1].vars[0]$44$;
      };
      DataVarProg @[2] {
       desc=;
       flags=;
       data_var=$44$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=.projects[0].programs[1].vars[26]$45$;
       var_2=.projects[0].programs[1].vars[24]$46$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[3] {
       desc=;
       flags=;
       data_var=$44$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=NULL;
       var_2=$34$;
       var_3=$35$;
       var_4=NULL;
      };
      DataVarProg @[4] {
       desc=;
       flags=;
       data_var=$44$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=$39$;
       var_2=$36$;
       var_3=$40$;
       var_4=$37$;
      };
      DataVarProg @[5] {
       desc=;
       flags=;
       data_var=$44$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=$41$;
       var_2=$38$;
       var_3=$43$;
       var_4=$42$;
      };
     };
    };
    Function @[3] {
     desc="initialize vals prior to run";
     flags=;
     name="InitRun";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=$39$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=$40$;
       expr {
	expr="V_rest";
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=$41$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=$42$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=$43$;
       expr {
	expr="0.0";
       };
      };
     };
    };
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    ResetDataRows @[0] {
     desc=;
     flags=;
     data_var=$44$;
    };
    Switch @[1] {
     desc=;
     flags=;
     switch_var=.projects[0].programs[1].vars[1]$47$;
     cases {
      name=;
      el_typ=CaseBlock;
      el_def=0;
      CaseBlock @[0] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  IfContinue @[0] {
	   desc=;
	   flags=;
	   cond {
	    expr="s_fire_off == 0";
	   };
	  };
	  AssignExpr @[1] {
	   desc=;
	   flags=;
	   result_var=.projects[0].programs[1].vars[25]$48$;
	   expr {
	    expr="r_fire_t_trg";
	   };
	  };
	  AssignExpr @[2] {
	   desc=;
	   flags=;
	   result_var=.projects[0].programs[1].vars[22]$49$;
	   expr {
	    expr="r_fire_t_trg + s_fire_off";
	   };
	  };
	  AssignExpr @[3] {
	   desc=;
	   flags=;
	   result_var=$46$;
	   expr {
	    expr="-s_fire_off";
	   };
	  };
	  FunctionCall @[4] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=.projects[0].programs[1].functions[3]$50$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  ForLoop @[5] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=.projects[0].programs[1].functions[0]$51$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    FunctionCall @[1] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=.projects[0].programs[1].functions[2]$52$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    StopStepPoint @[2] {
	     desc=;
	     flags=;
	    };
	   };
	   init {
	    expr="time = 0";
	   };
	   test {
	    expr="time < time_max";
	   };
	   iter {
	    expr="time += sim_dt";
	   };
	  };
	  FunctionCall @[6] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=.projects[0].programs[1].functions[1]$53$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  FunctionCall @[7] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$52$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	 };
	 init {
	  expr="s_fire_off = -s_fire_off_rng";
	 };
	 test {
	  expr="s_fire_off <= s_fire_off_rng";
	 };
	 iter {
	  expr="s_fire_off += s_fire_off_inc";
	 };
	};
       };
       case_val {
	expr="PAIRS";
       };
      };
      CaseBlock @[1] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	Comment @[0] {
	 desc="== PRE-POST-PRE";
	 flags=;
	};
	AssignExpr @[1] {
	 desc=;
	 flags=;
	 result_var=$48$;
	 expr {
	  expr="r_fire_t_trg";
	 };
	};
	AssignExpr @[2] {
	 desc=;
	 flags=;
	 result_var=$49$;
	 expr {
	  expr="r_fire_t_trg - s_fire_off_rng";
	 };
	};
	AssignExpr @[3] {
	 desc="signal that pre-post-pre is first case";
	 flags=;
	 result_var=$46$;
	 expr {
	  expr="-s_fire_off_rng";
	 };
	};
	FunctionCall @[4] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=$50$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	ForLoop @[5] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$51$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  FunctionCall @[1] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$52$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  If @[2] {
	   desc="just before next pre spike is due";
	   flags=;
	   cond {
	    expr="time == r_fire_t_trg + s_fire_off_rng -1";
	   };
	   true_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    AssignExpr @[0] {
	     desc=;
	     flags=;
	     result_var=$49$;
	     expr {
	      expr="r_fire_t_trg + s_fire_off_rng";
	     };
	    };
	   };
	  };
	  StopStepPoint @[3] {
	   desc=;
	   flags=;
	  };
	  FunctionCall @[4] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$53$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  FunctionCall @[5] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$52$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	 };
	 init {
	  expr="time = 0";
	 };
	 test {
	  expr="time < time_max";
	 };
	 iter {
	  expr="time += sim_dt";
	 };
	};
	Comment @[6] {
	 desc="== POST-PRE-POST";
	 flags=;
	};
	AssignExpr @[7] {
	 desc=;
	 flags=;
	 result_var=$49$;
	 expr {
	  expr="r_fire_t_trg";
	 };
	};
	AssignExpr @[8] {
	 desc=;
	 flags=;
	 result_var=$48$;
	 expr {
	  expr="r_fire_t_trg - s_fire_off_rng";
	 };
	};
	AssignExpr @[9] {
	 desc="signal that post-pre-post is 2nd case";
	 flags=;
	 result_var=$46$;
	 expr {
	  expr="s_fire_off_rng";
	 };
	};
	FunctionCall @[10] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=$50$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	ForLoop @[11] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$51$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  FunctionCall @[1] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$52$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  If @[2] {
	   desc="just before next post spike is due";
	   flags=;
	   cond {
	    expr="time == r_fire_t_trg + s_fire_off_rng -1";
	   };
	   true_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    AssignExpr @[0] {
	     desc=;
	     flags=;
	     result_var=$48$;
	     expr {
	      expr="r_fire_t_trg + s_fire_off_rng";
	     };
	    };
	   };
	  };
	  StopStepPoint @[3] {
	   desc=;
	   flags=;
	  };
	  FunctionCall @[4] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$53$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  FunctionCall @[5] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$52$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	 };
	 init {
	  expr="time = 0";
	 };
	 test {
	  expr="time < time_max";
	 };
	 iter {
	  expr="time += sim_dt";
	 };
	};
       };
       case_val {
	expr="TRIPLES";
       };
      };
     };
    };
    DataGroupProg @[2] {
     desc=;
     flags=;
     src_data_var=$44$;
     dest_data_var=.projects[0].programs[1].vars[27]$54$;
     group_spec {
      name="group_spec";
      ops {
       name=;
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @[0] {
	col_name="r_fire_off";
	agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[1] {
	col_name="time";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[2] {
	col_name="dw";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[3] {
	col_name="Ca_max";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[4] {
	col_name="w";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=0;
     };
    };
   };
  };
  Program @[2] {
   name="CtRubin";
   tags=;
   desc="Ct firing patterns with Rubin et al model";
   flags=;
   objs {
    name=;
    el_typ=DataTable;
    el_def=0;
    DataTable @[0] {
     name="CtRubin_SimData";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="trg_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       name="trg_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[2] {
       name="act_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[3] {
       name="act_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[4] {
       name="trg_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[5] {
       name="trg_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[6] {
       name="trg_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[7] {
       name="trg_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[8] {
       name="act_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[9] {
       name="act_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[10] {
       name="act_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[11] {
       name="act_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[12] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[13] {
       name="s_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[14] {
       name="s_ge";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[15] {
       name="r_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[16] {
       name="r_ge";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[17] {
       name="cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[18] {
       name="dcai";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[19] {
       name="P";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[20] {
       name="dP";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[21] {
       name="P_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[22] {
       name="V";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[23] {
       name="dV";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[24] {
       name="V_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[25] {
       name="A";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[26] {
       name="dA";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[27] {
       name="A_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[28] {
       name="B";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[29] {
       name="dB";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[30] {
       name="B_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[31] {
       name="D";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[32] {
       name="dD";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[33] {
       name="D_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[34] {
       name="W";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[35] {
       name="dW";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[36] {
       name="W_p_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[37] {
       name="W_d_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[38] {
       name="W_tot";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[1] {
     name="CtRubin_EndData";
     desc="select for the final time of each repl";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="trg_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       name="trg_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[2] {
       name="act_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[3] {
       name="act_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[4] {
       name="trg_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[5] {
       name="trg_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[6] {
       name="trg_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[7] {
       name="trg_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[8] {
       name="act_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[9] {
       name="act_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[10] {
       name="act_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[11] {
       name="act_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[12] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[13] {
       name="s_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[14] {
       name="s_ge";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[15] {
       name="r_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[16] {
       name="r_ge";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[17] {
       name="cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[18] {
       name="dcai";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[19] {
       name="P";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[20] {
       name="dP";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[21] {
       name="P_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[22] {
       name="V";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[23] {
       name="dV";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[24] {
       name="V_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[25] {
       name="A";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[26] {
       name="dA";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[27] {
       name="A_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[28] {
       name="B";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[29] {
       name="dB";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[30] {
       name="B_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[31] {
       name="D";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[32] {
       name="dD";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[33] {
       name="D_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[34] {
       name="W";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[35] {
       name="dW";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[36] {
       name="W_p_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[37] {
       name="W_d_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[38] {
       name="W_tot";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[2] {
     name="CtRubin_SumData_MP";
     desc="minus-pluse phase summary data";
     data {
      name="data";
      el_typ=DataColTp;
      el_def=0;
      float_Data @[0] {
       name="trg_sr_m_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [42] 0.0099999998;0.02;0.029999999;0.039999999;0.050000001;0.059999999;0.07;0.079999998;0.090000004;0.1;
0.12;0.14;0.15000001;0.16;0.18000001;0.2;0.20999999;0.23999999;0.25;0.27000001;
0.28;0.30000001;0.31999999;0.34999999;0.36000001;0.40000001;0.41999999;0.44999999;0.47999999;0.49000001;
0.5;0.54000002;0.56;0.60000002;0.63;0.63999999;0.69999999;0.72000003;0.80000001;0.81;
0.89999998;1;       };
      };
      float_Data @[1] {
       name="trg_sr_p_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [42] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;       };
      };
      float_Data @[2] {
       name="W_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [42] -0.0070152134;-0.0049266908;0.0024956656;0.015306619;0.014051253;0.027414542;0.052457891;0.0341863;0.048329748;0.07152538;
0.050907839;0.05302785;0.053322244;0.072833195;0.073075041;0.076505125;0.075252019;0.067520089;0.066518769;0.088604845;
0.07353273;0.080134019;0.083875582;0.089690253;0.094939671;0.10029458;0.093999699;0.094907679;0.094696663;0.10186418;
0.096855536;0.098907515;0.10472813;0.10364083;0.10464583;0.10487925;0.10281874;0.10915353;0.10179063;0.11095832;
0.11004754;0.10808412;       };
      };
      float_Data @[3] {
       name="W_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [42] 0.0098248245;0.0064010327;0.0074168486;0.0068393657;0.009061968;0.0060036988;0.0089283017;0.0057907798;0.0073056826;0.0049542738;
0.0063842605;0.0086263996;0.008948626;0.0054901983;0.00463989;0.0046804561;0.0078343153;0.0053426172;0.011895671;0.0045830975;
0.0062800269;0.0046366439;0.0052670715;0.0053134607;0.0031427178;0.0033439684;0.004806981;0.0036786648;0.0033111724;0.0066054952;
0.0036198667;0.0048828078;0.003097204;0.0031720004;0.0023287882;0.0032758976;0.0040171864;0.001908221;0.002537987;0.0023724192;
0.0021976437;0.0027848396;       };
      };
      float_Data @[4] {
       name="W_tot_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [42] -0.053906776;-0.043252371;0.13592446;0.65558839;0.5795809;0.96590388;1.8107029;1.1424145;1.7244346;2.5662215;
1.8508791;1.7456745;1.7983545;2.6105576;2.5704212;2.7681847;2.8776488;2.382627;2.4496949;3.3244386;
2.5097878;2.9281204;3.02425;3.3997185;3.6090806;4.0033512;3.5987442;3.5791485;3.5337436;4.1915069;
3.7080112;3.9239011;4.2336273;4.1519074;4.1611052;4.1802301;4.1574163;4.495132;3.9578221;4.6348848;
4.588954;4.4064918;       };
      };
      float_Data @[5] {
       name="W_tot_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [42] 0.32088476;0.20615837;0.24039494;0.25221556;0.32755595;0.20834336;0.35735413;0.21280158;0.2899389;0.21055444;
0.24353886;0.35384363;0.3531329;0.25691473;0.20567968;0.21101244;0.349397;0.22628097;0.51592112;0.23042478;
0.29995766;0.21856894;0.27074805;0.26270261;0.180895;0.17739882;0.25698349;0.23791943;0.2235782;0.3236694;
0.21686301;0.25691679;0.19854127;0.19635373;0.17290971;0.23663814;0.23094875;0.15522297;0.18303725;0.19237465;
0.16780949;0.21525098;       };
      };
      float_Data @[6] {
       name="act_sr_m_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [42] 0.0085000005;0.017249998;0.037999995;0.034333326;0.040750001;0.057624985;0.078749999;0.057499994;0.069333315;0.12149999;
0.14187501;0.15699998;0.14674999;0.15149999;0.17100003;0.20837498;0.20824996;0.22925;0.226;0.26449996;
0.23424998;0.27562493;0.25624999;0.37324998;0.33216667;0.40125003;0.41449991;0.39274999;0.37375003;0.36949998;
0.4355;0.50374991;0.52200001;0.5990001;0.56400001;0.46550003;0.66074997;0.72974998;0.66549993;0.76800001;
0.8089999;1.0515001;       };
      };
      float_Data @[7] {
       name="act_sr_p_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [42] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[3] {
     name="CtRubin_SumData_Hebb";
     desc="hebbian (just s-r in one phase) summary data";
     data {
      name="data";
      el_typ=DataColTp;
      el_def=0;
      float_Data @[0] {
       name="trg_hz_s_m_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [200] 10;10;10;10;10;10;10;10;10;10;
20;20;20;20;20;20;20;20;20;20;
30;30;30;30;30;30;30;30;30;30;
40;40;40;40;40;40;40;40;40;40;
50;50;50;50;50;50;50;50;50;50;
60;60;60;60;60;60;60;60;60;60;
70;70;70;70;70;70;70;70;70;70;
80;80;80;80;80;80;80;80;80;80;
90;90;90;90;90;90;90;90;90;90;
100;100;100;100;100;100;100;100;100;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
       };
      };
      float_Data @[1] {
       name="trg_hz_r_m_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [200] 10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;10;10;10;10;10;10;10;10;10;
20;20;20;20;20;20;20;20;20;20;
30;30;30;30;30;30;30;30;30;30;
40;40;40;40;40;40;40;40;40;40;
50;50;50;50;50;50;50;50;50;50;
60;60;60;60;60;60;60;60;60;60;
70;70;70;70;70;70;70;70;70;70;
80;80;80;80;80;80;80;80;80;80;
90;90;90;90;90;90;90;90;90;90;
100;100;100;100;100;100;100;100;100;100;
       };
      };
      float_Data @[2] {
       name="W_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [200] -0.007015212;0.0012709037;-0.0066338992;0.016401913;0.032421846;0.048922919;0.07747972;0.060660064;0.078881249;0.091515578;
-0.011124286;0.023397019;0.027799198;0.038184006;0.066740535;0.056007277;0.069226399;0.088665769;0.067853406;0.08304169;
0.01162523;0.017815016;0.043136619;0.037695128;0.066345267;0.077572748;0.072000429;0.1023249;0.089046329;0.086208321;
0.0061209267;0.0082240924;0.049215026;0.064119332;0.082267746;0.069594339;0.075337484;0.085313752;0.092777774;0.096691221;
-0.0043193391;0.0486295;0.040299214;0.06525898;0.066518769;0.066331752;0.089800932;0.099842034;0.094932206;0.1013464;
0.015121025;0.060713924;0.077329144;0.036592875;0.093299046;0.090387605;0.088530622;0.094231926;0.097965211;0.10214198;
0.027436068;0.036829285;0.078503586;0.071727961;0.089579597;0.099468783;0.10186417;0.10372557;0.10573818;0.10658652;
0.02967703;0.065714456;0.06156826;0.082437433;0.1087935;0.095161401;0.10573069;0.10487924;0.11312095;0.097372636;
0.022971381;0.069544956;0.088163331;0.10165365;0.094883129;0.099849775;0.10355347;0.10518614;0.11095832;0.11085828;
0.079215914;0.075451985;0.074696951;0.095851533;0.092364699;0.10513967;0.099050954;0.10620864;0.10923678;0.10808412;
-0.007015212;-0.011124285;0.011625232;0.0061209258;-0.0043193391;0.015121026;0.027436068;0.02967703;0.022971381;0.079215929;
0.0012709033;0.023397019;0.017815018;0.0082240952;0.048629511;0.060713924;0.036829289;0.065714456;0.069544956;0.075451985;
-0.0066338992;0.0277992;0.043136619;0.049215026;0.040299214;0.077329144;0.078503586;0.06156826;0.088163324;0.074696943;
0.016401917;0.038184002;0.037695132;0.064119332;0.06525898;0.036592875;0.071727976;0.082437418;0.10165364;0.095851526;
0.032421846;0.066740535;0.066345267;0.082267754;0.066518769;0.093299046;0.089579597;0.1087935;0.094883129;0.092364684;
0.048922911;0.056007277;0.077572748;0.069594331;0.066331752;0.090387605;0.099468783;0.095161401;0.099849783;0.10513969;
0.077479705;0.069226407;0.072000429;0.075337484;0.089800932;0.088530622;0.10186417;0.1057307;0.10355347;0.099050961;
0.060660064;0.088665769;0.1023249;0.085313752;0.099842027;0.094231941;0.10372557;0.10487924;0.10518615;0.10620866;
0.078881241;0.067853406;0.089046344;0.092777774;0.094932206;0.097965211;0.10573818;0.11312096;0.11095832;0.10923678;
0.091515586;0.083041698;0.086208314;0.096691221;0.1013464;0.10214199;0.1065865;0.097372621;0.11085828;0.10808412;
       };
      };
      float_Data @[3] {
       name="W_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [200] 0.0098248245;0.0090823285;0.0091657257;0.011887418;0.013128025;0.010083992;0.0093461387;0.007794702;0.0078780325;0.0036618216;
0.0090373652;0.010128112;0.013030572;0.011342454;0.0089982115;0.012142066;0.0088019473;0.0074466462;0.010712793;0.0080996715;
0.011534512;0.012636676;0.01304539;0.013952046;0.010202773;0.010670095;0.014241943;0.0027816182;0.0063722841;0.0094968826;
0.013561918;0.01158626;0.012939431;0.0095266625;0.010021043;0.010316976;0.0072279111;0.0088667264;0.0045494526;0.0086517101;
0.011368904;0.013723842;0.014380255;0.012137876;0.011895672;0.011207215;0.0086413771;0.0049809809;0.0062342547;0.0035038441;
0.01145194;0.012352979;0.0067646266;0.01222381;0.0041810935;0.0074602952;0.0066490765;0.0049924678;0.0060561248;0.0039996216;
0.0131907;0.014156184;0.0069297068;0.010455661;0.0064209523;0.00689216;0.0066054962;0.0053262003;0.0034514882;0.0039647059;
0.012640593;0.010711325;0.0097435284;0.0059204577;0.0033859632;0.0044790711;0.0033024577;0.0032758976;0.0022813533;0.0038552128;
0.013437862;0.0089202626;0.0067530475;0.0034563621;0.0040851915;0.007817084;0.0031977359;0.002843779;0.0023724192;0.0033719337;
0.0085181175;0.0063464111;0.010081331;0.0083255414;0.0062764003;0.0050071962;0.0070026172;0.0030864654;0.0028961711;0.0027848396;
0.0098248245;0.0090373643;0.011534512;0.013561917;0.011368905;0.011451939;0.0131907;0.012640593;0.013437861;0.0085181175;
0.0090823285;0.010128112;0.012636676;0.01158626;0.013723842;0.01235298;0.014156184;0.010711326;0.0089202626;0.0063464111;
0.0091657266;0.013030571;0.013045389;0.01293943;0.014380255;0.0067646261;0.0069297068;0.0097435284;0.0067530475;0.010081329;
0.011887419;0.011342454;0.013952045;0.0095266635;0.012137876;0.01222381;0.010455661;0.0059204581;0.0034563623;0.0083255405;
0.013128025;0.0089982115;0.010202772;0.010021043;0.011895672;0.004181094;0.0064209523;0.0033859632;0.0040851915;0.0062764003;
0.010083993;0.012142067;0.010670094;0.010316976;0.011207215;0.0074602952;0.0068921596;0.0044790707;0.007817084;0.0050071962;
0.0093461387;0.0088019473;0.014241941;0.0072279111;0.0086413771;0.0066490765;0.0066054962;0.0033024577;0.0031977359;0.0070026163;
0.007794702;0.0074466453;0.0027816182;0.0088667264;0.0049809809;0.0049924678;0.0053262003;0.0032758976;0.002843779;0.0030864652;
0.0078780325;0.010712793;0.0063722841;0.0045494526;0.0062342547;0.0060561248;0.0034514882;0.0022813538;0.0023724192;0.0028961711;
0.0036618218;0.0080996715;0.0094968826;0.0086517101;0.0035038441;0.0039996216;0.0039647063;0.0038552126;0.0033719337;0.0027848396;
       };
      };
      float_Data @[4] {
       name="W_tot_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [200] -0.053906761;0.14153296;-0.10099348;0.6843583;1.2142545;1.5346429;2.8947186;1.9909366;2.779897;3.2960713;
-0.22803769;0.95119286;0.97239399;1.2941321;2.3279393;1.9261072;2.3296151;3.4370239;2.4257481;3.0804868;
0.37284237;0.83448011;1.5787028;1.4361845;2.2290411;2.9040082;2.978353;3.99647;3.3424995;3.3489158;
0.33121401;0.17406374;1.8037056;2.0939066;3.0365646;2.3687096;2.4851637;3.2164378;3.3967183;3.8327549;
-0.055092584;1.7396446;1.367668;2.4691474;2.4496949;2.3015962;3.4899888;3.9137673;3.6888618;3.922399;
0.52209836;2.2375183;2.5858247;1.1636119;3.3957505;3.4366384;3.2392564;3.5580864;3.8202686;4.0010309;
0.72668779;1.1617334;2.7769454;2.5344121;3.3094471;3.9582329;4.1915073;4.2132254;4.2590094;4.364748;
1.1105261;2.3007426;2.001719;2.8320622;4.5194387;3.5094008;4.2540307;4.1802301;4.8140945;3.6403439;
0.81470317;2.3661022;3.3063786;3.9938831;3.4694352;4.0275335;4.0632019;4.1761694;4.6348848;4.6693983;
2.9012318;2.4865379;2.6662199;3.7474446;3.4936218;4.3027835;3.9500847;4.2753;4.5085101;4.4064918;
-0.053906798;-0.22803767;0.37284237;0.33121404;-0.055092532;0.52209842;0.72668779;1.1105261;0.81470317;2.9012322;
0.14153293;0.95119274;0.83448029;0.1740638;1.7396446;2.2375181;1.1617334;2.3007426;2.3661022;2.4865379;
-0.10099345;0.97239417;1.5787027;1.8037056;1.367668;2.5858252;2.7769451;2.001719;3.3063781;2.6662202;
0.6843583;1.2941321;1.4361846;2.0939069;2.4691474;1.1636118;2.5344119;2.8320622;3.9938827;3.7474446;
1.2142544;2.3279393;2.2290409;3.0365644;2.4496951;3.3957505;3.3094471;4.5194383;3.4694352;3.4936218;
1.5346433;1.926107;2.9040082;2.3687093;2.3015962;3.4366384;3.9582334;3.5094008;4.0275331;4.3027835;
2.8947186;2.3296151;2.9783533;2.4851632;3.489989;3.2392564;4.1915073;4.2540312;4.0632014;3.9500852;
1.9909366;3.4370239;3.99647;3.2164378;3.9137676;3.5580859;4.2132249;4.1802301;4.1761694;4.2753;
2.7798967;2.4257479;3.3424995;3.3967183;3.6888614;3.8202686;4.2590094;4.8140945;4.6348848;4.5085101;
3.296072;3.0804868;3.3489158;3.8327549;3.922399;4.0010309;4.364748;3.6403434;4.6693983;4.4064918;
       };
      };
      float_Data @[5] {
       name="W_tot_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [200] 0.32088476;0.30703536;0.31516156;0.43762276;0.47640774;0.38160846;0.41919774;0.31592962;0.38757369;0.21758667;
0.27679217;0.37508357;0.46210933;0.42282951;0.38411361;0.46338519;0.43432504;0.41765431;0.4105666;0.38415527;
0.36332741;0.43847296;0.51655865;0.51210219;0.43772036;0.51749432;0.60949063;0.20307939;0.33601123;0.45867503;
0.50022054;0.37866116;0.47379038;0.38926411;0.46693039;0.42448762;0.36492491;0.44781366;0.2843377;0.41978565;
0.41364247;0.57379842;0.54846478;0.50083661;0.51592118;0.49477372;0.422535;0.33970931;0.39015126;0.25879723;
0.37708765;0.51735175;0.30758017;0.49030781;0.26480445;0.39283669;0.36229929;0.32638708;0.31102142;0.26422098;
0.47416228;0.53802329;0.35863224;0.48593768;0.32236868;0.35531619;0.3236694;0.31214961;0.24886993;0.26224208;
0.49260563;0.4836095;0.40843612;0.31065926;0.2448224;0.31403786;0.25365853;0.23663814;0.19688557;0.25713933;
0.51261437;0.40428391;0.32408857;0.24070744;0.28088441;0.41606271;0.24452609;0.22235063;0.19237465;0.25382736;
0.37457734;0.32603624;0.47342008;0.39041266;0.34821618;0.2933746;0.38166478;0.2465903;0.22471051;0.21525098;
0.32088473;0.27679217;0.36332741;0.5002206;0.41364241;0.37708768;0.47416228;0.49260569;0.51261431;0.37457734;
0.30703539;0.37508354;0.43847302;0.37866113;0.57379848;0.51735175;0.53802335;0.48360953;0.40428391;0.32603624;
0.31516156;0.46210933;0.51655871;0.47379038;0.54846478;0.30758014;0.35863227;0.40843612;0.32408857;0.47342011;
0.43762279;0.42282954;0.51210219;0.38926411;0.50083661;0.49030781;0.48593768;0.31065929;0.24070744;0.39041266;
0.47640774;0.38411361;0.43772036;0.46693039;0.51592112;0.26480445;0.32236868;0.2448224;0.28088441;0.34821618;
0.38160846;0.46338519;0.51749432;0.42448762;0.49477372;0.39283669;0.35531616;0.31403783;0.41606268;0.2933746;
0.41919774;0.43432501;0.60949069;0.36492491;0.42253497;0.36229929;0.3236694;0.25365853;0.24452609;0.38166478;
0.31592962;0.41765431;0.20307939;0.44781366;0.33970931;0.32638708;0.31214961;0.23663814;0.22235064;0.24659027;
0.38757372;0.4105666;0.3360112;0.2843377;0.39015123;0.31102145;0.24886993;0.19688557;0.19237465;0.22471051;
0.21758667;0.38415527;0.45867503;0.41978562;0.25879723;0.26422098;0.26224208;0.25713935;0.25382736;0.21525098;
       };
      };
      float_Data @[6] {
       name="act_hz_s_m_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [200] 11;10.5;10;8;8.5;9;10.5;7;6;13.5;
17.5;16.5;26;20;17;25.5;24;18.5;16.5;19;
40.5;33.5;27.5;31;29.5;31.5;25.5;32.5;29.5;36;
40.5;37;39.5;43;47;45;39.5;40;32;40.5;
50.5;53;51.5;49.5;46;42.5;55.5;50.5;42.5;52;
56.5;66;68;48.5;63.5;53;48;49;56;58.5;
71.5;74.5;73.5;72.5;71.5;81.5;55;74.5;67;78;
71;73.5;77.5;71.5;73.5;68;87.5;68;78.5;70;
82.5;88.5;85;94.5;81.5;88;85;86.5;89.5;80;
103;94.5;95;93;95.5;102;90.5;95.5;89.5;97.5;
11;17.5;40.5;40.5;50.5;56.5;71.5;71;82.5;103;
10.5;16.5;33.5;37;53;66;74.5;73.5;88.5;94.5;
10;26;27.5;39.5;51.5;68;73.5;77.5;85;95;
8;20;31;43;49.5;48.5;72.5;71.5;94.5;93;
8.5;17;29.5;47;46;63.5;71.5;73.5;81.5;95.5;
9;25.5;31.5;45;42.5;53;81.5;68;88;102;
10.5;24;25.5;39.5;55.5;48;55;87.5;85;90.5;
7;18.5;32.5;40;50.5;49;74.5;68;86.5;95.5;
6;16.5;29.5;32;42.5;56;67;78.5;89.5;89.5;
13.5;19;36;40.5;52;58.5;78;70;80;97.5;
       };
      };
      float_Data @[7] {
       name="act_hz_r_m_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [200] 10;18.5;28.5;30.5;49;63;74.5;75.5;88;111.5;
9;20;26;30.5;49;63;71.5;81.5;77.5;91;
14;16.5;28.5;37.5;51.5;64.5;70.5;88;86;83;
12.5;13;31.5;38;51;58;59;73;82.5;94;
7;22;25.5;37.5;49.5;54;64;76;79;96;
9.5;22;22;30;53;58.5;67.5;71;85.5;93.5;
12.5;20;31;33.5;50.5;60;66.5;69;84.5;88;
9;19.5;25;33;56.5;58;65;74.5;87.5;93;
9.5;24.5;28.5;45;52.5;61;69;84.5;88;102;
14;25;27;40;40;62.5;69;71;87.5;107;
10;9;14;12.5;7;9.5;12.5;9;9.5;14;
18.5;20;16.5;13;22;22;20;19.5;24.5;25;
28.5;26;28.5;31.5;25.5;22;31;25;28.5;27;
30.5;30.5;37.5;38;37.5;30;33.5;33;45;40;
49;49;51.5;51;49.5;53;50.5;56.5;52.5;40;
63;63;64.5;58;54;58.5;60;58;61;62.5;
74.5;71.5;70.5;59;64;67.5;66.5;65;69;69;
75.5;81.5;88;73;76;71;69;74.5;84.5;71;
88;77.5;86;82.5;79;85.5;84.5;87.5;88;87.5;
111.5;91;83;94;96;93.5;88;93;102;107;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[4] {
     name="CtRubin_SumData_Hebb_rg";
     desc="hebbian (just s-r in one phase) summary data";
     data {
      name="data";
      el_typ=DataColTp;
      el_def=0;
      float_Data @[0] {
       name="trg_hz_r_m_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [100] 10;10;10;10;10;10;10;10;10;10;
20;20;20;20;20;20;20;20;20;20;
30;30;30;30;30;30;30;30;30;30;
40;40;40;40;40;40;40;40;40;40;
50;50;50;50;50;50;50;50;50;50;
60;60;60;60;60;60;60;60;60;60;
70;70;70;70;70;70;70;70;70;70;
80;80;80;80;80;80;80;80;80;80;
90;90;90;90;90;90;90;90;90;90;
100;100;100;100;100;100;100;100;100;100;
       };
      };
      float_Data @[1] {
       name="trg_hz_s_m_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [100] 10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
       };
      };
      float_Data @[2] {
       name="W_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [100] -0.007015212;-0.011124285;0.011625232;0.0061209258;-0.0043193391;0.015121026;0.027436068;0.02967703;0.022971381;0.079215929;
0.0012709033;0.023397019;0.017815018;0.0082240952;0.048629511;0.060713924;0.036829289;0.065714456;0.069544956;0.075451985;
-0.0066338992;0.0277992;0.043136619;0.049215026;0.040299214;0.077329144;0.078503586;0.06156826;0.088163324;0.074696943;
0.016401917;0.038184002;0.037695132;0.064119332;0.06525898;0.036592875;0.071727976;0.082437418;0.10165364;0.095851526;
0.032421846;0.066740535;0.066345267;0.082267754;0.066518769;0.093299046;0.089579597;0.1087935;0.094883129;0.092364684;
0.048922911;0.056007277;0.077572748;0.069594331;0.066331752;0.090387605;0.099468783;0.095161401;0.099849783;0.10513969;
0.077479705;0.069226407;0.072000429;0.075337484;0.089800932;0.088530622;0.10186417;0.1057307;0.10355347;0.099050961;
0.060660064;0.088665769;0.1023249;0.085313752;0.099842027;0.094231941;0.10372557;0.10487924;0.10518615;0.10620866;
0.078881241;0.067853406;0.089046344;0.092777774;0.094932206;0.097965211;0.10573818;0.11312096;0.11095832;0.10923678;
0.091515586;0.083041698;0.086208314;0.096691221;0.1013464;0.10214199;0.1065865;0.097372621;0.11085828;0.10808412;
       };
      };
      float_Data @[3] {
       name="W_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [100] 0.0098248245;0.0090373643;0.011534512;0.013561917;0.011368905;0.011451939;0.0131907;0.012640593;0.013437861;0.0085181175;
0.0090823285;0.010128112;0.012636676;0.01158626;0.013723842;0.01235298;0.014156184;0.010711326;0.0089202626;0.0063464111;
0.0091657266;0.013030571;0.013045389;0.01293943;0.014380255;0.0067646261;0.0069297068;0.0097435284;0.0067530475;0.010081329;
0.011887419;0.011342454;0.013952045;0.0095266635;0.012137876;0.01222381;0.010455661;0.0059204581;0.0034563623;0.0083255405;
0.013128025;0.0089982115;0.010202772;0.010021043;0.011895672;0.004181094;0.0064209523;0.0033859632;0.0040851915;0.0062764003;
0.010083993;0.012142067;0.010670094;0.010316976;0.011207215;0.0074602952;0.0068921596;0.0044790707;0.007817084;0.0050071962;
0.0093461387;0.0088019473;0.014241941;0.0072279111;0.0086413771;0.0066490765;0.0066054962;0.0033024577;0.0031977359;0.0070026163;
0.007794702;0.0074466453;0.0027816182;0.0088667264;0.0049809809;0.0049924678;0.0053262003;0.0032758976;0.002843779;0.0030864652;
0.0078780325;0.010712793;0.0063722841;0.0045494526;0.0062342547;0.0060561248;0.0034514882;0.0022813538;0.0023724192;0.0028961711;
0.0036618218;0.0080996715;0.0094968826;0.0086517101;0.0035038441;0.0039996216;0.0039647063;0.0038552126;0.0033719337;0.0027848396;
       };
      };
      float_Data @[4] {
       name="W_tot_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [100] -0.053906798;-0.22803767;0.37284237;0.33121404;-0.055092532;0.52209842;0.72668779;1.1105261;0.81470317;2.9012322;
0.14153293;0.95119274;0.83448029;0.1740638;1.7396446;2.2375181;1.1617334;2.3007426;2.3661022;2.4865379;
-0.10099345;0.97239417;1.5787027;1.8037056;1.367668;2.5858252;2.7769451;2.001719;3.3063781;2.6662202;
0.6843583;1.2941321;1.4361846;2.0939069;2.4691474;1.1636118;2.5344119;2.8320622;3.9938827;3.7474446;
1.2142544;2.3279393;2.2290409;3.0365644;2.4496951;3.3957505;3.3094471;4.5194383;3.4694352;3.4936218;
1.5346433;1.926107;2.9040082;2.3687093;2.3015962;3.4366384;3.9582334;3.5094008;4.0275331;4.3027835;
2.8947186;2.3296151;2.9783533;2.4851632;3.489989;3.2392564;4.1915073;4.2540312;4.0632014;3.9500852;
1.9909366;3.4370239;3.99647;3.2164378;3.9137676;3.5580859;4.2132249;4.1802301;4.1761694;4.2753;
2.7798967;2.4257479;3.3424995;3.3967183;3.6888614;3.8202686;4.2590094;4.8140945;4.6348848;4.5085101;
3.296072;3.0804868;3.3489158;3.8327549;3.922399;4.0010309;4.364748;3.6403434;4.6693983;4.4064918;
       };
      };
      float_Data @[5] {
       name="W_tot_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [100] 0.32088473;0.27679217;0.36332741;0.5002206;0.41364241;0.37708768;0.47416228;0.49260569;0.51261431;0.37457734;
0.30703539;0.37508354;0.43847302;0.37866113;0.57379848;0.51735175;0.53802335;0.48360953;0.40428391;0.32603624;
0.31516156;0.46210933;0.51655871;0.47379038;0.54846478;0.30758014;0.35863227;0.40843612;0.32408857;0.47342011;
0.43762279;0.42282954;0.51210219;0.38926411;0.50083661;0.49030781;0.48593768;0.31065929;0.24070744;0.39041266;
0.47640774;0.38411361;0.43772036;0.46693039;0.51592112;0.26480445;0.32236868;0.2448224;0.28088441;0.34821618;
0.38160846;0.46338519;0.51749432;0.42448762;0.49477372;0.39283669;0.35531616;0.31403783;0.41606268;0.2933746;
0.41919774;0.43432501;0.60949069;0.36492491;0.42253497;0.36229929;0.3236694;0.25365853;0.24452609;0.38166478;
0.31592962;0.41765431;0.20307939;0.44781366;0.33970931;0.32638708;0.31214961;0.23663814;0.22235064;0.24659027;
0.38757372;0.4105666;0.3360112;0.2843377;0.39015123;0.31102145;0.24886993;0.19688557;0.19237465;0.22471051;
0.21758667;0.38415527;0.45867503;0.41978562;0.25879723;0.26422098;0.26224208;0.25713935;0.25382736;0.21525098;
       };
      };
      float_Data @[6] {
       name="act_hz_s_m_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [100] 11;17.5;40.5;40.5;50.5;56.5;71.5;71;82.5;103;
10.5;16.5;33.5;37;53;66;74.5;73.5;88.5;94.5;
10;26;27.5;39.5;51.5;68;73.5;77.5;85;95;
8;20;31;43;49.5;48.5;72.5;71.5;94.5;93;
8.5;17;29.5;47;46;63.5;71.5;73.5;81.5;95.5;
9;25.5;31.5;45;42.5;53;81.5;68;88;102;
10.5;24;25.5;39.5;55.5;48;55;87.5;85;90.5;
7;18.5;32.5;40;50.5;49;74.5;68;86.5;95.5;
6;16.5;29.5;32;42.5;56;67;78.5;89.5;89.5;
13.5;19;36;40.5;52;58.5;78;70;80;97.5;
       };
      };
      float_Data @[7] {
       name="act_hz_r_m_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [100] 10;9;14;12.5;7;9.5;12.5;9;9.5;14;
18.5;20;16.5;13;22;22;20;19.5;24.5;25;
28.5;26;28.5;31.5;25.5;22;31;25;28.5;27;
30.5;30.5;37.5;38;37.5;30;33.5;33;45;40;
49;49;51.5;51;49.5;53;50.5;56.5;52.5;40;
63;63;64.5;58;54;58.5;60;58;61;62.5;
74.5;71.5;70.5;59;64;67.5;66.5;65;69;69;
75.5;81.5;88;73;76;71;69;74.5;84.5;71;
88;77.5;86;82.5;79;85.5;84.5;87.5;88;87.5;
111.5;91;83;94;96;93.5;88;93;102;107;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[5] {
     name="RubinEqPlot";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="ca";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 0;0.1;0.2;0.30000001;0.40000001;0.5;0.60000002;0.69999999;0.80000001;0.89999998;
1;1.1;1.2;1.3;1.4;1.5;1.6;1.7;1.8;1.9;
2;2.0999999;2.2;2.3;2.4000001;2.5;2.5999999;2.7;2.8;2.9000001;
3;3.0999999;3.2;3.3;3.4000001;3.5;3.5999999;3.7;3.8;3.9000001;
4;4.0999999;4.1999998;4.3000002;4.4000001;4.5;4.5999999;4.6999998;4.8000002;4.9000001;
5;5.0999999;5.1999998;5.3000002;5.4000001;5.5;5.5999999;5.6999998;5.8000002;5.9000001;
6;6.0999999;6.1999998;6.3000002;6.4000001;6.5;6.5999999;6.6999998;6.8000002;6.9000001;
7;7.0999999;7.1999998;7.3000002;7.4000001;7.5;7.5999999;7.6999998;7.8000002;7.9000001;
8;8.1000004;8.1999998;8.3000002;8.3999996;8.5;8.6000004;8.6999998;8.8000002;8.8999996;
9;9.1000004;9.1999998;9.3000002;9.3999996;9.5;9.6000004;9.6999998;9.8000002;9.8999996;
10;       };
      };
      float_Data @[1] {
       name="p_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 0;3.9062484e-06;6.249961e-05;0.00031639624;0.00099990005;0.0024408104;0.0050599384;0.0093701184;0.015974442;0.025563391;
0.038910504;0.05686618;0.08034917;0.11033543;0.14784391;0.19391908;0.24960998;0.31594604;0.39390975;0.48440689;
0.58823532;0.70605314;0.83834839;0.98541081;1.1473088;1.3238721;1.5146823;1.7190721;1.9361342;2.1647389;
2.4035609;2.6511135;2.9057889;3.1658998;3.4297247;3.6955519;3.9617174;4.2266417;4.4888587;4.7470379;
5;5.2467256;5.4863591;5.718205;5.9417233;6.156517;6.3623219;6.5589924;6.7464862;6.9248514;
7.0942111;7.2547507;7.4067063;7.5503521;7.6859922;7.813951;7.934567;8.0481853;8.1551542;8.2558174;
8.3505154;8.43958;8.5233326;8.6020832;8.6761284;8.7457514;8.811223;8.8727989;8.9307213;8.985219;
9.0365076;9.0847883;9.1302528;9.1730795;9.2134352;9.2514753;9.2873487;9.3211899;9.3531275;9.3832827;
9.4117651;9.4386797;9.4641228;9.4881878;9.5109568;9.5325108;9.5529232;9.5722618;9.5905933;9.6079769;
9.6244678;9.6401205;9.6549835;9.6691017;9.6825199;9.6952763;9.7074108;9.7189569;9.729949;9.7404165;
9.7503901;       };
      };
      float_Data @[2] {
       name="a_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 0;0.0046082949;0.035714287;0.11111111;0.22857143;0.36656892;0.5;0.61359572;0.70329672;0.77142859;
0.82236844;0.86037493;0.8888889;0.91048485;0.92702705;0.93984962;0.94990724;0.95788652;0.96428573;0.96946996;
0.97370982;0.97720796;0.9801178;0.98255676;0.98461539;0.98636448;0.98785973;0.98914516;0.99025625;0.99122131;
0.99206346;0.99280167;0.99345136;0.99402541;0.99453443;0.99498737;0.99539173;0.99575382;0.99607903;0.99637187;
0.99663633;0.99687576;0.99709302;0.99729061;0.99747074;0.99763525;0.99778581;0.99792385;0.99805069;0.9981674;
0.99827498;0.99837434;0.99846619;0.99855125;0.99863017;0.99870342;0.99877155;0.99883503;0.99889416;0.99894941;
0.99900103;0.99904931;0.99909449;0.99913692;0.99917668;0.99921411;0.99924922;0.99928236;0.99931353;0.99934292;
0.99937063;0.99939686;0.99942166;0.99944508;0.99946725;0.99948823;0.9995082;0.9995271;0.99954504;0.99956208;
0.9995783;0.99959373;0.9996084;0.9996224;0.9996357;0.99964839;0.99966055;0.99967211;0.99968314;0.99969369;
0.99970376;0.99971342;0.99972266;0.99973154;0.99974;0.99974811;0.99975592;0.99976337;0.99977058;0.99977744;
0.99978405;       };
      };
      float_Data @[3] {
       name="x";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;       };
      };
      float_Data @[4] {
       name="V_x";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 4.2483541e-18;3.1391329e-17;2.3195227e-16;1.7139084e-15;1.2664166e-14;9.3576229e-14;6.9144002e-13;5.1090889e-12;3.7751344e-11;2.7894681e-10;
2.0611537e-09;1.5229979e-08;1.1253516e-07;8.3152804e-07;6.1441747e-06;4.5397868e-05;0.00033535014;0.0024726233;0.01798621;0.11920292;
0.5;0.88079709;0.98201376;0.99752736;0.99966466;0.99995458;0.99999386;0.99999917;0.99999988;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;       };
      };
      float_Data @[5] {
       name="D_x";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;3.7835059e-44;8.1940087e-40;1.8048513e-35;3.97545e-31;
8.7565109e-27;1.9287499e-22;4.2483541e-18;9.3576229e-14;2.0611537e-09;4.5397868e-05;0.5;0.99995458;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;       };
      };
      float_Data @[6] {
       name="B_x";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 5.6999592e-12;8.4594898e-10;1.2554996e-07;1.8633196e-05;0.0027638932;0.37929091;4.6207089;4.9972363;4.9999814;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[6] {
     name="SendSpikes";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="spike_t";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [9] 11;20;59;63;69;75;89;90;98;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[7] {
     name="RecvSpikes";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="spike_t";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [13] 6;12;38;48;50;54;56;58;85;92;
94;97;98;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
   };
   types {
    name=;
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="SimType";
     desc=;
     enums {
      name=;
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="TEST_TRIAL";
       value=0;
       desc="run one test trial of minus-plus phase (for debugging)";
      };
      DynEnumItem @[1] {
       name="TEST_TRIAL_REPL";
       value=1;
       desc="replicate one test trial multiple times and collect stats on average result";
      };
      DynEnumItem @[2] {
       name="MINUS_SWEEP";
       value=2;
       desc="sweep both minus phase vals through range with plus at fixed tst vals";
      };
      DynEnumItem @[3] {
       name="PLUS_SWEEP";
       value=3;
       desc="sweep both plus phase vals through range with minus at fixed tst vals";
      };
      DynEnumItem @[4] {
       name="SEND_SWEEP";
       value=4;
       desc="sweep sending vals through range with recv at fixed tst vals";
      };
      DynEnumItem @[5] {
       name="RECV_SWEEP";
       value=5;
       desc="sweep recv vals through range with send at fixed tst vals";
      };
      DynEnumItem @[6] {
       name="SR_SAME_SWEEP";
       value=6;
       desc="sweep send and recv vals together through same range";
      };
      DynEnumItem @[7] {
       name="HEBB_SWEEP";
       value=7;
       desc="just sweep over send and recv in minus phase with 0 in plus phase -- just does hebb";
      };
      DynEnumItem @[8] {
       name="FULL_SWEEP";
       value=8;
       desc="full sweep of all send and recv values (very long!!)";
      };
      DynEnumItem @[9] {
       name="REDO_FINAL_SUM";
       value=9;
       desc="don't run anything, just redo the final summary analysis";
      };
     };
     bits=0;
    };
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="CtRubin_SimData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[2].objs[0]$55$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="sim_type";
     var_type=T_DynEnum;
     dyn_enum_val {
      enum_type=.projects[0].programs[2].types[0]$56$;
      value=7;
     };
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="rec_detail";
     var_type=T_Bool;
     bool_val=0;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="whether to record trial-level detail information, or just final summary weight value per run";
     init_from=NULL;
    };
    ProgVar @[3] {
     name="n_reps";
     var_type=T_Int;
     int_val=20;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="number of repetitions";
     init_from=NULL;
    };
    ProgVar @[4] {
     name="minus_phase_dur";
     var_type=T_Int;
     int_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="how long is the minus phase?";
     init_from=NULL;
    };
    ProgVar @[5] {
     name="plus_phase_dur";
     var_type=T_Int;
     int_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="how long is the minus phase?";
     init_from=NULL;
    };
    ProgVar @[6] {
     name="total_dur";
     var_type=T_Int;
     int_val=110;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sum of minus and plus";
     init_from=NULL;
    };
    ProgVar @[7] {
     name="dwt_on_post_plus";
     var_type=T_Int;
     int_val=-1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-1 to turn off: how many ms into the plus phase to wait until turning on the dwt computation?";
     init_from=NULL;
    };
    ProgVar @[8] {
     name="max_hz";
     var_type=T_Real;
     real_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="maximum hz for purposes of normalizing hz to activations";
     init_from=NULL;
    };
    ProgVar @[9] {
     name="tst_hz_s_m";
     var_type=T_Real;
     real_val=15;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of sender in minus phase ";
     init_from=NULL;
    };
    ProgVar @[10] {
     name="tst_hz_r_m";
     var_type=T_Real;
     real_val=15;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of recv in minus phase";
     init_from=NULL;
    };
    ProgVar @[11] {
     name="tst_hz_s_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of sender in plus phase";
     init_from=NULL;
    };
    ProgVar @[12] {
     name="tst_hz_r_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of recv in plus phase";
     init_from=NULL;
    };
    ProgVar @[13] {
     name="swp_hz_st";
     var_type=T_Real;
     real_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sweep hertz starting value";
     init_from=NULL;
    };
    ProgVar @[14] {
     name="swp_hz_ed";
     var_type=T_Real;
     real_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sweep hertz ending value";
     init_from=NULL;
    };
    ProgVar @[15] {
     name="swp_hz_inc";
     var_type=T_Real;
     real_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sweep hertz increment";
     init_from=NULL;
    };
    ProgVar @[16] {
     name="swp1";
     var_type=T_Real;
     real_val=110;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sweep index val 1";
     init_from=NULL;
    };
    ProgVar @[17] {
     name="swp2";
     var_type=T_Real;
     real_val=110;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sweep index val 2";
     init_from=NULL;
    };
    ProgVar @[18] {
     name="trg_hz_s_m";
     var_type=T_Real;
     real_val=100;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target hertz firing of sender in minus phase ";
     init_from=NULL;
    };
    ProgVar @[19] {
     name="trg_hz_r_m";
     var_type=T_Real;
     real_val=100;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target hertz firing of recv in minus phase";
     init_from=NULL;
    };
    ProgVar @[20] {
     name="trg_hz_s_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target hertz firing of sender in plus phase";
     init_from=NULL;
    };
    ProgVar @[21] {
     name="trg_hz_r_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target hertz firing of recv in plus phase";
     init_from=NULL;
    };
    ProgVar @[22] {
     name="trg_sr_m";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target send*recv normalized act product in minus";
     init_from=NULL;
    };
    ProgVar @[23] {
     name="trg_sr_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target send*recv normalized act product in plus";
     init_from=NULL;
    };
    ProgVar @[24] {
     name="act_hz_s_m";
     var_type=T_Real;
     real_val=90;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual hertz firing of sender in minus phase ";
     init_from=NULL;
    };
    ProgVar @[25] {
     name="act_hz_r_m";
     var_type=T_Real;
     real_val=130;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual hertz firing of recv in minus phase";
     init_from=NULL;
    };
    ProgVar @[26] {
     name="act_hz_s_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual hertz firing of sender in plus phase";
     init_from=NULL;
    };
    ProgVar @[27] {
     name="act_hz_r_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual hertz firing of recv in plus phase";
     init_from=NULL;
    };
    ProgVar @[28] {
     name="act_sr_m";
     var_type=T_Real;
     real_val=1.17;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual send*recv normalized act product in minus";
     init_from=NULL;
    };
    ProgVar @[29] {
     name="act_sr_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual send*recv normalized act product in plus";
     init_from=NULL;
    };
    ProgVar @[30] {
     name="s_act";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[31] {
     name="r_act";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[32] {
     name="s_ge";
     var_type=T_Real;
     real_val=0.1646449792544225;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[33] {
     name="r_ge";
     var_type=T_Real;
     real_val=0.0004207595381973128;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[34] {
     name="cai";
     var_type=T_Real;
     real_val=144.1179109101373;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[35] {
     name="dcai";
     var_type=T_Real;
     real_val=0.03371334519400086;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[36] {
     name="s_cai";
     var_type=T_Real;
     real_val=0.02;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="how much does sender alone contribute to cai (.02 with std params fits best)";
     init_from=NULL;
    };
    ProgVar @[37] {
     name="r_cai";
     var_type=T_Real;
     real_val=0.03;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="how much does recv alone contribute to cai (.03 with std params fits best)";
     init_from=NULL;
    };
    ProgVar @[38] {
     name="sr_cai";
     var_type=T_Real;
     real_val=0.95;
     objs_ptr=0;
     flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="1-s_cai-r_cai";
     init_from=NULL;
    };
    ProgVar @[39] {
     name="ca_gain";
     var_type=T_Real;
     real_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="overall gain on cai relative to ge conductance values (8 is best)";
     init_from=NULL;
    };
    ProgVar @[40] {
     name="cai_inc";
     var_type=T_Real;
     real_val=2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="time constant for increase in cai as function of sending and recv acts (2 is best)";
     init_from=NULL;
    };
    ProgVar @[41] {
     name="cai_dec";
     var_type=T_Real;
     real_val=0.04;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="time constant for decrease in cai (as function of cai level) (.065 is best)";
     init_from=NULL;
    };
    ProgVar @[42] {
     name="pHC";
     var_type=T_Real;
     real_val=4;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="uM";
     init_from=NULL;
    };
    ProgVar @[43] {
     name="pHN";
     var_type=T_Real;
     real_val=4;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[44] {
     name="P_dt";
     var_type=T_Real;
     real_val=500;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="ms";
     init_from=NULL;
    };
    ProgVar @[45] {
     name="P_c";
     var_type=T_Real;
     real_val=5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="drag of AP term on P";
     init_from=NULL;
    };
    ProgVar @[46] {
     name="aHC";
     var_type=T_Real;
     real_val=0.6;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="uM";
     init_from=NULL;
    };
    ProgVar @[47] {
     name="aHN";
     var_type=T_Real;
     real_val=3;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="uM";
     init_from=NULL;
    };
    ProgVar @[48] {
     name="A_dt";
     var_type=T_Real;
     real_val=5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="ms";
     init_from=NULL;
    };
    ProgVar @[49] {
     name="V_alpha";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="Max V value (1 default)";
     init_from=NULL;
    };
    ProgVar @[50] {
     name="V_thr";
     var_type=T_Real;
     real_val=2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="uM V threshold (2 def)";
     init_from=NULL;
    };
    ProgVar @[51] {
     name="V_sig";
     var_type=T_Real;
     real_val=-0.05;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="V gain on sigmoid";
     init_from=NULL;
    };
    ProgVar @[52] {
     name="V_dt";
     var_type=T_Real;
     real_val=5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="ms";
     init_from=NULL;
    };
    ProgVar @[53] {
     name="D_alpha";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="max D val";
     init_from=NULL;
    };
    ProgVar @[54] {
     name="D_thr";
     var_type=T_Real;
     real_val=2.6;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[55] {
     name="D_sig";
     var_type=T_Real;
     real_val=-0.01;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[56] {
     name="D_dt";
     var_type=T_Real;
     real_val=250;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="ms";
     init_from=NULL;
    };
    ProgVar @[57] {
     name="D_c";
     var_type=T_Real;
     real_val=4;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="multipier for BV drag term on B";
     init_from=NULL;
    };
    ProgVar @[58] {
     name="B_alpha";
     var_type=T_Real;
     real_val=5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="max B val";
     init_from=NULL;
    };
    ProgVar @[59] {
     name="B_thr";
     var_type=T_Real;
     real_val=0.55;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[60] {
     name="B_sig";
     var_type=T_Real;
     real_val=-0.02;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[61] {
     name="B_dt";
     var_type=T_Real;
     real_val=40;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="ms";
     init_from=NULL;
    };
    ProgVar @[62] {
     name="W_dt";
     var_type=T_Real;
     real_val=500;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="ms";
     init_from=NULL;
    };
    ProgVar @[63] {
     name="dW_base_sub";
     var_type=T_Real;
     real_val=6.8e-05;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="baseline dW value to subtract from W computation (sigmoid has non-zero values even when nothing is happening)";
     init_from=NULL;
    };
    ProgVar @[64] {
     name="W_p_thr";
     var_type=T_Real;
     real_val=0.3;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="threshold for P in contribution to W";
     init_from=NULL;
    };
    ProgVar @[65] {
     name="W_p_alpha";
     var_type=T_Real;
     real_val=0.8;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="gain on p contribution to W";
     init_from=NULL;
    };
    ProgVar @[66] {
     name="W_p_sig";
     var_type=T_Real;
     real_val=-0.1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[67] {
     name="W_d_thr";
     var_type=T_Real;
     real_val=0.01;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="threshold on D contribution to W";
     init_from=NULL;
    };
    ProgVar @[68] {
     name="W_d_alpha";
     var_type=T_Real;
     real_val=0.6;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="gain of D contribution to W";
     init_from=NULL;
    };
    ProgVar @[69] {
     name="W_d_sig";
     var_type=T_Real;
     real_val=-0.002;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[70] {
     name="SendSpikeAlpha";
     var_type=T_Object;
     object_type=LeabraUnitSpec;
     object_val=.projects[0].networks[0].specs[0]$57$;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[71] {
     name="RecvSpikeAlpha";
     var_type=T_Object;
     object_type=LeabraUnitSpec;
     object_val=.projects[0].networks[0].specs[1]$58$;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[72] {
     name="sim_dt";
     var_type=T_Real;
     real_val=0.5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="in msec";
     init_from=NULL;
    };
    ProgVar @[73] {
     name="s_fire_t";
     var_type=T_Int;
     int_val=98;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[74] {
     name="r_fire_off";
     var_type=T_Real;
     real_val=-40;
     objs_ptr=0;
     flags=NULL_CHECK|EDIT_VAL;
     reference=0;
     desc="-s_fire_off -- more typical for stdp expts";
     init_from=NULL;
    };
    ProgVar @[75] {
     name="r_fire_t";
     var_type=T_Int;
     int_val=98;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[76] {
     name="time";
     var_type=T_Real;
     real_val=110.5;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[77] {
     name="CtRubin_SumData_MP";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[2].objs[2]$59$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[78] {
     name="RubinEqPlot";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[2].objs[5]$60$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[79] {
     name="P";
     var_type=T_Real;
     real_val=1.252343829775395;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[80] {
     name="P_act";
     var_type=T_Real;
     real_val=9.99999406572217;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[81] {
     name="dP";
     var_type=T_Real;
     real_val=0.007514124613315744;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[82] {
     name="V";
     var_type=T_Real;
     real_val=0.9999999993403724;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[83] {
     name="V_act";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[84] {
     name="dV";
     var_type=T_Real;
     real_val=1.46583900573205e-10;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[85] {
     name="A";
     var_type=T_Real;
     real_val=0.9999996931729771;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[86] {
     name="A_act";
     var_type=T_Real;
     real_val=0.9999999278394482;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[87] {
     name="dA";
     var_type=T_Real;
     real_val=5.214810470111075e-08;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[88] {
     name="B";
     var_type=T_Real;
     real_val=0.9999990469888421;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[89] {
     name="B_act";
     var_type=T_Real;
     real_val=4.999999999154037;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[90] {
     name="dB";
     var_type=T_Real;
     real_val=1.271237733524444e-07;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[91] {
     name="D";
     var_type=T_Real;
     real_val=7.48591453643078e-71;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[92] {
     name="D_act";
     var_type=T_Real;
     real_val=3.2571574015353e-70;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[93] {
     name="dD";
     var_type=T_Real;
     real_val=1.005437253664217e-72;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[94] {
     name="W";
     var_type=T_Real;
     real_val=0.1128111638698943;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[95] {
     name="W_p_act";
     var_type=T_Real;
     real_val=0.7999392708740343;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[96] {
     name="W_d_act";
     var_type=T_Real;
     real_val=0.004015710554570913;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[97] {
     name="dW";
     var_type=T_Real;
     real_val=0.001299524317216354;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[98] {
     name="W_tot";
     var_type=T_Real;
     real_val=4.741155752002009;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[99] {
     name="SendSpikes";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[2].objs[6]$61$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[100] {
     name="RecvSpikes";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[2].objs[7]$62$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[101] {
     name="i";
     var_type=T_Int;
     int_val=20;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[102] {
     name="CtRubin_EndData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[2].objs[1]$63$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[103] {
     name="CtRubin_SumData_Hebb";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[2].objs[3]$64$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[104] {
     name="CtRubin_SumData_Hebb_rg";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[2].objs[4]$65$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
    Function @[0] {
     desc="calcium sensitivity equation";
     flags=;
     name="CaSensEq";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="ca";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="ca level";
       init_from=NULL;
      };
      ProgVar @[1] {
       name="ca_norm";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="ca normalizing variable (pHC, aHC)";
       init_from=NULL;
      };
      ProgVar @[2] {
       name="ca_exp";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="ca exponent (power)";
       init_from=NULL;
      };
      ProgVar @[3] {
       name="num_mult";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="numerator multiplier (10 or 1)";
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="nrm_exp";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc="normalized exponentiated value";
	 init_from=NULL;
	};
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].functions[0].fun_code[0].local_vars[0]$66$;
       expr {
	expr="pow(ca / ca_norm, ca_exp)";
       };
      };
      ReturnExpr @[2] {
       desc=;
       flags=;
       expr {
	expr="(num_mult * nrm_exp) / (1.0 + nrm_exp)";
       };
      };
     };
    };
    Function @[1] {
     desc=;
     flags=;
     name="Sigmoid";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="x";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="alpha";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="thr";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[3] {
       name="sigma";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      ReturnExpr @[1] {
       desc=;
       flags=;
       expr {
	expr="alpha / (1.0 + exp((x - thr)/sigma))";
       };
      };
     };
    };
    Function @[2] {
     desc="Only does sigmoid if arg is > 0 -- otherwise returns 0";
     flags=;
     name="SigmoidGTZero";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="x";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="alpha";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="thr";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[3] {
       name="sigma";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      If @[1] {
       desc=;
       flags=;
       cond {
	expr="fabs(x) <= 1.0e-6";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ReturnExpr @[0] {
	 desc=;
	 flags=;
	 expr {
	  expr="0.0";
	 };
	};
       };
      };
      ReturnExpr @[2] {
       desc=;
       flags=;
       expr {
	expr="alpha / (1.0 + exp((x - thr)/sigma))";
       };
      };
     };
    };
    Function @[3] {
     desc=;
     flags=;
     name="PlotEqs";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="ca";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[1] {
	 name="p_act";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[2] {
	 name="a_act";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[3] {
	 name="x";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[4] {
	 name="V_x";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[5] {
	 name="D_x";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[6] {
	 name="B_x";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
      };
      ResetDataRows @[1] {
       desc=;
       flags=;
       data_var=.projects[0].programs[2].vars[78]$67$;
      };
      ForLoop @[2] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	FunctionCall @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[2].functions[3].fun_code[0].local_vars[1]$68$;
	 fun=.projects[0].programs[2].functions[0]$69$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="ca";
	   required=1;
	   def_val=;
	   expr {
	    expr="ca";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="ca_norm";
	   required=1;
	   def_val=;
	   expr {
	    expr="pHC";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="ca_exp";
	   required=1;
	   def_val=;
	   expr {
	    expr="pHN";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="num_mult";
	   required=1;
	   def_val=;
	   expr {
	    expr="10.0";
	   };
	  };
	 };
	};
	FunctionCall @[1] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[2].functions[3].fun_code[0].local_vars[2]$70$;
	 fun=$69$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="ca";
	   required=1;
	   def_val=;
	   expr {
	    expr="ca";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="ca_norm";
	   required=1;
	   def_val=;
	   expr {
	    expr="aHC";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="ca_exp";
	   required=1;
	   def_val=;
	   expr {
	    expr="aHN";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="num_mult";
	   required=1;
	   def_val=;
	   expr {
	    expr="1.0";
	   };
	  };
	 };
	};
	FunctionCall @[2] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[2].functions[3].fun_code[0].local_vars[4]$71$;
	 fun=.projects[0].programs[2].functions[1]$72$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="x";
	   required=1;
	   def_val=;
	   expr {
	    expr="ca";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="alpha";
	   required=1;
	   def_val=;
	   expr {
	    expr="V_alpha";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="thr";
	   required=1;
	   def_val=;
	   expr {
	    expr="V_thr";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="sigma";
	   required=1;
	   def_val=;
	   expr {
	    expr="V_sig";
	   };
	  };
	 };
	};
	FunctionCall @[3] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[2].functions[3].fun_code[0].local_vars[5]$73$;
	 fun=$72$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="x";
	   required=1;
	   def_val=;
	   expr {
	    expr="ca";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="alpha";
	   required=1;
	   def_val=;
	   expr {
	    expr="D_alpha";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="thr";
	   required=1;
	   def_val=;
	   expr {
	    expr="D_thr";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="sigma";
	   required=1;
	   def_val=;
	   expr {
	    expr="D_sig";
	   };
	  };
	 };
	};
	FunctionCall @[4] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[2].functions[3].fun_code[0].local_vars[6]$74$;
	 fun=$72$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="x";
	   required=1;
	   def_val=;
	   expr {
	    expr="ca";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="alpha";
	   required=1;
	   def_val=;
	   expr {
	    expr="B_alpha";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="thr";
	   required=1;
	   def_val=;
	   expr {
	    expr="B_thr";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="sigma";
	   required=1;
	   def_val=;
	   expr {
	    expr="B_sig";
	   };
	  };
	 };
	};
	AddNewDataRow @[5] {
	 desc=;
	 flags=;
	 data_var=$67$;
	};
	DataVarProg @[6] {
	 desc=;
	 flags=;
	 data_var=$67$;
	 set_data=1;
	 row_spec=CUR_ROW;
	 row_var=NULL;
	 quiet=1;
	 var_1=.projects[0].programs[2].functions[3].fun_code[0].local_vars[0]$75$;
	 var_2=$68$;
	 var_3=$70$;
	 var_4=NULL;
	};
	DataVarProg @[7] {
	 desc=;
	 flags=;
	 data_var=$67$;
	 set_data=1;
	 row_spec=CUR_ROW;
	 row_var=NULL;
	 quiet=0;
	 var_1=$71$;
	 var_2=$73$;
	 var_3=$74$;
	 var_4=NULL;
	};
       };
       init {
	expr="ca = 0";
       };
       test {
	expr="ca < 10";
       };
       iter {
	expr="ca+=.1";
       };
      };
     };
    };
    Function @[4] {
     desc="do one time step of computation using current parameters, and writing results to table";
     flags=;
     name="RubinCycle";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      Comment @[1] {
       desc="==== Below is Rubin et al code";
       flags=;
      };
      FunctionCall @[2] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[80]$76$;
       fun=$69$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="ca";
	 required=1;
	 def_val=;
	 expr {
	  expr="cai";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="ca_norm";
	 required=1;
	 def_val=;
	 expr {
	  expr="pHC";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="ca_exp";
	 required=1;
	 def_val=;
	 expr {
	  expr="pHN";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="num_mult";
	 required=1;
	 def_val=;
	 expr {
	  expr="10.0";
	 };
	};
       };
      };
      FunctionCall @[3] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[86]$77$;
       fun=$69$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="ca";
	 required=1;
	 def_val=;
	 expr {
	  expr="cai";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="ca_norm";
	 required=1;
	 def_val=;
	 expr {
	  expr="aHC";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="ca_exp";
	 required=1;
	 def_val=;
	 expr {
	  expr="aHN";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="num_mult";
	 required=1;
	 def_val=;
	 expr {
	  expr="1.0";
	 };
	};
       };
      };
      FunctionCall @[4] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[83]$78$;
       fun=$72$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="x";
	 required=1;
	 def_val=;
	 expr {
	  expr="cai";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="alpha";
	 required=1;
	 def_val=;
	 expr {
	  expr="V_alpha";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="thr";
	 required=1;
	 def_val=;
	 expr {
	  expr="V_thr";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="sigma";
	 required=1;
	 def_val=;
	 expr {
	  expr="V_sig";
	 };
	};
       };
      };
      FunctionCall @[5] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[89]$79$;
       fun=$72$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="x";
	 required=1;
	 def_val=;
	 expr {
	  expr="A";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="alpha";
	 required=1;
	 def_val=;
	 expr {
	  expr="B_alpha";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="thr";
	 required=1;
	 def_val=;
	 expr {
	  expr="B_thr";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="sigma";
	 required=1;
	 def_val=;
	 expr {
	  expr="B_sig";
	 };
	};
       };
      };
      FunctionCall @[6] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[92]$80$;
       fun=$72$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="x";
	 required=1;
	 def_val=;
	 expr {
	  expr="B";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="alpha";
	 required=1;
	 def_val=;
	 expr {
	  expr="D_alpha";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="thr";
	 required=1;
	 def_val=;
	 expr {
	  expr="D_thr";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="sigma";
	 required=1;
	 def_val=;
	 expr {
	  expr="D_sig";
	 };
	};
       };
      };
      FunctionCall @[7] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[95]$81$;
       fun=$72$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="x";
	 required=1;
	 def_val=;
	 expr {
	  expr="P";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="alpha";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_p_alpha";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="thr";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_p_thr";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="sigma";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_p_sig";
	 };
	};
       };
      };
      FunctionCall @[8] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[96]$82$;
       fun=$72$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="x";
	 required=1;
	 def_val=;
	 expr {
	  expr="D";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="alpha";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_d_alpha";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="thr";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_d_thr";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="sigma";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_d_sig";
	 };
	};
       };
      };
      AssignExpr @[9] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[81]$83$;
       expr {
	expr="(P_act - P_c * A * P) / P_dt";
       };
      };
      AssignExpr @[10] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[84]$84$;
       expr {
	expr="(V_act - V) / V_dt";
       };
      };
      AssignExpr @[11] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[87]$85$;
       expr {
	expr="(A_act - A) / A_dt";
       };
      };
      AssignExpr @[12] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[90]$86$;
       expr {
	expr="(B_act - B - D_c * B * V) / B_dt";
       };
      };
      AssignExpr @[13] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[93]$87$;
       expr {
	expr="(D_act - D) / D_dt";
       };
      };
      AssignExpr @[14] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[97]$88$;
       expr {
	expr="(W_p_act - W_d_act - W) / W_dt - dW_base_sub";
       };
      };
      VarIncr @[15] {
       desc=;
       flags=;
       var=.projects[0].programs[2].vars[79]$89$;
       expr {
	expr="sim_dt*dP";
       };
      };
      VarIncr @[16] {
       desc=;
       flags=;
       var=.projects[0].programs[2].vars[82]$90$;
       expr {
	expr="sim_dt*dV";
       };
      };
      VarIncr @[17] {
       desc=;
       flags=;
       var=.projects[0].programs[2].vars[85]$91$;
       expr {
	expr="sim_dt*dA";
       };
      };
      VarIncr @[18] {
       desc=;
       flags=;
       var=.projects[0].programs[2].vars[88]$92$;
       expr {
	expr="sim_dt*dB";
       };
      };
      VarIncr @[19] {
       desc=;
       flags=;
       var=.projects[0].programs[2].vars[91]$93$;
       expr {
	expr="sim_dt*dD";
       };
      };
      VarIncr @[20] {
       desc=;
       flags=;
       var=.projects[0].programs[2].vars[94]$94$;
       expr {
	expr="sim_dt*dW";
       };
      };
      VarIncr @[21] {
       desc=;
       flags=;
       var=.projects[0].programs[2].vars[98]$95$;
       expr {
	expr="sim_dt*W";
       };
      };
     };
    };
    Function @[5] {
     desc="write vars to data table";
     flags=;
     name="RecordData";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      IfReturn @[1] {
       desc=;
       flags=;
       cond {
	expr="!rec_detail && time != total_dur";
       };
      };
      AddNewDataRow @[2] {
       desc=;
       flags=;
       data_var=.projects[0].programs[2].vars[0]$96$;
      };
      DataVarProg @[3] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=.projects[0].programs[2].vars[76]$97$;
       var_2=.projects[0].programs[2].vars[22]$98$;
       var_3=.projects[0].programs[2].vars[23]$99$;
       var_4=NULL;
      };
      DataVarProg @[4] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=.projects[0].programs[2].vars[28]$100$;
       var_2=.projects[0].programs[2].vars[29]$101$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[5] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=.projects[0].programs[2].vars[19]$102$;
       var_2=.projects[0].programs[2].vars[21]$103$;
       var_3=.projects[0].programs[2].vars[18]$104$;
       var_4=.projects[0].programs[2].vars[20]$105$;
      };
      DataVarProg @[6] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=.projects[0].programs[2].vars[25]$106$;
       var_2=.projects[0].programs[2].vars[27]$107$;
       var_3=.projects[0].programs[2].vars[24]$108$;
       var_4=.projects[0].programs[2].vars[26]$109$;
      };
      DataVarProg @[7] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=NULL;
       var_2=.projects[0].programs[2].vars[30]$110$;
       var_3=.projects[0].programs[2].vars[32]$111$;
       var_4=NULL;
      };
      DataVarProg @[8] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=.projects[0].programs[2].vars[31]$112$;
       var_2=.projects[0].programs[2].vars[33]$113$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[9] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=.projects[0].programs[2].vars[35]$114$;
       var_2=.projects[0].programs[2].vars[34]$115$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[10] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$89$;
       var_2=$83$;
       var_3=$76$;
       var_4=NULL;
      };
      DataVarProg @[11] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$91$;
       var_2=$85$;
       var_3=$77$;
       var_4=NULL;
      };
      DataVarProg @[12] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$90$;
       var_2=$84$;
       var_3=$78$;
       var_4=NULL;
      };
      DataVarProg @[13] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=$92$;
       var_2=$86$;
       var_3=$79$;
       var_4=NULL;
      };
      DataVarProg @[14] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=$93$;
       var_2=$87$;
       var_3=$80$;
       var_4=NULL;
      };
      DataVarProg @[15] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$94$;
       var_2=$88$;
       var_3=$81$;
       var_4=$82$;
      };
      DataVarProg @[16] {
       desc=;
       flags=;
       data_var=$96$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=$95$;
       var_2=NULL;
       var_3=NULL;
       var_4=NULL;
      };
     };
    };
    Function @[6] {
     desc="initialize vals prior to run";
     flags=;
     name="InitRun";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=$115$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=$91$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=$92$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=$93$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=$89$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[6] {
       desc=;
       flags=;
       result_var=$94$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[7] {
       desc=;
       flags=;
       result_var=$95$;
       expr {
	expr="0.0";
       };
      };
     };
    };
    Function @[7] {
     desc="generate a spike train (times of spikes) into a data table -- returns actual hz of firing";
     flags=;
     name="GenSpikes";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="spike_data";
       var_type=T_Object;
       object_type=DataTable;
       object_val=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="hz_fire";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="firing hertz -- transformed into poisson probability per ms";
       init_from=NULL;
      };
      ProgVar @[2] {
       name="st_time";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="time to start";
       init_from=NULL;
      };
      ProgVar @[3] {
       name="dur";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="duration (time window) for gen spikes";
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="spike_t";
	 var_type=T_Int;
	 int_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[1] {
	 name="pout";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[2] {
	 name="act_hz";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].functions[7].fun_code[0].local_vars[2]$116$;
       expr {
	expr="0.0";
       };
      };
      ForLoop @[2] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	RandomCall @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[2].functions[7].fun_code[0].local_vars[1]$117$;
	 object_type=Random;
	 method=Random::Poisson;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="l";
	   required=0;
	   def_val=;
	   expr {
	    expr="hz_fire / 1000.0";
	   };
	  };
	 };
	};
	If @[1] {
	 desc=;
	 flags=;
	 cond {
	  expr="pout > 0";
	 };
	 true_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AddNewDataRow @[0] {
	   desc=;
	   flags=;
	   data_var=.projects[0].programs[2].functions[7].args[0]$118$;
	  };
	  DataVarProg @[1] {
	   desc=;
	   flags=;
	   data_var=$118$;
	   set_data=1;
	   row_spec=CUR_ROW;
	   row_var=NULL;
	   quiet=1;
	   var_1=.projects[0].programs[2].functions[7].fun_code[0].local_vars[0]$119$;
	   var_2=NULL;
	   var_3=NULL;
	   var_4=NULL;
	  };
	  VarIncr @[2] {
	   desc=;
	   flags=;
	   var=$116$;
	   expr {
	    expr="1.0";
	   };
	  };
	 };
	};
       };
       init {
	expr="spike_t = st_time";
       };
       test {
	expr="spike_t < st_time+dur";
       };
       iter {
	expr="spike_t++";
       };
      };
      ReturnExpr @[3] {
       desc=;
       flags=;
       expr {
	expr="1000.0 * (act_hz / dur)";
       };
      };
     };
    };
    Function @[8] {
     desc=;
     flags=;
     name="MinusPlusSpikes";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="m_dur";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="duration of the minus phase";
       init_from=NULL;
      };
      ProgVar @[1] {
       name="p_dur";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="duration of the plus phase";
       init_from=NULL;
      };
      ProgVar @[2] {
       name="hz_s_m";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="hz of firing for sender in minus phase";
       init_from=NULL;
      };
      ProgVar @[3] {
       name="hz_s_p";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="hertz of firing for sender in plus phase";
       init_from=NULL;
      };
      ProgVar @[4] {
       name="hz_r_m";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="hertz of firing for recv in minus phase";
       init_from=NULL;
      };
      ProgVar @[5] {
       name="hz_r_p";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="hz of firing for recv in plus phase";
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      ResetDataRows @[1] {
       desc=;
       flags=;
       data_var=.projects[0].programs[2].vars[100]$120$;
      };
      ResetDataRows @[2] {
       desc=;
       flags=;
       data_var=.projects[0].programs[2].vars[99]$121$;
      };
      FunctionCall @[3] {
       desc=;
       flags=;
       result_var=$108$;
       fun=.projects[0].programs[2].functions[7]$122$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="spike_data";
	 required=1;
	 def_val=;
	 expr {
	  expr="SendSpikes";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="hz_fire";
	 required=1;
	 def_val=;
	 expr {
	  expr="hz_s_m";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="st_time";
	 required=1;
	 def_val=;
	 expr {
	  expr="0";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="dur";
	 required=1;
	 def_val=;
	 expr {
	  expr="m_dur";
	 };
	};
       };
      };
      FunctionCall @[4] {
       desc=;
       flags=;
       result_var=$109$;
       fun=$122$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="spike_data";
	 required=1;
	 def_val=;
	 expr {
	  expr="SendSpikes";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="hz_fire";
	 required=1;
	 def_val=;
	 expr {
	  expr="hz_s_p";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="st_time";
	 required=1;
	 def_val=;
	 expr {
	  expr="m_dur";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="dur";
	 required=1;
	 def_val=;
	 expr {
	  expr="p_dur";
	 };
	};
       };
      };
      FunctionCall @[5] {
       desc=;
       flags=;
       result_var=$106$;
       fun=$122$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="spike_data";
	 required=1;
	 def_val=;
	 expr {
	  expr="RecvSpikes";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="hz_fire";
	 required=1;
	 def_val=;
	 expr {
	  expr="hz_r_m";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="st_time";
	 required=1;
	 def_val=;
	 expr {
	  expr="0";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="dur";
	 required=1;
	 def_val=;
	 expr {
	  expr="m_dur";
	 };
	};
       };
      };
      FunctionCall @[6] {
       desc=;
       flags=;
       result_var=$107$;
       fun=$122$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="spike_data";
	 required=1;
	 def_val=;
	 expr {
	  expr="RecvSpikes";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="hz_fire";
	 required=1;
	 def_val=;
	 expr {
	  expr="hz_r_p";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="st_time";
	 required=1;
	 def_val=;
	 expr {
	  expr="m_dur";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="dur";
	 required=1;
	 def_val=;
	 expr {
	  expr="p_dur";
	 };
	};
       };
      };
      AssignExpr @[7] {
       desc=;
       flags=;
       result_var=$102$;
       expr {
	expr="hz_r_m";
       };
      };
      AssignExpr @[8] {
       desc=;
       flags=;
       result_var=$103$;
       expr {
	expr="hz_r_p";
       };
      };
      AssignExpr @[9] {
       desc=;
       flags=;
       result_var=$104$;
       expr {
	expr="hz_s_m";
       };
      };
      AssignExpr @[10] {
       desc=;
       flags=;
       result_var=$105$;
       expr {
	expr="hz_s_p";
       };
      };
      AssignExpr @[11] {
       desc=;
       flags=;
       result_var=$98$;
       expr {
	expr="(trg_hz_s_m / max_hz) * (trg_hz_r_m / max_hz)";
       };
      };
      AssignExpr @[12] {
       desc=;
       flags=;
       result_var=$99$;
       expr {
	expr="(trg_hz_s_p / max_hz) * (trg_hz_r_p / max_hz)";
       };
      };
      AssignExpr @[13] {
       desc=;
       flags=;
       result_var=$100$;
       expr {
	expr="(act_hz_s_m / max_hz) * (act_hz_r_m / max_hz)";
       };
      };
      AssignExpr @[14] {
       desc=;
       flags=;
       result_var=$101$;
       expr {
	expr="(act_hz_s_p / max_hz) * (act_hz_r_p / max_hz)";
       };
      };
     };
    };
    Function @[9] {
     desc="compute activation (ge) and cai values";
     flags=;
     name="ComputeActs";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="spike_t";
	 var_type=T_Int;
	 int_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[1] {
	 name="sti";
	 var_type=T_Int;
	 int_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[2] {
	 name="gec";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=$111$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=$113$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[75]$123$;
       expr {
	expr="-1";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=.projects[0].programs[2].vars[73]$124$;
       expr {
	expr="-1";
       };
      };
      ForLoop @[5] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	DataVarProg @[0] {
	 desc=;
	 flags=;
	 data_var=$121$;
	 set_data=0;
	 row_spec=ROW_NUM;
	 row_var=.projects[0].programs[2].functions[9].fun_code[0].local_vars[1]$125$;
	 quiet=0;
	 var_1=.projects[0].programs[2].functions[9].fun_code[0].local_vars[0]$126$;
	 var_2=NULL;
	 var_3=NULL;
	 var_4=NULL;
	};
	IfBreak @[1] {
	 desc=;
	 flags=;
	 cond {
	  expr="spike_t > time";
	 };
	};
	MemberMethodCall @[2] {
	 desc=;
	 flags=;
	 obj=.projects[0].programs[2].vars[70]$127$;
	 path="spike";
	 result_var=.projects[0].programs[2].functions[9].fun_code[0].local_vars[2]$128$;
	 method=SpikeFunSpec::ComputeAlpha;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=float;
	   type="float";
	   name="t";
	   required=0;
	   def_val=;
	   expr {
	    expr="time-spike_t";
	   };
	  };
	 };
	};
	VarIncr @[3] {
	 desc=;
	 flags=;
	 var=$111$;
	 expr {
	  expr="gec";
	 };
	};
	AssignExpr @[4] {
	 desc=;
	 flags=;
	 result_var=$124$;
	 expr {
	  expr="spike_t";
	 };
	};
       };
       init {
	expr="sti = 0";
       };
       test {
	expr="sti < SendSpikes.rows";
       };
       iter {
	expr="sti++";
       };
      };
      ForLoop @[6] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	DataVarProg @[0] {
	 desc=;
	 flags=;
	 data_var=$120$;
	 set_data=0;
	 row_spec=ROW_NUM;
	 row_var=$125$;
	 quiet=1;
	 var_1=$126$;
	 var_2=NULL;
	 var_3=NULL;
	 var_4=NULL;
	};
	IfBreak @[1] {
	 desc=;
	 flags=;
	 cond {
	  expr="spike_t > time";
	 };
	};
	MemberMethodCall @[2] {
	 desc=;
	 flags=;
	 obj=.projects[0].programs[2].vars[71]$129$;
	 path="spike";
	 result_var=$128$;
	 method=SpikeFunSpec::ComputeAlpha;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=float;
	   type="float";
	   name="t";
	   required=0;
	   def_val=;
	   expr {
	    expr="time-spike_t";
	   };
	  };
	 };
	};
	VarIncr @[3] {
	 desc=;
	 flags=;
	 var=$113$;
	 expr {
	  expr="gec";
	 };
	};
	AssignExpr @[4] {
	 desc=;
	 flags=;
	 result_var=$123$;
	 expr {
	  expr="spike_t";
	 };
	};
       };
       init {
	expr="sti = 0";
       };
       test {
	expr="sti < RecvSpikes.rows";
       };
       iter {
	expr="sti++";
       };
      };
      AssignExpr @[7] {
       desc=;
       flags=;
       result_var=$110$;
       expr {
	expr="(time == s_fire_t) ? 1.0 : 0.0";
       };
      };
      AssignExpr @[8] {
       desc=;
       flags=;
       result_var=$112$;
       expr {
	expr="(time == r_fire_t) ? 1.0 : 0.0";
       };
      };
      AssignExpr @[9] {
       desc=;
       flags=;
       result_var=$114$;
       expr {
	expr="ca_gain* (s_cai * s_ge + r_cai * r_ge + sr_cai * s_ge * r_ge)";
       };
      };
      VarIncr @[10] {
       desc=;
       flags=;
       var=$115$;
       expr {
	expr="sim_dt * (cai_inc * dcai - cai_dec * cai)";
       };
      };
     };
    };
    Function @[10] {
     desc="Run a full trial of given duration using spike data in SendSpikes and RecvSpikes";
     flags=;
     name="RunTrial";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="tot_dur";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="total trial duration";
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      ForLoop @[1] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	FunctionCall @[0] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[2].functions[9]$130$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	If @[1] {
	 desc=;
	 flags=;
	 cond {
	  expr="(dwt_on_post_plus < 0) || (time >= (plus_phase_dur + dwt_on_post_plus))";
	 };
	 true_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=.projects[0].programs[2].functions[4]$131$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	 };
	};
	FunctionCall @[2] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[2].functions[5]$132$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
       };
       init {
	expr="time = 0";
       };
       test {
	expr="time <= tot_dur";
       };
       iter {
	expr="time += sim_dt";
       };
      };
     };
    };
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    If @[0] {
     desc=;
     flags=;
     cond {
      expr="sim_type != REDO_FINAL_SUM";
     };
     true_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      ResetDataRows @[0] {
       desc=;
       flags=;
       data_var=$96$;
      };
     };
    };
    AssignExpr @[1] {
     desc=;
     flags=;
     result_var=.projects[0].programs[2].vars[38]$133$;
     expr {
      expr="1.0 - s_cai - r_cai";
     };
    };
    AssignExpr @[2] {
     desc=;
     flags=;
     result_var=.projects[0].programs[2].vars[6]$134$;
     expr {
      expr="minus_phase_dur + plus_phase_dur";
     };
    };
    Switch @[3] {
     desc=;
     flags=;
     switch_var=.projects[0].programs[2].vars[1]$135$;
     cases {
      name=;
      el_typ=CaseBlock;
      el_def=0;
      CaseBlock @[0] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	FunctionCall @[0] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[2].functions[6]$136$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	FunctionCall @[1] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[2].functions[8]$137$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="m_dur";
	   required=1;
	   def_val=;
	   expr {
	    expr="minus_phase_dur";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="p_dur";
	   required=1;
	   def_val=;
	   expr {
	    expr="plus_phase_dur";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="hz_s_m";
	   required=1;
	   def_val=;
	   expr {
	    expr="tst_hz_s_m";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="hz_s_p";
	   required=1;
	   def_val=;
	   expr {
	    expr="tst_hz_s_p";
	   };
	  };
	  ProgArg @[4] {
	   arg_type=double;
	   type="double";
	   name="hz_r_m";
	   required=1;
	   def_val=;
	   expr {
	    expr="tst_hz_r_m";
	   };
	  };
	  ProgArg @[5] {
	   arg_type=double;
	   type="double";
	   name="hz_r_p";
	   required=1;
	   def_val=;
	   expr {
	    expr="tst_hz_r_p";
	   };
	  };
	 };
	};
	FunctionCall @[2] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[2].functions[10]$138$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=int;
	   type="int";
	   name="tot_dur";
	   required=1;
	   def_val=;
	   expr {
	    expr="minus_phase_dur+plus_phase_dur";
	   };
	  };
	 };
	};
       };
       case_val {
	expr="TEST_TRIAL";
       };
      };
      CaseBlock @[1] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$136$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  FunctionCall @[1] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$137$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=double;
	     type="double";
	     name="m_dur";
	     required=1;
	     def_val=;
	     expr {
	      expr="minus_phase_dur";
	     };
	    };
	    ProgArg @[1] {
	     arg_type=double;
	     type="double";
	     name="p_dur";
	     required=1;
	     def_val=;
	     expr {
	      expr="plus_phase_dur";
	     };
	    };
	    ProgArg @[2] {
	     arg_type=double;
	     type="double";
	     name="hz_s_m";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_hz_s_m";
	     };
	    };
	    ProgArg @[3] {
	     arg_type=double;
	     type="double";
	     name="hz_s_p";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_hz_s_p";
	     };
	    };
	    ProgArg @[4] {
	     arg_type=double;
	     type="double";
	     name="hz_r_m";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_hz_r_m";
	     };
	    };
	    ProgArg @[5] {
	     arg_type=double;
	     type="double";
	     name="hz_r_p";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_hz_r_p";
	     };
	    };
	   };
	  };
	  FunctionCall @[2] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$138$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=int;
	     type="int";
	     name="tot_dur";
	     required=1;
	     def_val=;
	     expr {
	      expr="minus_phase_dur+plus_phase_dur";
	     };
	    };
	   };
	  };
	 };
	 init {
	  expr="i = 0";
	 };
	 test {
	  expr="i < n_reps";
	 };
	 iter {
	  expr="i++";
	 };
	};
       };
       case_val {
	expr="TEST_TRIAL_REPL";
       };
      };
      CaseBlock @[2] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$136$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    FunctionCall @[1] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$137$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	      ProgArg @[0] {
	       arg_type=double;
	       type="double";
	       name="m_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="minus_phase_dur";
	       };
	      };
	      ProgArg @[1] {
	       arg_type=double;
	       type="double";
	       name="p_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="plus_phase_dur";
	       };
	      };
	      ProgArg @[2] {
	       arg_type=double;
	       type="double";
	       name="hz_s_m";
	       required=1;
	       def_val=;
	       expr {
		expr="swp1";
	       };
	      };
	      ProgArg @[3] {
	       arg_type=double;
	       type="double";
	       name="hz_s_p";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_hz_s_p";
	       };
	      };
	      ProgArg @[4] {
	       arg_type=double;
	       type="double";
	       name="hz_r_m";
	       required=1;
	       def_val=;
	       expr {
		expr="swp1";
	       };
	      };
	      ProgArg @[5] {
	       arg_type=double;
	       type="double";
	       name="hz_r_p";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_hz_r_p";
	       };
	      };
	     };
	    };
	    FunctionCall @[2] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$138$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	      ProgArg @[0] {
	       arg_type=int;
	       type="int";
	       name="tot_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="minus_phase_dur+plus_phase_dur";
	       };
	      };
	     };
	    };
	   };
	   init {
	    expr="i = 0";
	   };
	   test {
	    expr="i < n_reps";
	   };
	   iter {
	    expr="i++";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="MINUS_SWEEP";
       };
      };
      CaseBlock @[3] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$136$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    FunctionCall @[1] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$137$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	      ProgArg @[0] {
	       arg_type=double;
	       type="double";
	       name="m_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="minus_phase_dur";
	       };
	      };
	      ProgArg @[1] {
	       arg_type=double;
	       type="double";
	       name="p_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="plus_phase_dur";
	       };
	      };
	      ProgArg @[2] {
	       arg_type=double;
	       type="double";
	       name="hz_s_m";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_hz_s_m";
	       };
	      };
	      ProgArg @[3] {
	       arg_type=double;
	       type="double";
	       name="hz_s_p";
	       required=1;
	       def_val=;
	       expr {
		expr="swp1";
	       };
	      };
	      ProgArg @[4] {
	       arg_type=double;
	       type="double";
	       name="hz_r_m";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_hz_r_m";
	       };
	      };
	      ProgArg @[5] {
	       arg_type=double;
	       type="double";
	       name="hz_r_p";
	       required=1;
	       def_val=;
	       expr {
		expr="swp1";
	       };
	      };
	     };
	    };
	    FunctionCall @[2] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$138$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	      ProgArg @[0] {
	       arg_type=int;
	       type="int";
	       name="tot_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="minus_phase_dur+plus_phase_dur";
	       };
	      };
	     };
	    };
	   };
	   init {
	    expr="i = 0";
	   };
	   test {
	    expr="i < n_reps";
	   };
	   iter {
	    expr="i++";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="PLUS_SWEEP";
       };
      };
      CaseBlock @[4] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    ForLoop @[0] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$136$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      FunctionCall @[1] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$137$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=double;
		 type="double";
		 name="m_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur";
		 };
		};
		ProgArg @[1] {
		 arg_type=double;
		 type="double";
		 name="p_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="plus_phase_dur";
		 };
		};
		ProgArg @[2] {
		 arg_type=double;
		 type="double";
		 name="hz_s_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp1";
		 };
		};
		ProgArg @[3] {
		 arg_type=double;
		 type="double";
		 name="hz_s_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp2";
		 };
		};
		ProgArg @[4] {
		 arg_type=double;
		 type="double";
		 name="hz_r_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="tst_hz_r_m";
		 };
		};
		ProgArg @[5] {
		 arg_type=double;
		 type="double";
		 name="hz_r_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="tst_hz_r_p";
		 };
		};
	       };
	      };
	      FunctionCall @[2] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$138$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=int;
		 type="int";
		 name="tot_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur+plus_phase_dur";
		 };
		};
	       };
	      };
	     };
	     init {
	      expr="i = 0";
	     };
	     test {
	      expr="i < n_reps";
	     };
	     iter {
	      expr="i++";
	     };
	    };
	   };
	   init {
	    expr="swp2 = swp_hz_st";
	   };
	   test {
	    expr="swp2 <= swp_hz_ed";
	   };
	   iter {
	    expr="swp2 += swp_hz_inc";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="SEND_SWEEP";
       };
      };
      CaseBlock @[5] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    ForLoop @[0] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$136$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      FunctionCall @[1] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$137$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=double;
		 type="double";
		 name="m_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur";
		 };
		};
		ProgArg @[1] {
		 arg_type=double;
		 type="double";
		 name="p_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="plus_phase_dur";
		 };
		};
		ProgArg @[2] {
		 arg_type=double;
		 type="double";
		 name="hz_s_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="tst_hz_s_m";
		 };
		};
		ProgArg @[3] {
		 arg_type=double;
		 type="double";
		 name="hz_s_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="tst_hz_s_p";
		 };
		};
		ProgArg @[4] {
		 arg_type=double;
		 type="double";
		 name="hz_r_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp1";
		 };
		};
		ProgArg @[5] {
		 arg_type=double;
		 type="double";
		 name="hz_r_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp2";
		 };
		};
	       };
	      };
	      FunctionCall @[2] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$138$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=int;
		 type="int";
		 name="tot_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur+plus_phase_dur";
		 };
		};
	       };
	      };
	     };
	     init {
	      expr="i = 0";
	     };
	     test {
	      expr="i < n_reps";
	     };
	     iter {
	      expr="i++";
	     };
	    };
	   };
	   init {
	    expr="swp2 = swp_hz_st";
	   };
	   test {
	    expr="swp2 <= swp_hz_ed";
	   };
	   iter {
	    expr="swp2 += swp_hz_inc";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="RECV_SWEEP";
       };
      };
      CaseBlock @[6] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    ForLoop @[0] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$136$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      FunctionCall @[1] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$137$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=double;
		 type="double";
		 name="m_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur";
		 };
		};
		ProgArg @[1] {
		 arg_type=double;
		 type="double";
		 name="p_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="plus_phase_dur";
		 };
		};
		ProgArg @[2] {
		 arg_type=double;
		 type="double";
		 name="hz_s_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp1";
		 };
		};
		ProgArg @[3] {
		 arg_type=double;
		 type="double";
		 name="hz_s_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp2";
		 };
		};
		ProgArg @[4] {
		 arg_type=double;
		 type="double";
		 name="hz_r_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp1";
		 };
		};
		ProgArg @[5] {
		 arg_type=double;
		 type="double";
		 name="hz_r_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp2";
		 };
		};
	       };
	      };
	      FunctionCall @[2] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$138$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=int;
		 type="int";
		 name="tot_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur+plus_phase_dur";
		 };
		};
	       };
	      };
	     };
	     init {
	      expr="i = 0";
	     };
	     test {
	      expr="i < n_reps";
	     };
	     iter {
	      expr="i++";
	     };
	    };
	   };
	   init {
	    expr="swp2 = swp_hz_st";
	   };
	   test {
	    expr="swp2 <= swp_hz_ed";
	   };
	   iter {
	    expr="swp2 += swp_hz_inc";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="SR_SAME_SWEEP";
       };
      };
      CaseBlock @[7] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    ForLoop @[0] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$136$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      FunctionCall @[1] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$137$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=double;
		 type="double";
		 name="m_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur";
		 };
		};
		ProgArg @[1] {
		 arg_type=double;
		 type="double";
		 name="p_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="plus_phase_dur";
		 };
		};
		ProgArg @[2] {
		 arg_type=double;
		 type="double";
		 name="hz_s_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp1";
		 };
		};
		ProgArg @[3] {
		 arg_type=double;
		 type="double";
		 name="hz_s_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="0";
		 };
		};
		ProgArg @[4] {
		 arg_type=double;
		 type="double";
		 name="hz_r_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp2";
		 };
		};
		ProgArg @[5] {
		 arg_type=double;
		 type="double";
		 name="hz_r_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="0";
		 };
		};
	       };
	      };
	      FunctionCall @[2] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$138$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=int;
		 type="int";
		 name="tot_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur+plus_phase_dur";
		 };
		};
	       };
	      };
	     };
	     init {
	      expr="i = 0";
	     };
	     test {
	      expr="i < n_reps";
	     };
	     iter {
	      expr="i++";
	     };
	    };
	   };
	   init {
	    expr="swp2 = swp_hz_st";
	   };
	   test {
	    expr="swp2 <= swp_hz_ed";
	   };
	   iter {
	    expr="swp2 += swp_hz_inc";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="HEBB_SWEEP";
       };
      };
      CaseBlock @[8] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    ForLoop @[0] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      ForLoop @[0] {
	       desc=;
	       flags=;
	       loop_code {
		name=;
		el_typ=ProgEl;
		el_def=0;
		ForLoop @[0] {
		 desc=;
		 flags=;
		 loop_code {
		  name=;
		  el_typ=ProgEl;
		  el_def=0;
		  FunctionCall @[0] {
		   desc=;
		   flags=;
		   result_var=NULL;
		   fun=$136$;
		   fun_args {
		    name=;
		    el_typ=ProgArg;
		    el_def=0;
		   };
		  };
		  FunctionCall @[1] {
		   desc=;
		   flags=;
		   result_var=NULL;
		   fun=$137$;
		   fun_args {
		    name=;
		    el_typ=ProgArg;
		    el_def=0;
		    ProgArg @[0] {
		     arg_type=double;
		     type="double";
		     name="m_dur";
		     required=1;
		     def_val=;
		     expr {
		      expr="minus_phase_dur";
		     };
		    };
		    ProgArg @[1] {
		     arg_type=double;
		     type="double";
		     name="p_dur";
		     required=1;
		     def_val=;
		     expr {
		      expr="plus_phase_dur";
		     };
		    };
		    ProgArg @[2] {
		     arg_type=double;
		     type="double";
		     name="hz_s_m";
		     required=1;
		     def_val=;
		     expr {
		      expr="trg_hz_s_m";
		     };
		    };
		    ProgArg @[3] {
		     arg_type=double;
		     type="double";
		     name="hz_s_p";
		     required=1;
		     def_val=;
		     expr {
		      expr="trg_hz_s_p";
		     };
		    };
		    ProgArg @[4] {
		     arg_type=double;
		     type="double";
		     name="hz_r_m";
		     required=1;
		     def_val=;
		     expr {
		      expr="trg_hz_r_m";
		     };
		    };
		    ProgArg @[5] {
		     arg_type=double;
		     type="double";
		     name="hz_r_p";
		     required=1;
		     def_val=;
		     expr {
		      expr="trg_hz_r_p";
		     };
		    };
		   };
		  };
		  FunctionCall @[2] {
		   desc=;
		   flags=;
		   result_var=NULL;
		   fun=$138$;
		   fun_args {
		    name=;
		    el_typ=ProgArg;
		    el_def=0;
		    ProgArg @[0] {
		     arg_type=int;
		     type="int";
		     name="tot_dur";
		     required=1;
		     def_val=;
		     expr {
		      expr="minus_phase_dur+plus_phase_dur";
		     };
		    };
		   };
		  };
		 };
		 init {
		  expr="i = 0";
		 };
		 test {
		  expr="i < n_reps";
		 };
		 iter {
		  expr="i++";
		 };
		};
	       };
	       init {
		expr="trg_hz_r_p = swp_hz_st";
	       };
	       test {
		expr="trg_hz_r_p <= swp_hz_ed";
	       };
	       iter {
		expr="trg_hz_r_p += swp_hz_inc";
	       };
	      };
	     };
	     init {
	      expr="trg_hz_s_p = swp_hz_st";
	     };
	     test {
	      expr="trg_hz_s_p <= swp_hz_ed";
	     };
	     iter {
	      expr="trg_hz_s_p += swp_hz_inc";
	     };
	    };
	   };
	   init {
	    expr="trg_hz_r_m = swp_hz_st";
	   };
	   test {
	    expr="trg_hz_r_m <= swp_hz_ed";
	   };
	   iter {
	    expr="trg_hz_r_m += swp_hz_inc";
	   };
	  };
	 };
	 init {
	  expr="trg_hz_s_m = swp_hz_st";
	 };
	 test {
	  expr="trg_hz_s_m <= swp_hz_ed";
	 };
	 iter {
	  expr="trg_hz_s_m += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="FULL_SWEEP";
       };
      };
      CaseBlock @[9] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	PrintExpr @[0] {
	 desc=;
	 flags=;
	 expr {
	  expr="\"not running -- redo final sum\"";
	 };
	};
       };
       case_val {
	expr="REDO_FINAL_SUM";
       };
      };
     };
    };
    DataSelectRowsProg @[4] {
     desc=;
     flags=;
     src_data_var=$96$;
     dest_data_var=.projects[0].programs[2].vars[102]$139$;
     select_spec {
      name="select_spec";
      ops {
       name=;
       el_typ=DataSelectEl;
       el_def=0;
       DataSelectEl @[0] {
	col_name="time";
	on=1;
	rel=EQUAL;
	use_var=1;
	cmp 2 0=110;
	var=$134$;
	enable_var=NULL;
       };
      };
      comb_op=AND;
     };
    };
    DataGroupProg @[5] {
     desc=;
     flags=;
     src_data_var=$139$;
     dest_data_var=.projects[0].programs[2].vars[77]$140$;
     group_spec {
      name="group_spec";
      ops {
       name=;
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @[0] {
	col_name="trg_sr_m";
	agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[1] {
	col_name="trg_sr_p";
	agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[2] {
	col_name="W";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[3] {
	col_name="W";
	agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[4] {
	col_name="W_tot";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[5] {
	col_name="W_tot";
	agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[6] {
	col_name="act_sr_m";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[7] {
	col_name="act_sr_p";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataGroupProg @[6] {
     desc=;
     flags=;
     src_data_var=$139$;
     dest_data_var=.projects[0].programs[2].vars[103]$141$;
     group_spec {
      name="group_spec";
      ops {
       name=;
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @[0] {
	col_name="trg_hz_s_m";
	agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[1] {
	col_name="trg_hz_r_m";
	agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[2] {
	col_name="W";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[3] {
	col_name="W";
	agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[4] {
	col_name="W_tot";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[5] {
	col_name="W_tot";
	agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[6] {
	col_name="act_hz_s_m";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[7] {
	col_name="act_hz_r_m";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataGroupProg @[7] {
     desc=;
     flags=;
     src_data_var=$139$;
     dest_data_var=.projects[0].programs[2].vars[104]$142$;
     group_spec {
      name="group_spec";
      ops {
       name=;
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @[0] {
	col_name="trg_hz_r_m";
	agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[1] {
	col_name="trg_hz_s_m";
	agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[2] {
	col_name="W";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[3] {
	col_name="W";
	agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[4] {
	col_name="W_tot";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[5] {
	col_name="W_tot";
	agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[6] {
	col_name="act_hz_s_m";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[7] {
	col_name="act_hz_r_m";
	agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=1;
     };
    };
    DataProcCall @[8] {
     desc=;
     flags=;
     result_var=NULL;
     object_type=taDataProc;
     method=taDataProc::CopyCommonColData;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="dest";
       required=0;
       def_val=;
       expr {
	expr="CtRubin_SumData_Hebb";
       };
      };
      ProgArg @[1] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="src";
       required=0;
       def_val=;
       expr {
	expr="CtRubin_SumData_Hebb_rg";
       };
      };
     };
    };
   };
  };
  Program @[3] {
   name="CtSTDPSim";
   tags=;
   desc="all relevant algorithms consolidated into one program";
   flags=;
   objs {
    name=;
    el_typ=DataTable;
    el_def=0;
    DataTable @[0] {
     name="CtPG06_SimData";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="trg_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       name="trg_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[2] {
       name="act_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[3] {
       name="act_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[4] {
       name="trg_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[5] {
       name="trg_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[6] {
       name="trg_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[7] {
       name="trg_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[8] {
       name="act_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[9] {
       name="act_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[10] {
       name="act_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[11] {
       name="act_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[12] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[13] {
       name="s_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[14] {
       name="r_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[15] {
       name="s_short";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[16] {
       name="s_long";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[17] {
       name="r_short";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[18] {
       name="r_long";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[19] {
       name="d_s_short";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[20] {
       name="d_s_long";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[21] {
       name="d_r_short";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[22] {
       name="d_r_long";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[23] {
       name="w";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[24] {
       name="dw";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[25] {
       name="w_tot";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[1] {
     name="CtPG06_EndData";
     desc="select for the final time of each repl";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="trg_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       name="trg_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[2] {
       name="act_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[3] {
       name="act_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[4] {
       name="trg_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[5] {
       name="trg_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[6] {
       name="trg_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[7] {
       name="trg_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[8] {
       name="act_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[9] {
       name="act_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[10] {
       name="act_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[11] {
       name="act_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[12] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[13] {
       name="s_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[14] {
       name="r_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[15] {
       name="s_short";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[16] {
       name="s_long";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[17] {
       name="r_short";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[18] {
       name="r_long";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[19] {
       name="d_s_short";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[20] {
       name="d_s_long";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[21] {
       name="d_r_short";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[22] {
       name="d_r_long";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[23] {
       name="w";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[24] {
       name="dw";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[25] {
       name="w_tot";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[2] {
     name="CtSTDP_SumData_MP";
     desc="minus-pluse phase summary data";
     data {
      name="data";
      el_typ=DataColTp;
      el_def=0;
      float_Data @[0] {
       name="trg_sr_m_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] 0.44999999;       };
      };
      float_Data @[1] {
       name="trg_sr_p_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] 0;       };
      };
      float_Data @[2] {
       name="w_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] -0.34950083;       };
      };
      float_Data @[3] {
       name="w_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] nan;       };
      };
      float_Data @[4] {
       name="w_tot_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] 0;       };
      };
      float_Data @[5] {
       name="w_tot_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] nan;       };
      };
      float_Data @[6] {
       name="act_sr_m_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] 0.44999999;       };
      };
      float_Data @[7] {
       name="act_sr_p_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] 0;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[3] {
     name="CtSTDP_SumData_Hebb";
     desc="hebbian (just s-r in one phase) summary data";
     data {
      name="data";
      el_typ=DataColTp;
      el_def=0;
      float_Data @[0] {
       name="trg_hz_s_m_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 90;90;       };
      };
      float_Data @[1] {
       name="trg_hz_r_m_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 50;50;       };
      };
      float_Data @[2] {
       name="w_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] -0.34950083;-0.34950083;       };
      };
      float_Data @[3] {
       name="w_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] nan;nan;       };
      };
      float_Data @[4] {
       name="w_tot_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 0;0;       };
      };
      float_Data @[5] {
       name="w_tot_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] nan;nan;       };
      };
      float_Data @[6] {
       name="act_hz_s_m_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 90;90;       };
      };
      float_Data @[7] {
       name="act_hz_r_m_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [2] 50;50;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[4] {
     name="CtSTDP_SumData_Hebb_rg";
     desc="hebbian (just s-r in one phase) summary data";
     data {
      name="data";
      el_typ=DataColTp;
      el_def=0;
      float_Data @[0] {
       name="trg_hz_r_m_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] 50;       };
      };
      float_Data @[1] {
       name="trg_hz_s_m_group";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] 90;       };
      };
      float_Data @[2] {
       name="w_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] -0.34950083;       };
      };
      float_Data @[3] {
       name="w_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] nan;       };
      };
      float_Data @[4] {
       name="w_tot_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] 0;       };
      };
      float_Data @[5] {
       name="w_tot_sem";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] nan;       };
      };
      float_Data @[6] {
       name="act_hz_s_m_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] 90;       };
      };
      float_Data @[7] {
       name="act_hz_r_m_mean";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1] 50;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[5] {
     name="SendSpikes";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="spike_t";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [19] 16;26;28;45;46;61;84;93;95;111;
132;138;158;162;168;184;185;190;193;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[6] {
     name="RecvSpikes";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="spike_t";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [5] 29;56;65;88;95;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[7] {
     name="UrakuboEtAl_SimData";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="trg_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       name="trg_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[2] {
       name="act_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[3] {
       name="act_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[4] {
       name="trg_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[5] {
       name="trg_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[6] {
       name="trg_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[7] {
       name="trg_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[8] {
       name="act_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[9] {
       name="act_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[10] {
       name="act_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[11] {
       name="act_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[12] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[13] {
       name="s_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[14] {
       name="r_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[15] {
       name="Ca";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[16] {
       name="dCa";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[17] {
       name="Ca_max";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[18] {
       name="CaM";
       desc="calmodulin value";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[19] {
       name="dCaM";
       desc="calmodulin value";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[20] {
       name="NMDAR";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[21] {
       name="dNMDAR";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[22] {
       name="V";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[23] {
       name="dV";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[24] {
       name="dw";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[25] {
       name="w";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[26] {
       name="w_tot";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[8] {
     name="UrakuboEtAl_EndData";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="trg_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       name="trg_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[2] {
       name="act_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[3] {
       name="act_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[4] {
       name="trg_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[5] {
       name="trg_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[6] {
       name="trg_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[7] {
       name="trg_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[8] {
       name="act_hz_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[9] {
       name="act_hz_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[10] {
       name="act_hz_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[11] {
       name="act_hz_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[12] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[13] {
       name="s_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[14] {
       name="r_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[15] {
       name="Ca";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[16] {
       name="dCa";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[17] {
       name="Ca_max";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[18] {
       name="CaM";
       desc="calmodulin value";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[19] {
       name="dCaM";
       desc="calmodulin value";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[20] {
       name="NMDAR";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[21] {
       name="dNMDAR";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[22] {
       name="V";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[23] {
       name="dV";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[24] {
       name="dw";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[25] {
       name="w";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[26] {
       name="w_tot";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
   };
   types {
    name=;
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="SimType";
     desc=;
     enums {
      name=;
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="TEST_TRIAL";
       value=0;
       desc="run one test trial of minus-plus phase (for debugging)";
      };
      DynEnumItem @[1] {
       name="TEST_TRIAL_REPL";
       value=1;
       desc="replicate one test trial multiple times and collect stats on average result";
      };
      DynEnumItem @[2] {
       name="MINUS_SWEEP";
       value=2;
       desc="sweep both minus phase vals through range with plus at fixed tst vals";
      };
      DynEnumItem @[3] {
       name="PLUS_SWEEP";
       value=3;
       desc="sweep both plus phase vals through range with minus at fixed tst vals";
      };
      DynEnumItem @[4] {
       name="SEND_SWEEP";
       value=4;
       desc="sweep sending vals through range with recv at fixed tst vals";
      };
      DynEnumItem @[5] {
       name="RECV_SWEEP";
       value=5;
       desc="sweep recv vals through range with send at fixed tst vals";
      };
      DynEnumItem @[6] {
       name="SR_SAME_SWEEP";
       value=6;
       desc="sweep send and recv vals together through same range";
      };
      DynEnumItem @[7] {
       name="HEBB_SWEEP";
       value=7;
       desc="just sweep over send and recv in minus phase with 0 in plus phase -- just does hebb";
      };
      DynEnumItem @[8] {
       name="FULL_SWEEP";
       value=8;
       desc="full sweep of all send and recv values (very long!!)";
      };
      DynEnumItem @[9] {
       name="REDO_FINAL_SUM";
       value=9;
       desc="don't run anything, just redo the final summary analysis";
      };
      DynEnumItem @[10] {
       name="PAIRS";
       value=10;
       desc="basic pre-post pairs at given time interval";
      };
      DynEnumItem @[11] {
       name="PAIRS_SWEEP";
       value=11;
       desc="basic pre-post pairs sweeping across time intervals";
      };
      DynEnumItem @[12] {
       name="TRIPLES";
       value=12;
       desc="triples";
      };
      DynEnumItem @[13] {
       name="TRIPLES_SWEEP";
       value=13;
       desc="triples";
      };
     };
     bits=0;
    };
    DynEnumType @[1] {
     name="AlgoType";
     desc="which algorithm to use";
     enums {
      name=;
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="PG06";
       value=0;
       desc="Pfister Gerstner 06";
      };
      DynEnumItem @[1] {
       name="URAKUBO";
       value=1;
       desc="Urakubo et al 08";
      };
     };
     bits=0;
    };
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="CtPG06_SimData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[3].objs[0]$143$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="sim_type";
     var_type=T_DynEnum;
     dyn_enum_val {
      enum_type=.projects[0].programs[3].types[0]$144$;
      value=0;
     };
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="algo";
     var_type=T_DynEnum;
     dyn_enum_val {
      enum_type=.projects[0].programs[3].types[1]$145$;
      value=1;
     };
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[3] {
     name="rec_detail";
     var_type=T_Bool;
     bool_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="whether to record trial-level detail information, or just final summary weight value per run";
     init_from=NULL;
    };
    ProgVar @[4] {
     name="n_reps";
     var_type=T_Int;
     int_val=20;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="number of repetitions";
     init_from=NULL;
    };
    ProgVar @[5] {
     name="minus_phase_dur";
     var_type=T_Int;
     int_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="how long is the minus phase?";
     init_from=NULL;
    };
    ProgVar @[6] {
     name="plus_phase_dur";
     var_type=T_Int;
     int_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="how long is the minus phase?";
     init_from=NULL;
    };
    ProgVar @[7] {
     name="total_dur";
     var_type=T_Int;
     int_val=200;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sum of minus and plus";
     init_from=NULL;
    };
    ProgVar @[8] {
     name="dwt_on_post_plus";
     var_type=T_Int;
     int_val=99;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-1 to turn off: how many ms into the plus phase to wait until turning on the dwt computation?";
     init_from=NULL;
    };
    ProgVar @[9] {
     name="max_hz";
     var_type=T_Real;
     real_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="maximum hz for purposes of normalizing hz to activations";
     init_from=NULL;
    };
    ProgVar @[10] {
     name="tst_hz_s_m";
     var_type=T_Real;
     real_val=90;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of sender in minus phase ";
     init_from=NULL;
    };
    ProgVar @[11] {
     name="tst_hz_r_m";
     var_type=T_Real;
     real_val=50;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of recv in minus phase";
     init_from=NULL;
    };
    ProgVar @[12] {
     name="tst_hz_s_p";
     var_type=T_Real;
     real_val=90;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of sender in plus phase";
     init_from=NULL;
    };
    ProgVar @[13] {
     name="tst_hz_r_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of recv in plus phase";
     init_from=NULL;
    };
    ProgVar @[14] {
     name="swp_s";
     var_type=T_Bool;
     bool_val=0;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="when sweeping by phase, sweep sending value";
     init_from=NULL;
    };
    ProgVar @[15] {
     name="swp_r";
     var_type=T_Bool;
     bool_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="when sweeping by phase, sweep recv value";
     init_from=NULL;
    };
    ProgVar @[16] {
     name="swp_m";
     var_type=T_Bool;
     bool_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|EDIT_VAL;
     reference=0;
     desc="when sweeping by send/recv, sweep in minus phase";
     init_from=NULL;
    };
    ProgVar @[17] {
     name="swp_p";
     var_type=T_Bool;
     bool_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|EDIT_VAL;
     reference=0;
     desc="when sweeping by send/recv, sweep in plus phase";
     init_from=NULL;
    };
    ProgVar @[18] {
     name="swp_hz_st";
     var_type=T_Real;
     real_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sweep hertz starting value";
     init_from=NULL;
    };
    ProgVar @[19] {
     name="swp_hz_ed";
     var_type=T_Real;
     real_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sweep hertz ending value";
     init_from=NULL;
    };
    ProgVar @[20] {
     name="swp_hz_inc";
     var_type=T_Real;
     real_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sweep hertz increment";
     init_from=NULL;
    };
    ProgVar @[21] {
     name="pair_tst_r_t";
     var_type=T_Real;
     real_val=50;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="pairs test recv fire time";
     init_from=NULL;
    };
    ProgVar @[22] {
     name="pair_tst_s_t";
     var_type=T_Real;
     real_val=60;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="pairs test send fire time";
     init_from=NULL;
    };
    ProgVar @[23] {
     name="pair_s_off_rng";
     var_type=T_Int;
     int_val=40;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="range around pair_tst_r_t to vary sending firing";
     init_from=NULL;
    };
    ProgVar @[24] {
     name="pair_s_off_inc";
     var_type=T_Int;
     int_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="increment in s_fire_off to explore";
     init_from=NULL;
    };
    ProgVar @[25] {
     name="swp1";
     var_type=T_Real;
     real_val=110;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sweep index val 1";
     init_from=NULL;
    };
    ProgVar @[26] {
     name="swp2";
     var_type=T_Real;
     real_val=110;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="sweep index val 2";
     init_from=NULL;
    };
    ProgVar @[27] {
     name="trg_hz_s_m";
     var_type=T_Real;
     real_val=90;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target hertz firing of sender in minus phase ";
     init_from=NULL;
    };
    ProgVar @[28] {
     name="trg_hz_r_m";
     var_type=T_Real;
     real_val=50;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target hertz firing of recv in minus phase";
     init_from=NULL;
    };
    ProgVar @[29] {
     name="trg_hz_s_p";
     var_type=T_Real;
     real_val=90;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target hertz firing of sender in plus phase";
     init_from=NULL;
    };
    ProgVar @[30] {
     name="trg_hz_r_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target hertz firing of recv in plus phase";
     init_from=NULL;
    };
    ProgVar @[31] {
     name="trg_sr_m";
     var_type=T_Real;
     real_val=0.45;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target send*recv normalized act product in minus";
     init_from=NULL;
    };
    ProgVar @[32] {
     name="trg_sr_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target send*recv normalized act product in plus";
     init_from=NULL;
    };
    ProgVar @[33] {
     name="act_hz_s_m";
     var_type=T_Real;
     real_val=90;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual hertz firing of sender in minus phase ";
     init_from=NULL;
    };
    ProgVar @[34] {
     name="act_hz_r_m";
     var_type=T_Real;
     real_val=50;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual hertz firing of recv in minus phase";
     init_from=NULL;
    };
    ProgVar @[35] {
     name="act_hz_s_p";
     var_type=T_Real;
     real_val=100;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual hertz firing of sender in plus phase";
     init_from=NULL;
    };
    ProgVar @[36] {
     name="act_hz_r_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual hertz firing of recv in plus phase";
     init_from=NULL;
    };
    ProgVar @[37] {
     name="act_sr_m";
     var_type=T_Real;
     real_val=0.45;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual send*recv normalized act product in minus";
     init_from=NULL;
    };
    ProgVar @[38] {
     name="act_sr_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="actual send*recv normalized act product in plus";
     init_from=NULL;
    };
    ProgVar @[39] {
     name="s_act";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[40] {
     name="r_act";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[41] {
     name="s_short";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="r_1 in PG terminology -- short time scale sending factor";
     init_from=NULL;
    };
    ProgVar @[42] {
     name="d_s_short";
     var_type=T_Real;
     real_val=-0.0003208484408442585;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="delta";
     init_from=NULL;
    };
    ProgVar @[43] {
     name="r_short";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="o_1 in PG -- short time scale receiving factor";
     init_from=NULL;
    };
    ProgVar @[44] {
     name="d_r_short";
     var_type=T_Real;
     real_val=-0.000180568853317297;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="delta";
     init_from=NULL;
    };
    ProgVar @[45] {
     name="r_long";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="o_2 in PG -- long-term postsynaptic factor";
     init_from=NULL;
    };
    ProgVar @[46] {
     name="d_r_long";
     var_type=T_Real;
     real_val=-0.0077577867591377;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="delta";
     init_from=NULL;
    };
    ProgVar @[47] {
     name="s_long";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="r2 in PG -- long time constant sending factor";
     init_from=NULL;
    };
    ProgVar @[48] {
     name="d_s_long";
     var_type=T_Real;
     real_val=-0.01760510954669138;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="delta";
     init_from=NULL;
    };
    ProgVar @[49] {
     name="dt_s_short";
     var_type=T_Real;
     real_val=16.8;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="PG 16.8 ms tau_+ in PG -- time constant for short time scale sender conductance factor";
     init_from=NULL;
    };
    ProgVar @[50] {
     name="dt_r_short";
     var_type=T_Real;
     real_val=33.7;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="PG 33.7 ms tau_- in PG -- time constant for short time constant receiver conductance (o1)";
     init_from=NULL;
    };
    ProgVar @[51] {
     name="dt_r_long";
     var_type=T_Real;
     real_val=114;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="PG 114 ms (tau_y in PG) -- time constant for longer-term receiver integration (r_long)";
     init_from=NULL;
    };
    ProgVar @[52] {
     name="dt_s_long";
     var_type=T_Real;
     real_val=101;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="PG 101 ms (tau_x in PG) -- time constant for longer-term sender integration (s_long)";
     init_from=NULL;
    };
    ProgVar @[53] {
     name="dw_d";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="delta-weigth -- weight decrease";
     init_from=NULL;
    };
    ProgVar @[54] {
     name="dw_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="delta-weight- potentiation (increase)";
     init_from=NULL;
    };
    ProgVar @[55] {
     name="A2_d";
     var_type=T_Real;
     real_val=0.0071;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="PG 7.1e-3 -- pairwise (short time constant) ltd factor";
     init_from=NULL;
    };
    ProgVar @[56] {
     name="A3_d";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="PG 0 -- triple (long time constant) ltd factor";
     init_from=NULL;
    };
    ProgVar @[57] {
     name="A2_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="PG 0 -- pairwise (short time constant) ltp factor";
     init_from=NULL;
    };
    ProgVar @[58] {
     name="A3_p";
     var_type=T_Real;
     real_val=0.0065;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="PG 6.5e-3 -- triple (long time constant) ltp factor";
     init_from=NULL;
    };
    ProgVar @[59] {
     name="SendSpikeAlpha";
     var_type=T_Object;
     object_type=LeabraUnitSpec;
     object_val=$57$;
     objs_ptr=0;
     flags=NULL_CHECK|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[60] {
     name="RecvSpikeAlpha";
     var_type=T_Object;
     object_type=LeabraUnitSpec;
     object_val=$58$;
     objs_ptr=0;
     flags=NULL_CHECK|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[61] {
     name="sim_dt";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="in msec";
     init_from=NULL;
    };
    ProgVar @[62] {
     name="s_fire_t";
     var_type=T_Int;
     int_val=193;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[63] {
     name="r_fire_t";
     var_type=T_Int;
     int_val=95;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[64] {
     name="time";
     var_type=T_Real;
     real_val=201;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[65] {
     name="CtSTDP_SumData_MP";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[3].objs[2]$146$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[66] {
     name="w";
     var_type=T_Real;
     real_val=-0.3495008205131812;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[67] {
     name="dw";
     var_type=T_Real;
     real_val=-0.1744166016722235;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[68] {
     name="w_tot";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[69] {
     name="SendSpikes";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[3].objs[5]$147$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[70] {
     name="RecvSpikes";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[3].objs[6]$148$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[71] {
     name="i";
     var_type=T_Int;
     int_val=20;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[72] {
     name="CtPG06_EndData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[3].objs[1]$149$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[73] {
     name="CtSTDP_SumData_Hebb";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[3].objs[3]$150$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[74] {
     name="CtSTDP_SumData_Hebb_rg";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[3].objs[4]$151$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[75] {
     name="UrakuboEtAl_SimData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[3].objs[7]$152$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[76] {
     name="Ca";
     var_type=T_Real;
     real_val=1.127916991638882;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[77] {
     name="dCa";
     var_type=T_Real;
     real_val=0.003338085843670804;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[78] {
     name="Ca_max";
     var_type=T_Real;
     real_val=1.127916991638882;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[79] {
     name="CaM";
     var_type=T_Real;
     real_val=3.840428181239118;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="calmodulin";
     init_from=NULL;
    };
    ProgVar @[80] {
     name="dCaM";
     var_type=T_Real;
     real_val=-0.01929863407657848;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[81] {
     name="V";
     var_type=T_Real;
     real_val=-64.99999989614619;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[82] {
     name="dV";
     var_type=T_Real;
     real_val=-2.077076288742319e-08;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[83] {
     name="NMDAR";
     var_type=T_Real;
     real_val=0.116155710064568;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[84] {
     name="dNMDAR";
     var_type=T_Real;
     real_val=-0.002978351540117129;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[85] {
     name="V_rest";
     var_type=T_Real;
     real_val=-65;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR -65mV resting potential";
     init_from=NULL;
    };
    ProgVar @[86] {
     name="AP";
     var_type=T_Real;
     real_val=20;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR 40mV action potential potential (backpropagated to spine)";
     init_from=NULL;
    };
    ProgVar @[87] {
     name="V_dt";
     var_type=T_Real;
     real_val=6;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR 6 ms";
     init_from=NULL;
    };
    ProgVar @[88] {
     name="NMDAR_dt";
     var_type=T_Real;
     real_val=40;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR 40ms";
     init_from=NULL;
    };
    ProgVar @[89] {
     name="K_ca";
     var_type=T_Real;
     real_val=0.1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR 0.3 effective Ca thatgives 50% inhibition of maximal activity";
     init_from=NULL;
    };
    ProgVar @[90] {
     name="Ca_vgcc";
     var_type=T_Real;
     real_val=1.3;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR 1.3 postsynaptic ca current";
     init_from=NULL;
    };
    ProgVar @[91] {
     name="Ca_v_nmda";
     var_type=T_Real;
     real_val=0.0223;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR .0223 ";
     init_from=NULL;
    };
    ProgVar @[92] {
     name="Ca_nmda";
     var_type=T_Real;
     real_val=0.5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR .5 (note: incorrect in paper as .05) baseline Ca from nmda irrespective of NMDA";
     init_from=NULL;
    };
    ProgVar @[93] {
     name="Ca_dt";
     var_type=T_Real;
     real_val=20;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR 20ms ca time constant";
     init_from=NULL;
    };
    ProgVar @[94] {
     name="CaM_dt";
     var_type=T_Real;
     real_val=200;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="Calmodulin time constant";
     init_from=NULL;
    };
    ProgVar @[95] {
     name="Ca_CaM";
     var_type=T_Real;
     real_val=0.1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="how much Ca drives CaM";
     init_from=NULL;
    };
    ProgVar @[96] {
     name="ur_use_Ca_max";
     var_type=T_Bool;
     bool_val=0;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR use Ca_max as max!";
     init_from=NULL;
    };
    ProgVar @[97] {
     name="A_ltp";
     var_type=T_Real;
     real_val=0.4;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR 40 -- amplitude of LTP";
     init_from=NULL;
    };
    ProgVar @[98] {
     name="A_ltd";
     var_type=T_Real;
     real_val=0.2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR 20 -- amplitude of LTD";
     init_from=NULL;
    };
    ProgVar @[99] {
     name="Th_ltp";
     var_type=T_Real;
     real_val=3.1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR 6.2 threshold for ltp";
     init_from=NULL;
    };
    ProgVar @[100] {
     name="Th_ltd";
     var_type=T_Real;
     real_val=2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="UR 4 threshold for ltd";
     init_from=NULL;
    };
    ProgVar @[101] {
     name="UrakuboEtAl_EndData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[3].objs[8]$153$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
    Function @[0] {
     desc="do one time step of computation using current parameters -- no dwt!";
     flags=;
     name="PGCycle";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[53]$154$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[54]$155$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[46]$156$;
       expr {
	expr="-r_long / dt_r_long";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[44]$157$;
       expr {
	expr="-r_short / dt_r_short";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[48]$158$;
       expr {
	expr="-s_long / dt_s_long";
       };
      };
      AssignExpr @[6] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[42]$159$;
       expr {
	expr="-s_short / dt_s_short";
       };
      };
      If @[7] {
       desc="pre (sender) fired";
       flags=;
       cond {
	expr="s_act == 1";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc="decrease proportional to post act and long pre factor";
	 flags=;
	 result_var=$154$;
	 expr {
	  expr="r_short * (A2_d + A3_d * s_long)";
	 };
	};
	VarIncr @[1] {
	 desc=;
	 flags=;
	 var=$159$;
	 expr {
	  expr="1.0";
	 };
	};
	VarIncr @[2] {
	 desc=;
	 flags=;
	 var=$158$;
	 expr {
	  expr="1.0";
	 };
	};
       };
      };
      If @[8] {
       desc="post  (recv) fired";
       flags=;
       cond {
	expr="r_act == 1";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc="increase proportional to pre act and long post factor";
	 flags=;
	 result_var=$155$;
	 expr {
	  expr="s_short * (A2_p + A3_p * r_long)";
	 };
	};
	VarIncr @[1] {
	 desc=;
	 flags=;
	 var=$157$;
	 expr {
	  expr="1.0";
	 };
	};
	VarIncr @[2] {
	 desc=;
	 flags=;
	 var=$156$;
	 expr {
	  expr="1.0";
	 };
	};
       };
      };
      VarIncr @[9] {
       desc=;
       flags=;
       var=.projects[0].programs[3].vars[41]$160$;
       expr {
	expr="d_s_short";
       };
      };
      VarIncr @[10] {
       desc=;
       flags=;
       var=.projects[0].programs[3].vars[47]$161$;
       expr {
	expr="d_s_long";
       };
      };
      VarIncr @[11] {
       desc=;
       flags=;
       var=.projects[0].programs[3].vars[43]$162$;
       expr {
	expr="d_r_short";
       };
      };
      VarIncr @[12] {
       desc=;
       flags=;
       var=.projects[0].programs[3].vars[45]$163$;
       expr {
	expr="d_r_long";
       };
      };
     };
    };
    Function @[1] {
     desc="compute delta-weight (PG)";
     flags=;
     name="PGdWt";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[67]$164$;
       expr {
	expr="dw_p - dw_d";
       };
      };
      VarIncr @[2] {
       desc=;
       flags=;
       var=.projects[0].programs[3].vars[66]$165$;
       expr {
	expr="dw";
       };
      };
     };
    };
    Function @[2] {
     desc="write vars to data table";
     flags=;
     name="RecordPGData";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      IfReturn @[1] {
       desc=;
       flags=;
       cond {
	expr="!rec_detail && time != total_dur";
       };
      };
      AddNewDataRow @[2] {
       desc=;
       flags=;
       data_var=.projects[0].programs[3].vars[0]$166$;
      };
      DataVarProg @[3] {
       desc=;
       flags=;
       data_var=$166$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=.projects[0].programs[3].vars[64]$167$;
       var_2=.projects[0].programs[3].vars[31]$168$;
       var_3=.projects[0].programs[3].vars[32]$169$;
       var_4=NULL;
      };
      DataVarProg @[4] {
       desc=;
       flags=;
       data_var=$166$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=.projects[0].programs[3].vars[37]$170$;
       var_2=.projects[0].programs[3].vars[38]$171$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[5] {
       desc=;
       flags=;
       data_var=$166$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=.projects[0].programs[3].vars[28]$172$;
       var_2=.projects[0].programs[3].vars[30]$173$;
       var_3=.projects[0].programs[3].vars[27]$174$;
       var_4=.projects[0].programs[3].vars[29]$175$;
      };
      DataVarProg @[6] {
       desc=;
       flags=;
       data_var=$166$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=.projects[0].programs[3].vars[34]$176$;
       var_2=.projects[0].programs[3].vars[36]$177$;
       var_3=.projects[0].programs[3].vars[33]$178$;
       var_4=.projects[0].programs[3].vars[35]$179$;
      };
      DataVarProg @[7] {
       desc=;
       flags=;
       data_var=$166$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=.projects[0].programs[3].vars[39]$180$;
       var_2=.projects[0].programs[3].vars[40]$181$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[8] {
       desc=;
       flags=;
       data_var=$166$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$160$;
       var_2=$159$;
       var_3=$161$;
       var_4=$158$;
      };
      DataVarProg @[9] {
       desc=;
       flags=;
       data_var=$166$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$162$;
       var_2=$157$;
       var_3=$163$;
       var_4=$156$;
      };
      DataVarProg @[10] {
       desc=;
       flags=;
       data_var=$166$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$165$;
       var_2=$164$;
       var_3=.projects[0].programs[3].vars[68]$182$;
       var_4=NULL;
      };
      DoneWritingDataRow @[11] {
       desc=;
       flags=;
       data_var=$166$;
      };
     };
    };
    Function @[3] {
     desc="do one time step of computation using current parameters, and writing results to table";
     flags=;
     name="UrakuboCycle";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      IfElse @[1] {
       desc=;
       flags=;
       cond {
	expr="s_act == 1";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	VarIncr @[0] {
	 desc=;
	 flags=;
	 var=.projects[0].programs[3].vars[83]$183$;
	 expr {
	  expr="K_ca / (K_ca + CaM)";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
      };
      IfElse @[2] {
       desc=;
       flags=;
       cond {
	expr="r_act == 1";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	VarIncr @[0] {
	 desc=;
	 flags=;
	 var=.projects[0].programs[3].vars[81]$184$;
	 expr {
	  expr="AP";
	 };
	};
	VarIncr @[1] {
	 desc=;
	 flags=;
	 var=.projects[0].programs[3].vars[76]$185$;
	 expr {
	  expr="Ca_vgcc";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[84]$186$;
       expr {
	expr="-NMDAR/NMDAR_dt";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[82]$187$;
       expr {
	expr="-(V - V_rest) / V_dt";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[77]$188$;
       expr {
	expr="(NMDAR * (Ca_v_nmda * (V - V_rest) + Ca_nmda)) - (Ca / Ca_dt)";
       };
      };
      AssignExpr @[6] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[80]$189$;
       expr {
	expr="-(CaM / CaM_dt) + (Ca > CaM ? Ca_CaM * (Ca-CaM) : 0.0)";
       };
      };
      VarIncr @[7] {
       desc=;
       flags=;
       var=$183$;
       expr {
	expr="sim_dt*dNMDAR";
       };
      };
      VarIncr @[8] {
       desc=;
       flags=;
       var=$184$;
       expr {
	expr="sim_dt*dV";
       };
      };
      VarIncr @[9] {
       desc=;
       flags=;
       var=$185$;
       expr {
	expr="sim_dt*dCa";
       };
      };
      VarIncr @[10] {
       desc=;
       flags=;
       var=.projects[0].programs[3].vars[79]$190$;
       expr {
	expr="sim_dt*dCaM";
       };
      };
      IfElse @[11] {
       desc=;
       flags=;
       cond {
	expr="ur_use_Ca_max";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	If @[0] {
	 desc=;
	 flags=;
	 cond {
	  expr="Ca > Ca_max";
	 };
	 true_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=;
	   result_var=.projects[0].programs[3].vars[78]$191$;
	   expr {
	    expr="Ca";
	   };
	  };
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=$191$;
	 expr {
	  expr="Ca";
	 };
	};
       };
      };
     };
    };
    Function @[4] {
     desc="actually compute weight change based on Ca_max";
     flags=;
     name="UrakuboDWt";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      IfElse @[1] {
       desc=;
       flags=;
       cond {
	expr="Ca_max > Th_ltp";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=$164$;
	 expr {
	  expr="A_ltp * (Ca_max - Th_ltp)";
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	IfElse @[0] {
	 desc=;
	 flags=;
	 cond {
	  expr="Ca_max > Th_ltd";
	 };
	 true_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc="no-mans-land";
	   flags=;
	   result_var=$164$;
	   expr {
	    expr="0.0";
	   };
	  };
	 };
	 false_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  IfElse @[0] {
	   desc=;
	   flags=;
	   cond {
	    expr="Ca_max == 0.0";
	   };
	   true_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    AssignExpr @[0] {
	     desc="no-mans-land";
	     flags=;
	     result_var=$164$;
	     expr {
	      expr="0.0";
	     };
	    };
	   };
	   false_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    AssignExpr @[0] {
	     desc="note: negative bc Ca_max < Th_ltd";
	     flags=;
	     result_var=$164$;
	     expr {
	      expr="A_ltd * (Ca_max - Th_ltd)";
	     };
	    };
	   };
	  };
	 };
	};
       };
      };
      VarIncr @[2] {
       desc=;
       flags=;
       var=$165$;
       expr {
	expr="dw";
       };
      };
     };
    };
    Function @[5] {
     desc=;
     flags=;
     name="RecordUrakuboData";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      IfReturn @[1] {
       desc=;
       flags=;
       cond {
	expr="!rec_detail && time != total_dur";
       };
      };
      AddNewDataRow @[2] {
       desc=;
       flags=;
       data_var=.projects[0].programs[3].vars[75]$192$;
      };
      DataVarProg @[3] {
       desc=;
       flags=;
       data_var=$192$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$167$;
       var_2=$168$;
       var_3=$169$;
       var_4=NULL;
      };
      DataVarProg @[4] {
       desc=;
       flags=;
       data_var=$192$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$170$;
       var_2=$171$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[5] {
       desc=;
       flags=;
       data_var=$192$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$172$;
       var_2=$173$;
       var_3=$174$;
       var_4=$175$;
      };
      DataVarProg @[6] {
       desc=;
       flags=;
       data_var=$192$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$176$;
       var_2=$177$;
       var_3=$178$;
       var_4=$179$;
      };
      DataVarProg @[7] {
       desc=;
       flags=;
       data_var=$192$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$180$;
       var_2=$181$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[8] {
       desc=;
       flags=;
       data_var=$192$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$183$;
       var_2=$186$;
       var_3=$184$;
       var_4=$187$;
      };
      DataVarProg @[9] {
       desc=;
       flags=;
       data_var=$192$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$185$;
       var_2=$188$;
       var_3=$191$;
       var_4=NULL;
      };
      DataVarProg @[10] {
       desc=;
       flags=;
       data_var=$192$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$190$;
       var_2=$189$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[11] {
       desc=;
       flags=;
       data_var=$192$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$165$;
       var_2=$164$;
       var_3=$182$;
       var_4=NULL;
      };
      DoneWritingDataRow @[12] {
       desc=;
       flags=;
       data_var=$192$;
      };
     };
    };
    Function @[6] {
     desc="initialize vals prior to run";
     flags=;
     name="InitRun";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=$163$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=$162$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=$160$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=$161$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=$165$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[6] {
       desc=;
       flags=;
       result_var=$182$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[7] {
       desc=;
       flags=;
       result_var=$183$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[8] {
       desc=;
       flags=;
       result_var=$184$;
       expr {
	expr="V_rest";
       };
      };
      AssignExpr @[9] {
       desc=;
       flags=;
       result_var=$185$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[10] {
       desc=;
       flags=;
       result_var=$190$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[11] {
       desc=;
       flags=;
       result_var=$191$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[12] {
       desc=;
       flags=;
       result_var=$164$;
       expr {
	expr="0.0";
       };
      };
     };
    };
    Function @[7] {
     desc="generate a spike train (times of spikes) into a data table -- returns actual hz of firing";
     flags=;
     name="GenSpikes";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="spike_data";
       var_type=T_Object;
       object_type=DataTable;
       object_val=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="hz_fire";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="firing hertz -- transformed into poisson probability per ms";
       init_from=NULL;
      };
      ProgVar @[2] {
       name="st_time";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="time to start";
       init_from=NULL;
      };
      ProgVar @[3] {
       name="dur";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="duration (time window) for gen spikes";
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="spike_t";
	 var_type=T_Int;
	 int_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[1] {
	 name="pout";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[2] {
	 name="act_hz";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].functions[7].fun_code[0].local_vars[2]$193$;
       expr {
	expr="0.0";
       };
      };
      ForLoop @[2] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	RandomCall @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[3].functions[7].fun_code[0].local_vars[1]$194$;
	 object_type=Random;
	 method=Random::Poisson;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="l";
	   required=0;
	   def_val=;
	   expr {
	    expr="hz_fire / 1000.0";
	   };
	  };
	 };
	};
	If @[1] {
	 desc=;
	 flags=;
	 cond {
	  expr="pout > 0";
	 };
	 true_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AddNewDataRow @[0] {
	   desc=;
	   flags=;
	   data_var=.projects[0].programs[3].functions[7].args[0]$195$;
	  };
	  DataVarProg @[1] {
	   desc=;
	   flags=;
	   data_var=$195$;
	   set_data=1;
	   row_spec=CUR_ROW;
	   row_var=NULL;
	   quiet=0;
	   var_1=.projects[0].programs[3].functions[7].fun_code[0].local_vars[0]$196$;
	   var_2=NULL;
	   var_3=NULL;
	   var_4=NULL;
	  };
	  VarIncr @[2] {
	   desc=;
	   flags=;
	   var=$193$;
	   expr {
	    expr="1.0";
	   };
	  };
	 };
	};
       };
       init {
	expr="spike_t = st_time";
       };
       test {
	expr="spike_t < st_time+dur";
       };
       iter {
	expr="spike_t++";
       };
      };
      DoneWritingDataRow @[3] {
       desc=;
       flags=;
       data_var=$195$;
      };
      ReturnExpr @[4] {
       desc=;
       flags=;
       expr {
	expr="1000.0 * (act_hz / dur)";
       };
      };
     };
    };
    Function @[8] {
     desc=;
     flags=;
     name="PairSpikes";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="s_t";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="s firing time";
       init_from=NULL;
      };
      ProgVar @[1] {
       name="r_t";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="r firing time";
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="spike_t";
	 var_type=T_Int;
	 int_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
      };
      ResetDataRows @[1] {
       desc=;
       flags=;
       data_var=.projects[0].programs[3].vars[70]$197$;
      };
      ResetDataRows @[2] {
       desc=;
       flags=;
       data_var=.projects[0].programs[3].vars[69]$198$;
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].functions[8].fun_code[0].local_vars[0]$199$;
       expr {
	expr="s_t";
       };
      };
      AddNewDataRow @[4] {
       desc=;
       flags=;
       data_var=$198$;
      };
      DataVarProg @[5] {
       desc=;
       flags=;
       data_var=$198$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$196$;
       var_2=NULL;
       var_3=NULL;
       var_4=NULL;
      };
      AssignExpr @[6] {
       desc=;
       flags=;
       result_var=$199$;
       expr {
	expr="r_t";
       };
      };
      AddNewDataRow @[7] {
       desc=;
       flags=;
       data_var=$197$;
      };
      DataVarProg @[8] {
       desc=;
       flags=;
       data_var=$197$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$196$;
       var_2=NULL;
       var_3=NULL;
       var_4=NULL;
      };
     };
    };
    Function @[9] {
     desc=;
     flags=;
     name="MinusPlusSpikes";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="m_dur";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="duration of the minus phase";
       init_from=NULL;
      };
      ProgVar @[1] {
       name="p_dur";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="duration of the plus phase";
       init_from=NULL;
      };
      ProgVar @[2] {
       name="hz_s_m";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="hz of firing for sender in minus phase";
       init_from=NULL;
      };
      ProgVar @[3] {
       name="hz_s_p";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="hertz of firing for sender in plus phase";
       init_from=NULL;
      };
      ProgVar @[4] {
       name="hz_r_m";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="hertz of firing for recv in minus phase";
       init_from=NULL;
      };
      ProgVar @[5] {
       name="hz_r_p";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="hz of firing for recv in plus phase";
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      ResetDataRows @[1] {
       desc=;
       flags=;
       data_var=$197$;
      };
      ResetDataRows @[2] {
       desc=;
       flags=;
       data_var=$198$;
      };
      FunctionCall @[3] {
       desc=;
       flags=;
       result_var=$178$;
       fun=.projects[0].programs[3].functions[7]$200$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="spike_data";
	 required=1;
	 def_val=;
	 expr {
	  expr="SendSpikes";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="hz_fire";
	 required=1;
	 def_val=;
	 expr {
	  expr="hz_s_m";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="st_time";
	 required=1;
	 def_val=;
	 expr {
	  expr="0";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="dur";
	 required=1;
	 def_val=;
	 expr {
	  expr="m_dur";
	 };
	};
       };
      };
      FunctionCall @[4] {
       desc=;
       flags=;
       result_var=$179$;
       fun=$200$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="spike_data";
	 required=1;
	 def_val=;
	 expr {
	  expr="SendSpikes";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="hz_fire";
	 required=1;
	 def_val=;
	 expr {
	  expr="hz_s_p";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="st_time";
	 required=1;
	 def_val=;
	 expr {
	  expr="m_dur";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="dur";
	 required=1;
	 def_val=;
	 expr {
	  expr="p_dur";
	 };
	};
       };
      };
      FunctionCall @[5] {
       desc=;
       flags=;
       result_var=$176$;
       fun=$200$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="spike_data";
	 required=1;
	 def_val=;
	 expr {
	  expr="RecvSpikes";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="hz_fire";
	 required=1;
	 def_val=;
	 expr {
	  expr="hz_r_m";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="st_time";
	 required=1;
	 def_val=;
	 expr {
	  expr="0";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="dur";
	 required=1;
	 def_val=;
	 expr {
	  expr="m_dur";
	 };
	};
       };
      };
      FunctionCall @[6] {
       desc=;
       flags=;
       result_var=$177$;
       fun=$200$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable;
	 type="DataTable*";
	 name="spike_data";
	 required=1;
	 def_val=;
	 expr {
	  expr="RecvSpikes";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="hz_fire";
	 required=1;
	 def_val=;
	 expr {
	  expr="hz_r_p";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="st_time";
	 required=1;
	 def_val=;
	 expr {
	  expr="m_dur";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="dur";
	 required=1;
	 def_val=;
	 expr {
	  expr="p_dur";
	 };
	};
       };
      };
      AssignExpr @[7] {
       desc=;
       flags=;
       result_var=$172$;
       expr {
	expr="hz_r_m";
       };
      };
      AssignExpr @[8] {
       desc=;
       flags=;
       result_var=$173$;
       expr {
	expr="hz_r_p";
       };
      };
      AssignExpr @[9] {
       desc=;
       flags=;
       result_var=$174$;
       expr {
	expr="hz_s_m";
       };
      };
      AssignExpr @[10] {
       desc=;
       flags=;
       result_var=$175$;
       expr {
	expr="hz_s_p";
       };
      };
      AssignExpr @[11] {
       desc=;
       flags=;
       result_var=$168$;
       expr {
	expr="(trg_hz_s_m / max_hz) * (trg_hz_r_m / max_hz)";
       };
      };
      AssignExpr @[12] {
       desc=;
       flags=;
       result_var=$169$;
       expr {
	expr="(trg_hz_s_p / max_hz) * (trg_hz_r_p / max_hz)";
       };
      };
      AssignExpr @[13] {
       desc=;
       flags=;
       result_var=$170$;
       expr {
	expr="(act_hz_s_m / max_hz) * (act_hz_r_m / max_hz)";
       };
      };
      AssignExpr @[14] {
       desc=;
       flags=;
       result_var=$171$;
       expr {
	expr="(act_hz_s_p / max_hz) * (act_hz_r_p / max_hz)";
       };
      };
     };
    };
    Function @[10] {
     desc="compute activation (ge) and cai values";
     flags=;
     name="ComputeActs";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="spike_t";
	 var_type=T_Int;
	 int_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[1] {
	 name="sti";
	 var_type=T_Int;
	 int_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[2] {
	 name="gec";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[63]$201$;
       expr {
	expr="-1";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=.projects[0].programs[3].vars[62]$202$;
       expr {
	expr="-1";
       };
      };
      ForLoop @[3] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	DataVarProg @[0] {
	 desc=;
	 flags=;
	 data_var=$198$;
	 set_data=0;
	 row_spec=ROW_NUM;
	 row_var=.projects[0].programs[3].functions[10].fun_code[0].local_vars[1]$203$;
	 quiet=0;
	 var_1=.projects[0].programs[3].functions[10].fun_code[0].local_vars[0]$204$;
	 var_2=NULL;
	 var_3=NULL;
	 var_4=NULL;
	};
	IfBreak @[1] {
	 desc=;
	 flags=;
	 cond {
	  expr="spike_t > time";
	 };
	};
	AssignExpr @[2] {
	 desc=;
	 flags=;
	 result_var=$202$;
	 expr {
	  expr="spike_t";
	 };
	};
       };
       init {
	expr="sti = 0";
       };
       test {
	expr="sti < SendSpikes.rows";
       };
       iter {
	expr="sti++";
       };
      };
      ForLoop @[4] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	DataVarProg @[0] {
	 desc=;
	 flags=;
	 data_var=$197$;
	 set_data=0;
	 row_spec=ROW_NUM;
	 row_var=$203$;
	 quiet=0;
	 var_1=$204$;
	 var_2=NULL;
	 var_3=NULL;
	 var_4=NULL;
	};
	IfBreak @[1] {
	 desc=;
	 flags=;
	 cond {
	  expr="spike_t > time";
	 };
	};
	AssignExpr @[2] {
	 desc=;
	 flags=;
	 result_var=$201$;
	 expr {
	  expr="spike_t";
	 };
	};
       };
       init {
	expr="sti = 0";
       };
       test {
	expr="sti < RecvSpikes.rows";
       };
       iter {
	expr="sti++";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=$180$;
       expr {
	expr="(time == s_fire_t) ? 1.0 : 0.0";
       };
      };
      AssignExpr @[6] {
       desc=;
       flags=;
       result_var=$181$;
       expr {
	expr="(time == r_fire_t) ? 1.0 : 0.0";
       };
      };
     };
    };
    Function @[11] {
     desc="Run a full trial of given duration using spike data in SendSpikes and RecvSpikes";
     flags=;
     name="RunTrial";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="tot_dur";
       var_type=T_Int;
       int_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="total trial duration";
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      Switch @[1] {
       desc=;
       flags=;
       switch_var=.projects[0].programs[3].vars[2]$205$;
       cases {
	name=;
	el_typ=CaseBlock;
	el_def=0;
	CaseBlock @[0] {
	 desc=;
	 flags=;
	 prog_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=.projects[0].programs[3].functions[10]$206$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    FunctionCall @[1] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=.projects[0].programs[3].functions[0]$207$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    If @[2] {
	     desc=;
	     flags=;
	     cond {
	      expr="(dwt_on_post_plus < 0) || (time >= (plus_phase_dur + dwt_on_post_plus))";
	     };
	     true_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=.projects[0].programs[3].functions[1]$208$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	     };
	    };
	    FunctionCall @[3] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=.projects[0].programs[3].functions[2]$209$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	   };
	   init {
	    expr="time = 0";
	   };
	   test {
	    expr="time <= tot_dur";
	   };
	   iter {
	    expr="time += sim_dt";
	   };
	  };
	 };
	 case_val {
	  expr="PG06";
	 };
	};
	CaseBlock @[1] {
	 desc=;
	 flags=;
	 prog_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$206$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    FunctionCall @[1] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=.projects[0].programs[3].functions[3]$210$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    If @[2] {
	     desc=;
	     flags=;
	     cond {
	      expr="(dwt_on_post_plus < 0) || (time >= (plus_phase_dur + dwt_on_post_plus))";
	     };
	     true_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=.projects[0].programs[3].functions[4]$211$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	     };
	    };
	    FunctionCall @[3] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=.projects[0].programs[3].functions[5]$212$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	   };
	   init {
	    expr="time = 0";
	   };
	   test {
	    expr="time <= tot_dur";
	   };
	   iter {
	    expr="time += sim_dt";
	   };
	  };
	 };
	 case_val {
	  expr="URAKUBO";
	 };
	};
       };
      };
      StopStepPoint @[2] {
       desc=;
       flags=;
      };
     };
    };
    Function @[12] {
     desc="summarize the end data from the runs";
     flags=;
     name="SumEndData";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="end_data";
       var_type=T_Object;
       object_type=DataTable;
       object_val=NULL;
       objs_ptr=0;
       flags=LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      DataGroupProg @[1] {
       desc=;
       flags=;
       src_data_var=.projects[0].programs[3].functions[12].args[0]$213$;
       dest_data_var=.projects[0].programs[3].vars[65]$214$;
       group_spec {
	name="group_spec";
	ops {
	 name=;
	 el_typ=DataGroupEl;
	 el_def=0;
	 DataGroupEl @[0] {
	  col_name="trg_sr_m";
	  agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[1] {
	  col_name="trg_sr_p";
	  agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[2] {
	  col_name="w";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[3] {
	  col_name="w";
	  agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[4] {
	  col_name="w_tot";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[5] {
	  col_name="w_tot";
	  agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[6] {
	  col_name="act_sr_m";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[7] {
	  col_name="act_sr_p";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	};
	append_agg_name=1;
       };
      };
      DataGroupProg @[2] {
       desc=;
       flags=;
       src_data_var=$213$;
       dest_data_var=.projects[0].programs[3].vars[73]$215$;
       group_spec {
	name="group_spec";
	ops {
	 name=;
	 el_typ=DataGroupEl;
	 el_def=0;
	 DataGroupEl @[0] {
	  col_name="trg_hz_s_m";
	  agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[1] {
	  col_name="trg_hz_r_m";
	  agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[2] {
	  col_name="w";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[3] {
	  col_name="w";
	  agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[4] {
	  col_name="w_tot";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[5] {
	  col_name="w_tot";
	  agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[6] {
	  col_name="act_hz_s_m";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[7] {
	  col_name="act_hz_r_m";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	};
	append_agg_name=1;
       };
      };
      DataGroupProg @[3] {
       desc=;
       flags=;
       src_data_var=$213$;
       dest_data_var=.projects[0].programs[3].vars[74]$216$;
       group_spec {
	name="group_spec";
	ops {
	 name=;
	 el_typ=DataGroupEl;
	 el_def=0;
	 DataGroupEl @[0] {
	  col_name="trg_hz_r_m";
	  agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[1] {
	  col_name="trg_hz_s_m";
	  agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[2] {
	  col_name="w";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[3] {
	  col_name="w";
	  agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[4] {
	  col_name="w_tot";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[5] {
	  col_name="w_tot";
	  agg {name="Aggregate": op=SEM: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[6] {
	  col_name="act_hz_s_m";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	 DataGroupEl @[7] {
	  col_name="act_hz_r_m";
	  agg {name="Aggregate": op=MEAN: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
	 };
	};
	append_agg_name=1;
       };
      };
      DataProcCall @[4] {
       desc=;
       flags=;
       result_var=NULL;
       object_type=taDataProc;
       method=taDataProc::CopyCommonColData;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable_ptr;
	 type="DataTable*";
	 name="dest";
	 required=0;
	 def_val=;
	 expr {
	  expr="CtSTDP_SumData_Hebb";
	 };
	};
	ProgArg @[1] {
	 arg_type=DataTable_ptr;
	 type="DataTable*";
	 name="src";
	 required=0;
	 def_val=;
	 expr {
	  expr="CtSTDP_SumData_Hebb_rg";
	 };
	};
       };
      };
     };
    };
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    If @[0] {
     desc=;
     flags=;
     cond {
      expr="sim_type != REDO_FINAL_SUM";
     };
     true_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      ResetDataRows @[0] {
       desc=;
       flags=;
       data_var=$166$;
      };
      ResetDataRows @[1] {
       desc=;
       flags=;
       data_var=$192$;
      };
     };
    };
    AssignExpr @[1] {
     desc=;
     flags=;
     result_var=.projects[0].programs[3].vars[7]$217$;
     expr {
      expr="minus_phase_dur + plus_phase_dur";
     };
    };
    Switch @[2] {
     desc=;
     flags=;
     switch_var=.projects[0].programs[3].vars[1]$218$;
     cases {
      name=;
      el_typ=CaseBlock;
      el_def=0;
      CaseBlock @[0] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	FunctionCall @[0] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[3].functions[6]$219$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	FunctionCall @[1] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[3].functions[9]$220$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="m_dur";
	   required=1;
	   def_val=;
	   expr {
	    expr="minus_phase_dur";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="p_dur";
	   required=1;
	   def_val=;
	   expr {
	    expr="plus_phase_dur";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="hz_s_m";
	   required=1;
	   def_val=;
	   expr {
	    expr="tst_hz_s_m";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="hz_s_p";
	   required=1;
	   def_val=;
	   expr {
	    expr="tst_hz_s_p";
	   };
	  };
	  ProgArg @[4] {
	   arg_type=double;
	   type="double";
	   name="hz_r_m";
	   required=1;
	   def_val=;
	   expr {
	    expr="tst_hz_r_m";
	   };
	  };
	  ProgArg @[5] {
	   arg_type=double;
	   type="double";
	   name="hz_r_p";
	   required=1;
	   def_val=;
	   expr {
	    expr="tst_hz_r_p";
	   };
	  };
	 };
	};
	FunctionCall @[2] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[3].functions[11]$221$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=int;
	   type="int";
	   name="tot_dur";
	   required=1;
	   def_val=;
	   expr {
	    expr="minus_phase_dur+plus_phase_dur";
	   };
	  };
	 };
	};
       };
       case_val {
	expr="TEST_TRIAL";
       };
      };
      CaseBlock @[1] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$219$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  FunctionCall @[1] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$220$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=double;
	     type="double";
	     name="m_dur";
	     required=1;
	     def_val=;
	     expr {
	      expr="minus_phase_dur";
	     };
	    };
	    ProgArg @[1] {
	     arg_type=double;
	     type="double";
	     name="p_dur";
	     required=1;
	     def_val=;
	     expr {
	      expr="plus_phase_dur";
	     };
	    };
	    ProgArg @[2] {
	     arg_type=double;
	     type="double";
	     name="hz_s_m";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_hz_s_m";
	     };
	    };
	    ProgArg @[3] {
	     arg_type=double;
	     type="double";
	     name="hz_s_p";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_hz_s_p";
	     };
	    };
	    ProgArg @[4] {
	     arg_type=double;
	     type="double";
	     name="hz_r_m";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_hz_r_m";
	     };
	    };
	    ProgArg @[5] {
	     arg_type=double;
	     type="double";
	     name="hz_r_p";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_hz_r_p";
	     };
	    };
	   };
	  };
	  FunctionCall @[2] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$221$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=int;
	     type="int";
	     name="tot_dur";
	     required=1;
	     def_val=;
	     expr {
	      expr="minus_phase_dur+plus_phase_dur";
	     };
	    };
	   };
	  };
	 };
	 init {
	  expr="i = 0";
	 };
	 test {
	  expr="i < n_reps";
	 };
	 iter {
	  expr="i++";
	 };
	};
       };
       case_val {
	expr="TEST_TRIAL_REPL";
       };
      };
      CaseBlock @[2] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$219$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    FunctionCall @[1] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$220$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	      ProgArg @[0] {
	       arg_type=double;
	       type="double";
	       name="m_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="minus_phase_dur";
	       };
	      };
	      ProgArg @[1] {
	       arg_type=double;
	       type="double";
	       name="p_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="plus_phase_dur";
	       };
	      };
	      ProgArg @[2] {
	       arg_type=double;
	       type="double";
	       name="hz_s_m";
	       required=1;
	       def_val=;
	       expr {
		expr="swp_s ? swp1 : tst_hz_s_m";
	       };
	      };
	      ProgArg @[3] {
	       arg_type=double;
	       type="double";
	       name="hz_s_p";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_hz_s_p";
	       };
	      };
	      ProgArg @[4] {
	       arg_type=double;
	       type="double";
	       name="hz_r_m";
	       required=1;
	       def_val=;
	       expr {
		expr="swp_r ? swp1 : tst_hz_r_m";
	       };
	      };
	      ProgArg @[5] {
	       arg_type=double;
	       type="double";
	       name="hz_r_p";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_hz_r_p";
	       };
	      };
	     };
	    };
	    FunctionCall @[2] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$221$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	      ProgArg @[0] {
	       arg_type=int;
	       type="int";
	       name="tot_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="minus_phase_dur+plus_phase_dur";
	       };
	      };
	     };
	    };
	   };
	   init {
	    expr="i = 0";
	   };
	   test {
	    expr="i < n_reps";
	   };
	   iter {
	    expr="i++";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="MINUS_SWEEP";
       };
      };
      CaseBlock @[3] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$219$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    FunctionCall @[1] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$220$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	      ProgArg @[0] {
	       arg_type=double;
	       type="double";
	       name="m_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="minus_phase_dur";
	       };
	      };
	      ProgArg @[1] {
	       arg_type=double;
	       type="double";
	       name="p_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="plus_phase_dur";
	       };
	      };
	      ProgArg @[2] {
	       arg_type=double;
	       type="double";
	       name="hz_s_m";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_hz_s_m";
	       };
	      };
	      ProgArg @[3] {
	       arg_type=double;
	       type="double";
	       name="hz_s_p";
	       required=1;
	       def_val=;
	       expr {
		expr="swp_s ? swp1 : tst_hz_s_p";
	       };
	      };
	      ProgArg @[4] {
	       arg_type=double;
	       type="double";
	       name="hz_r_m";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_hz_r_m";
	       };
	      };
	      ProgArg @[5] {
	       arg_type=double;
	       type="double";
	       name="hz_r_p";
	       required=1;
	       def_val=;
	       expr {
		expr="swp_r ? swp1 : tst_hz_r_p";
	       };
	      };
	     };
	    };
	    FunctionCall @[2] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$221$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	      ProgArg @[0] {
	       arg_type=int;
	       type="int";
	       name="tot_dur";
	       required=1;
	       def_val=;
	       expr {
		expr="minus_phase_dur+plus_phase_dur";
	       };
	      };
	     };
	    };
	   };
	   init {
	    expr="i = 0";
	   };
	   test {
	    expr="i < n_reps";
	   };
	   iter {
	    expr="i++";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="PLUS_SWEEP";
       };
      };
      CaseBlock @[4] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    ForLoop @[0] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$219$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      FunctionCall @[1] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$220$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=double;
		 type="double";
		 name="m_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur";
		 };
		};
		ProgArg @[1] {
		 arg_type=double;
		 type="double";
		 name="p_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="plus_phase_dur";
		 };
		};
		ProgArg @[2] {
		 arg_type=double;
		 type="double";
		 name="hz_s_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp1";
		 };
		};
		ProgArg @[3] {
		 arg_type=double;
		 type="double";
		 name="hz_s_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp2";
		 };
		};
		ProgArg @[4] {
		 arg_type=double;
		 type="double";
		 name="hz_r_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="tst_hz_r_m";
		 };
		};
		ProgArg @[5] {
		 arg_type=double;
		 type="double";
		 name="hz_r_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="tst_hz_r_p";
		 };
		};
	       };
	      };
	      FunctionCall @[2] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$221$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=int;
		 type="int";
		 name="tot_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur+plus_phase_dur";
		 };
		};
	       };
	      };
	     };
	     init {
	      expr="i = 0";
	     };
	     test {
	      expr="i < n_reps";
	     };
	     iter {
	      expr="i++";
	     };
	    };
	   };
	   init {
	    expr="swp2 = swp_hz_st";
	   };
	   test {
	    expr="swp2 <= swp_hz_ed";
	   };
	   iter {
	    expr="swp2 += swp_hz_inc";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="SEND_SWEEP";
       };
      };
      CaseBlock @[5] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    ForLoop @[0] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$219$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      FunctionCall @[1] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$220$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=double;
		 type="double";
		 name="m_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur";
		 };
		};
		ProgArg @[1] {
		 arg_type=double;
		 type="double";
		 name="p_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="plus_phase_dur";
		 };
		};
		ProgArg @[2] {
		 arg_type=double;
		 type="double";
		 name="hz_s_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="tst_hz_s_m";
		 };
		};
		ProgArg @[3] {
		 arg_type=double;
		 type="double";
		 name="hz_s_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="tst_hz_s_p";
		 };
		};
		ProgArg @[4] {
		 arg_type=double;
		 type="double";
		 name="hz_r_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp1";
		 };
		};
		ProgArg @[5] {
		 arg_type=double;
		 type="double";
		 name="hz_r_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp2";
		 };
		};
	       };
	      };
	      FunctionCall @[2] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$221$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=int;
		 type="int";
		 name="tot_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur+plus_phase_dur";
		 };
		};
	       };
	      };
	     };
	     init {
	      expr="i = 0";
	     };
	     test {
	      expr="i < n_reps";
	     };
	     iter {
	      expr="i++";
	     };
	    };
	   };
	   init {
	    expr="swp2 = swp_hz_st";
	   };
	   test {
	    expr="swp2 <= swp_hz_ed";
	   };
	   iter {
	    expr="swp2 += swp_hz_inc";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="RECV_SWEEP";
       };
      };
      CaseBlock @[6] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    ForLoop @[0] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$219$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      FunctionCall @[1] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$220$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=double;
		 type="double";
		 name="m_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur";
		 };
		};
		ProgArg @[1] {
		 arg_type=double;
		 type="double";
		 name="p_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="plus_phase_dur";
		 };
		};
		ProgArg @[2] {
		 arg_type=double;
		 type="double";
		 name="hz_s_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp1";
		 };
		};
		ProgArg @[3] {
		 arg_type=double;
		 type="double";
		 name="hz_s_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp2";
		 };
		};
		ProgArg @[4] {
		 arg_type=double;
		 type="double";
		 name="hz_r_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp1";
		 };
		};
		ProgArg @[5] {
		 arg_type=double;
		 type="double";
		 name="hz_r_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp2";
		 };
		};
	       };
	      };
	      FunctionCall @[2] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$221$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=int;
		 type="int";
		 name="tot_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur+plus_phase_dur";
		 };
		};
	       };
	      };
	     };
	     init {
	      expr="i = 0";
	     };
	     test {
	      expr="i < n_reps";
	     };
	     iter {
	      expr="i++";
	     };
	    };
	   };
	   init {
	    expr="swp2 = swp_hz_st";
	   };
	   test {
	    expr="swp2 <= swp_hz_ed";
	   };
	   iter {
	    expr="swp2 += swp_hz_inc";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="SR_SAME_SWEEP";
       };
      };
      CaseBlock @[7] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    ForLoop @[0] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      FunctionCall @[0] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$219$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
	       };
	      };
	      FunctionCall @[1] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$220$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=double;
		 type="double";
		 name="m_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur";
		 };
		};
		ProgArg @[1] {
		 arg_type=double;
		 type="double";
		 name="p_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="plus_phase_dur";
		 };
		};
		ProgArg @[2] {
		 arg_type=double;
		 type="double";
		 name="hz_s_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp1";
		 };
		};
		ProgArg @[3] {
		 arg_type=double;
		 type="double";
		 name="hz_s_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="0";
		 };
		};
		ProgArg @[4] {
		 arg_type=double;
		 type="double";
		 name="hz_r_m";
		 required=1;
		 def_val=;
		 expr {
		  expr="swp2";
		 };
		};
		ProgArg @[5] {
		 arg_type=double;
		 type="double";
		 name="hz_r_p";
		 required=1;
		 def_val=;
		 expr {
		  expr="0";
		 };
		};
	       };
	      };
	      FunctionCall @[2] {
	       desc=;
	       flags=;
	       result_var=NULL;
	       fun=$221$;
	       fun_args {
		name=;
		el_typ=ProgArg;
		el_def=0;
		ProgArg @[0] {
		 arg_type=int;
		 type="int";
		 name="tot_dur";
		 required=1;
		 def_val=;
		 expr {
		  expr="minus_phase_dur+plus_phase_dur";
		 };
		};
	       };
	      };
	     };
	     init {
	      expr="i = 0";
	     };
	     test {
	      expr="i < n_reps";
	     };
	     iter {
	      expr="i++";
	     };
	    };
	   };
	   init {
	    expr="swp2 = swp_hz_st";
	   };
	   test {
	    expr="swp2 <= swp_hz_ed";
	   };
	   iter {
	    expr="swp2 += swp_hz_inc";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_hz_st";
	 };
	 test {
	  expr="swp1 <= swp_hz_ed";
	 };
	 iter {
	  expr="swp1 += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="HEBB_SWEEP";
       };
      };
      CaseBlock @[8] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    ForLoop @[0] {
	     desc=;
	     flags=;
	     loop_code {
	      name=;
	      el_typ=ProgEl;
	      el_def=0;
	      ForLoop @[0] {
	       desc=;
	       flags=;
	       loop_code {
		name=;
		el_typ=ProgEl;
		el_def=0;
		ForLoop @[0] {
		 desc=;
		 flags=;
		 loop_code {
		  name=;
		  el_typ=ProgEl;
		  el_def=0;
		  FunctionCall @[0] {
		   desc=;
		   flags=;
		   result_var=NULL;
		   fun=$219$;
		   fun_args {
		    name=;
		    el_typ=ProgArg;
		    el_def=0;
		   };
		  };
		  FunctionCall @[1] {
		   desc=;
		   flags=;
		   result_var=NULL;
		   fun=$220$;
		   fun_args {
		    name=;
		    el_typ=ProgArg;
		    el_def=0;
		    ProgArg @[0] {
		     arg_type=double;
		     type="double";
		     name="m_dur";
		     required=1;
		     def_val=;
		     expr {
		      expr="minus_phase_dur";
		     };
		    };
		    ProgArg @[1] {
		     arg_type=double;
		     type="double";
		     name="p_dur";
		     required=1;
		     def_val=;
		     expr {
		      expr="plus_phase_dur";
		     };
		    };
		    ProgArg @[2] {
		     arg_type=double;
		     type="double";
		     name="hz_s_m";
		     required=1;
		     def_val=;
		     expr {
		      expr="trg_hz_s_m";
		     };
		    };
		    ProgArg @[3] {
		     arg_type=double;
		     type="double";
		     name="hz_s_p";
		     required=1;
		     def_val=;
		     expr {
		      expr="trg_hz_s_p";
		     };
		    };
		    ProgArg @[4] {
		     arg_type=double;
		     type="double";
		     name="hz_r_m";
		     required=1;
		     def_val=;
		     expr {
		      expr="trg_hz_r_m";
		     };
		    };
		    ProgArg @[5] {
		     arg_type=double;
		     type="double";
		     name="hz_r_p";
		     required=1;
		     def_val=;
		     expr {
		      expr="trg_hz_r_p";
		     };
		    };
		   };
		  };
		  FunctionCall @[2] {
		   desc=;
		   flags=;
		   result_var=NULL;
		   fun=$221$;
		   fun_args {
		    name=;
		    el_typ=ProgArg;
		    el_def=0;
		    ProgArg @[0] {
		     arg_type=int;
		     type="int";
		     name="tot_dur";
		     required=1;
		     def_val=;
		     expr {
		      expr="minus_phase_dur+plus_phase_dur";
		     };
		    };
		   };
		  };
		 };
		 init {
		  expr="i = 0";
		 };
		 test {
		  expr="i < n_reps";
		 };
		 iter {
		  expr="i++";
		 };
		};
	       };
	       init {
		expr="trg_hz_r_p = swp_hz_st";
	       };
	       test {
		expr="trg_hz_r_p <= swp_hz_ed";
	       };
	       iter {
		expr="trg_hz_r_p += swp_hz_inc";
	       };
	      };
	     };
	     init {
	      expr="trg_hz_s_p = swp_hz_st";
	     };
	     test {
	      expr="trg_hz_s_p <= swp_hz_ed";
	     };
	     iter {
	      expr="trg_hz_s_p += swp_hz_inc";
	     };
	    };
	   };
	   init {
	    expr="trg_hz_r_m = swp_hz_st";
	   };
	   test {
	    expr="trg_hz_r_m <= swp_hz_ed";
	   };
	   iter {
	    expr="trg_hz_r_m += swp_hz_inc";
	   };
	  };
	 };
	 init {
	  expr="trg_hz_s_m = swp_hz_st";
	 };
	 test {
	  expr="trg_hz_s_m <= swp_hz_ed";
	 };
	 iter {
	  expr="trg_hz_s_m += swp_hz_inc";
	 };
	};
       };
       case_val {
	expr="FULL_SWEEP";
       };
      };
      CaseBlock @[9] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	PrintExpr @[0] {
	 desc=;
	 flags=;
	 expr {
	  expr="\"not running -- redo final sum\"";
	 };
	};
       };
       case_val {
	expr="REDO_FINAL_SUM";
       };
      };
      CaseBlock @[10] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	FunctionCall @[0] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=$219$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	FunctionCall @[1] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[3].functions[8]$222$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=int;
	   type="int";
	   name="s_t";
	   required=1;
	   def_val=;
	   expr {
	    expr="pair_tst_s_t";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=int;
	   type="int";
	   name="r_t";
	   required=1;
	   def_val=;
	   expr {
	    expr="pair_tst_r_t";
	   };
	  };
	 };
	};
	FunctionCall @[2] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=$221$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=int;
	   type="int";
	   name="tot_dur";
	   required=1;
	   def_val=;
	   expr {
	    expr="minus_phase_dur+plus_phase_dur";
	   };
	  };
	 };
	};
       };
       case_val {
	expr="PAIRS";
       };
      };
      CaseBlock @[11] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$219$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  FunctionCall @[1] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$222$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=int;
	     type="int";
	     name="s_t";
	     required=1;
	     def_val=;
	     expr {
	      expr="pair_tst_r_t + trg_sr_m";
	     };
	    };
	    ProgArg @[1] {
	     arg_type=int;
	     type="int";
	     name="r_t";
	     required=1;
	     def_val=;
	     expr {
	      expr="pair_tst_r_t";
	     };
	    };
	   };
	  };
	  FunctionCall @[2] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$221$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=int;
	     type="int";
	     name="tot_dur";
	     required=1;
	     def_val=;
	     expr {
	      expr="minus_phase_dur+plus_phase_dur";
	     };
	    };
	   };
	  };
	 };
	 init {
	  expr="trg_sr_m = - pair_s_off_rng";
	 };
	 test {
	  expr="trg_sr_m <= pair_s_off_rng";
	 };
	 iter {
	  expr="trg_sr_m += pair_s_off_inc";
	 };
	};
       };
       case_val {
	expr="PAIRS_SWEEP";
       };
      };
      CaseBlock @[12] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
       case_val {
	expr="TRIPLES";
       };
      };
      CaseBlock @[13] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
       case_val {
	expr="TRIPLES_SWEEP";
       };
      };
     };
    };
    Switch @[3] {
     desc=;
     flags=;
     switch_var=$205$;
     cases {
      name=;
      el_typ=CaseBlock;
      el_def=0;
      CaseBlock @[0] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	DataSelectRowsProg @[0] {
	 desc=;
	 flags=;
	 src_data_var=$166$;
	 dest_data_var=.projects[0].programs[3].vars[72]$223$;
	 select_spec {
	  name="select_spec";
	  ops {
	   name=;
	   el_typ=DataSelectEl;
	   el_def=0;
	   DataSelectEl @[0] {
	    col_name="time";
	    on=1;
	    rel=EQUAL;
	    use_var=1;
	    cmp 2 0=200;
	    var=$217$;
	    enable_var=NULL;
	   };
	  };
	  comb_op=AND;
	 };
	};
	FunctionCall @[1] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=.projects[0].programs[3].functions[12]$224$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=DataTable;
	   type="DataTable*";
	   name="end_data";
	   required=1;
	   def_val=;
	   expr {
	    expr="CtPG06_EndData";
	   };
	  };
	 };
	};
       };
       case_val {
	expr="PG06";
       };
      };
      CaseBlock @[1] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	DataSelectRowsProg @[0] {
	 desc=;
	 flags=;
	 src_data_var=$192$;
	 dest_data_var=.projects[0].programs[3].vars[101]$225$;
	 select_spec {
	  name="select_spec";
	  ops {
	   name=;
	   el_typ=DataSelectEl;
	   el_def=0;
	   DataSelectEl @[0] {
	    col_name="time";
	    on=1;
	    rel=EQUAL;
	    use_var=1;
	    cmp 2 0=200;
	    var=$217$;
	    enable_var=NULL;
	   };
	  };
	  comb_op=AND;
	 };
	};
	FunctionCall @[1] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=$224$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=DataTable;
	   type="DataTable*";
	   name="end_data";
	   required=1;
	   def_val=;
	   expr {
	    expr="UrakuboEtAl_EndData";
	   };
	  };
	 };
	};
       };
       case_val {
	expr="URAKUBO";
       };
      };
     };
    };
   };
  };
  Program @[4] {
   name="LRuleVis";
   tags=;
   desc="abstract learning rule visualization";
   flags=;
   objs {
    name=;
    el_typ=taNBase;
    el_def=0;
    DataTable @[0] {
     name="LRule_Vis";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1851851791143417;
	 val_type_fixed=0;
	};
       };
       name="act_sr_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1851851791143417;
	 val_type_fixed=0;
	};
       };
       name="act_sr_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[2] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1851851791143417;
	 val_type_fixed=0;
	};
       };
       name="act_s_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[3] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1851851791143417;
	 val_type_fixed=0;
	};
       };
       name="act_r_m";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[4] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1851851791143417;
	 val_type_fixed=0;
	};
       };
       name="act_s_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[5] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1851851791143417;
	 val_type_fixed=0;
	};
       };
       name="act_r_p";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[6] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1851851791143417;
	 val_type_fixed=0;
	};
       };
       name="dw";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
   };
   types {
    name=;
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="LearnRule";
     desc=;
     enums {
      name=;
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="CAL";
       value=0;
       desc=;
      };
      DynEnumItem @[1] {
       name="SD_CAL";
       value=1;
       desc="sender activity drives depression version of CAL";
      };
      DynEnumItem @[2] {
       name="BCM";
       value=2;
       desc="bcm";
      };
      DynEnumItem @[3] {
       name="CT_BCM";
       value=3;
       desc="ctleabra version of bcm";
      };
      DynEnumItem @[4] {
       name="CT_BCM_NO_Y";
       value=4;
       desc="ctleabra version of bcm -- no recv mult";
      };
     };
     bits=0;
    };
    DynEnumType @[1] {
     name="ActRanges";
     desc=;
     enums {
      name=;
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="MINUS_SWEEP_SAME";
       value=1;
       desc="sweep both minus phase vals through range with plus at fixed tst vals";
      };
      DynEnumItem @[1] {
       name="MINUS_SWEEP_SEP";
       value=2;
       desc="sweep minus phase vals separately through range with plus at fixed tst vals";
      };
      DynEnumItem @[2] {
       name="PLUS_SWEEP_SAME";
       value=3;
       desc="sweep both plus phase vals through range with minus at fixed tst vals";
      };
      DynEnumItem @[3] {
       name="PLUS_SWEEP_SEP";
       value=4;
       desc="sweep both plus phase vals through sep vals range with minus at fixed tst vals";
      };
      DynEnumItem @[4] {
       name="SEND_SWEEP";
       value=5;
       desc="sweep sending vals through range with recv at fixed tst vals";
      };
      DynEnumItem @[5] {
       name="RECV_SWEEP";
       value=6;
       desc="sweep recv vals through range with send at fixed tst vals";
      };
      DynEnumItem @[6] {
       name="HEBB_SWEEP";
       value=7;
       desc="just sweep over send and recv in minus phase with 0 in plus phase -- just does hebb";
      };
      DynEnumItem @[7] {
       name="FULL_SWEEP";
       value=8;
       desc="full sweep of all send and recv values (very long!!)";
      };
     };
     bits=0;
    };
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="LRule_Vis";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[4].objs[0]$226$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="learn_rule";
     var_type=T_DynEnum;
     dyn_enum_val {
      enum_type=.projects[0].programs[4].types[0]$227$;
      value=4;
     };
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="act_range";
     var_type=T_DynEnum;
     dyn_enum_val {
      enum_type=.projects[0].programs[4].types[1]$228$;
      value=3;
     };
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[3] {
     name="act_sr_m";
     var_type=T_Real;
     real_val=0.1;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[4] {
     name="act_sr_p";
     var_type=T_Real;
     real_val=0.9999999999999998;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[5] {
     name="act_s_m";
     var_type=T_Real;
     real_val=0.5;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[6] {
     name="act_r_m";
     var_type=T_Real;
     real_val=0.2;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[7] {
     name="act_s_p";
     var_type=T_Real;
     real_val=0.9999999999999999;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[8] {
     name="act_r_p";
     var_type=T_Real;
     real_val=0.9999999999999999;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[9] {
     name="dw";
     var_type=T_Real;
     real_val=0.7999999999999997;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[10] {
     name="tst_act_s_m";
     var_type=T_Real;
     real_val=0.5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of sender in minus phase ";
     init_from=NULL;
    };
    ProgVar @[11] {
     name="tst_act_r_m";
     var_type=T_Real;
     real_val=0.2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of recv in minus phase";
     init_from=NULL;
    };
    ProgVar @[12] {
     name="tst_act_s_p";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of sender in plus phase";
     init_from=NULL;
    };
    ProgVar @[13] {
     name="tst_act_r_p";
     var_type=T_Real;
     real_val=0.5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="test hertz firing of recv in plus phase";
     init_from=NULL;
    };
    ProgVar @[14] {
     name="swp_s";
     var_type=T_Bool;
     bool_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="when sweeping by phase, sweep sending value";
     init_from=NULL;
    };
    ProgVar @[15] {
     name="swp_r";
     var_type=T_Bool;
     bool_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="when sweeping by phase, sweep recv value";
     init_from=NULL;
    };
    ProgVar @[16] {
     name="swp_m";
     var_type=T_Bool;
     bool_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|EDIT_VAL;
     reference=0;
     desc="when sweeping by send/recv, sweep in minus phase";
     init_from=NULL;
    };
    ProgVar @[17] {
     name="swp_p";
     var_type=T_Bool;
     bool_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|EDIT_VAL;
     reference=0;
     desc="when sweeping by send/recv, sweep in plus phase";
     init_from=NULL;
    };
    ProgVar @[18] {
     name="swp_st";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[19] {
     name="swp_ed";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[20] {
     name="swp_inc";
     var_type=T_Real;
     real_val=0.1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[21] {
     name="swp1";
     var_type=T_Real;
     real_val=1.1;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[22] {
     name="swp2";
     var_type=T_Real;
     real_val=1.1;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
    Function @[0] {
     desc=;
     flags=;
     name="Compute_dWt";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="a_s_m";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="a_r_m";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="a_s_p";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[3] {
       name="a_r_p";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[4].vars[6]$229$;
       expr {
	expr="a_r_m";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=.projects[0].programs[4].vars[8]$230$;
       expr {
	expr="a_r_p";
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=.projects[0].programs[4].vars[5]$231$;
       expr {
	expr="a_s_m";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=.projects[0].programs[4].vars[7]$232$;
       expr {
	expr="a_s_p";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=.projects[0].programs[4].vars[3]$233$;
       expr {
	expr="a_s_m * a_r_m";
       };
      };
      AssignExpr @[6] {
       desc=;
       flags=;
       result_var=.projects[0].programs[4].vars[4]$234$;
       expr {
	expr="a_s_p * a_r_p";
       };
      };
      Switch @[7] {
       desc=;
       flags=;
       switch_var=.projects[0].programs[4].vars[1]$235$;
       cases {
	name=;
	el_typ=CaseBlock;
	el_def=0;
	CaseBlock @[0] {
	 desc=;
	 flags=;
	 prog_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=;
	   result_var=.projects[0].programs[4].vars[9]$236$;
	   expr {
	    expr="a_r_p * a_s_p - a_r_m * a_s_m";
	   };
	  };
	 };
	 case_val {
	  expr="CAL";
	 };
	};
	CaseBlock @[1] {
	 desc=;
	 flags=;
	 prog_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=;
	   result_var=$236$;
	   expr {
	    expr=".5 * (a_s_m + a_s_p) * (a_r_p  - a_r_m)";
	   };
	  };
	 };
	 case_val {
	  expr="SD_CAL";
	 };
	};
	CaseBlock @[2] {
	 desc=;
	 flags=;
	 prog_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=;
	   result_var=$236$;
	   expr {
	    expr="a_r_p * (a_r_p - .5) * a_s_p";
	   };
	  };
	 };
	 case_val {
	  expr="BCM";
	 };
	};
	CaseBlock @[3] {
	 desc=;
	 flags=;
	 prog_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=;
	   result_var=$236$;
	   expr {
	    expr="a_r_p * (a_r_p - a_r_m) * a_s_p";
	   };
	  };
	 };
	 case_val {
	  expr="CT_BCM";
	 };
	};
	CaseBlock @[4] {
	 desc=;
	 flags=;
	 prog_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=;
	   result_var=$236$;
	   expr {
	    expr="(a_r_p - a_r_m) * a_s_p";
	   };
	  };
	 };
	 case_val {
	  expr="CT_BCM_NO_Y";
	 };
	};
       };
      };
      ReturnExpr @[8] {
       desc=;
       flags=;
       expr {
	expr="dw";
       };
      };
     };
    };
    Function @[1] {
     desc=;
     flags=;
     name="WriteData";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AddNewDataRow @[1] {
       desc=;
       flags=;
       data_var=.projects[0].programs[4].vars[0]$237$;
      };
      DataVarProg @[2] {
       desc=;
       flags=;
       data_var=$237$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$231$;
       var_2=$229$;
       var_3=$232$;
       var_4=$230$;
      };
      DataVarProg @[3] {
       desc=;
       flags=;
       data_var=$237$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$236$;
       var_2=$233$;
       var_3=$234$;
       var_4=NULL;
      };
      DoneWritingDataRow @[4] {
       desc=;
       flags=;
       data_var=$237$;
      };
     };
    };
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    ResetDataRows @[0] {
     desc=;
     flags=;
     data_var=$237$;
    };
    Switch @[1] {
     desc=;
     flags=;
     switch_var=.projects[0].programs[4].vars[2]$238$;
     cases {
      name=;
      el_typ=CaseBlock;
      el_def=0;
      CaseBlock @[0] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=.projects[0].programs[4].functions[0]$239$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=double;
	     type="double";
	     name="a_s_m";
	     required=1;
	     def_val=;
	     expr {
	      expr="swp_s ? swp1 : tst_act_s_m";
	     };
	    };
	    ProgArg @[1] {
	     arg_type=double;
	     type="double";
	     name="a_r_m";
	     required=1;
	     def_val=;
	     expr {
	      expr="swp_r ? swp1 : tst_act_r_m";
	     };
	    };
	    ProgArg @[2] {
	     arg_type=double;
	     type="double";
	     name="a_s_p";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_act_s_p";
	     };
	    };
	    ProgArg @[3] {
	     arg_type=double;
	     type="double";
	     name="a_r_p";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_act_r_p";
	     };
	    };
	   };
	  };
	  FunctionCall @[1] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=.projects[0].programs[4].functions[1]$240$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_st";
	 };
	 test {
	  expr="swp1 <= swp_ed";
	 };
	 iter {
	  expr="swp1 += swp_inc";
	 };
	};
       };
       case_val {
	expr="MINUS_SWEEP_SAME";
       };
      };
      CaseBlock @[1] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$239$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	      ProgArg @[0] {
	       arg_type=double;
	       type="double";
	       name="a_s_m";
	       required=1;
	       def_val=;
	       expr {
		expr="swp1";
	       };
	      };
	      ProgArg @[1] {
	       arg_type=double;
	       type="double";
	       name="a_r_m";
	       required=1;
	       def_val=;
	       expr {
		expr="swp2";
	       };
	      };
	      ProgArg @[2] {
	       arg_type=double;
	       type="double";
	       name="a_s_p";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_act_s_p";
	       };
	      };
	      ProgArg @[3] {
	       arg_type=double;
	       type="double";
	       name="a_r_p";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_act_r_p";
	       };
	      };
	     };
	    };
	    FunctionCall @[1] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$240$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	   };
	   init {
	    expr="swp2 = swp_st";
	   };
	   test {
	    expr="swp2 <= swp_ed";
	   };
	   iter {
	    expr="swp2 += swp_inc";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_st";
	 };
	 test {
	  expr="swp1 <= swp_ed";
	 };
	 iter {
	  expr="swp1 += swp_inc";
	 };
	};
       };
       case_val {
	expr="MINUS_SWEEP_SEP";
       };
      };
      CaseBlock @[2] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$239$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	    ProgArg @[0] {
	     arg_type=double;
	     type="double";
	     name="a_s_m";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_act_s_m";
	     };
	    };
	    ProgArg @[1] {
	     arg_type=double;
	     type="double";
	     name="a_r_m";
	     required=1;
	     def_val=;
	     expr {
	      expr="tst_act_r_m";
	     };
	    };
	    ProgArg @[2] {
	     arg_type=double;
	     type="double";
	     name="a_s_p";
	     required=1;
	     def_val=;
	     expr {
	      expr="swp_s ? swp1 : tst_act_s_p";
	     };
	    };
	    ProgArg @[3] {
	     arg_type=double;
	     type="double";
	     name="a_r_p";
	     required=1;
	     def_val=;
	     expr {
	      expr="swp_r ? swp1 : tst_act_r_p";
	     };
	    };
	   };
	  };
	  FunctionCall @[1] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$240$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_st";
	 };
	 test {
	  expr="swp1 <= swp_ed";
	 };
	 iter {
	  expr="swp1 += swp_inc";
	 };
	};
       };
       case_val {
	expr="PLUS_SWEEP_SAME";
       };
      };
      CaseBlock @[3] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$239$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	      ProgArg @[0] {
	       arg_type=double;
	       type="double";
	       name="a_s_m";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_act_s_m";
	       };
	      };
	      ProgArg @[1] {
	       arg_type=double;
	       type="double";
	       name="a_r_m";
	       required=1;
	       def_val=;
	       expr {
		expr="tst_act_r_m";
	       };
	      };
	      ProgArg @[2] {
	       arg_type=double;
	       type="double";
	       name="a_s_p";
	       required=1;
	       def_val=;
	       expr {
		expr="swp1";
	       };
	      };
	      ProgArg @[3] {
	       arg_type=double;
	       type="double";
	       name="a_r_p";
	       required=1;
	       def_val=;
	       expr {
		expr="swp2";
	       };
	      };
	     };
	    };
	    FunctionCall @[1] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=$240$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	   };
	   init {
	    expr="swp2 = swp_st";
	   };
	   test {
	    expr="swp2 <= swp_ed";
	   };
	   iter {
	    expr="swp2 += swp_inc";
	   };
	  };
	 };
	 init {
	  expr="swp1 = swp_st";
	 };
	 test {
	  expr="swp1 <= swp_ed";
	 };
	 iter {
	  expr="swp1 += swp_inc";
	 };
	};
       };
       case_val {
	expr="PLUS_SWEEP_SEP";
       };
      };
      CaseBlock @[4] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
       case_val {
	expr="SEND_SWEEP";
       };
      };
      CaseBlock @[5] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
       case_val {
	expr="RECV_SWEEP";
       };
      };
      CaseBlock @[6] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
       case_val {
	expr="HEBB_SWEEP";
       };
      };
      CaseBlock @[7] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
       };
       case_val {
	expr="FULL_SWEEP";
       };
      };
     };
    };
   };
  };
  Program @[5] {
   name="UrakuboLogPlot";
   tags=;
   desc="plots log data from urakubo detailed genesis sims -- copy data to UrGraph to plot in the best graph format";
   flags=;
   objs {
    name=;
    el_typ=DataTable;
    el_def=0;
    DataTable @[0] {
     name="UrakuboLog";
     desc="log of data from urakubo sim";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.2;0.69999999;1.7;3.4000001;6;9.6999998;14.7;21.200001;29.4;
39.5;51.700001;66.199997;83.199997;102.9;125.5;151.2;180.2;212.7;248.89999;
289;333.20001;381.70001;434.70001;492.39999;501.00058;501.00079;501.00128;501.00159;501.00177;
501.00229;501.00259;501.00278;501.00327;501.00357;501.00378;501.00427;501.00458;501.00479;501.00528;
501.00558;501.00577;501.00629;501.00659;501.00677;501.00729;501.00757;501.00778;501.00827;501.00858;
501.00879;501.00928;501.00958;501.00977;501.01028;501.01059;501.01077;501.01129;501.01157;501.01178;
501.01227;501.01257;501.01279;501.01328;501.01358;501.01379;501.01428;501.01468;501.01489;501.01538;
501.01569;501.01587;501.01639;501.01669;501.01688;501.0174;501.01767;501.01788;501.01837;501.01868;
501.01889;501.01938;501.01968;501.01987;501.02039;501.02069;501.02087;501.02139;501.02167;501.02188;
501.02237;501.02267;501.02289;501.02338;501.02368;501.02386;501.02438;501.02469;501.02487;501.02539;
501.02567;501.02588;501.02637;501.02667;501.02689;501.02737;501.02768;501.02789;501.02838;501.02869;
501.02887;501.02939;501.02979;501.02997;501.03049;501.03079;501.03098;501.03149;501.03177;501.03198;
501.03247;501.03278;501.03299;501.03348;501.03378;501.03397;501.03448;501.03479;501.03497;501.03549;
501.03577;501.03598;501.03647;501.03677;501.03699;501.03748;501.03778;501.03799;501.03848;501.03879;
501.03897;501.03949;501.03979;501.03998;501.04047;501.04077;501.04099;501.04147;501.04178;501.04199;
501.04248;501.04279;501.04297;501.04349;501.04388;501.04407;501.04459;501.04489;501.04507;501.04559;
501.04587;501.04608;501.04657;501.04688;501.04709;501.04758;501.04788;501.04807;501.04858;501.04889;
501.04907;501.04959;501.04987;501.05008;501.05057;501.12183;501.29184;501.55185;501.92184;502.09183;
502.29184;502.79184;503.79184;505.49185;508.09183;511.79184;516.79187;521.09186;521.29187;521.79187;
522.79187;524.49182;527.09186;530.79187;535.79187;542.29187;550.49182;560.59186;572.79187;587.29187;
604.29187;623.99182;646.59186;672.29187;701.29187;733.79187;769.99182;810.09186;854.29187;902.79187;
955.79187;1013.4918;1021.0919;1021.2919;1021.7919;       };
      };
      float_Data @[1] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Vm25";
       desc="Vm25";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] -65;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-64.776047;-61.39299;-51.524433;-45.561832;-16.972569;
19.796171;14.665983;7.9421692;-11.424697;-21.714247;-27.416399;-37.331726;-41.26046;-43.54982;-48.959515;
-51.652508;-53.040432;-55.429199;-56.374413;-56.870796;-57.784447;-58.172527;-58.383583;-58.78965;-58.972523;
-59.076225;-59.289215;-59.426609;-59.487915;-59.626907;-59.037708;-55.278454;-34.90831;12.451537;20.593607;
12.956016;1.9179636;-5.8050528;-22.883797;-30.568079;-34.516502;-41.578651;-45.13443;-47.489552;-52.431389;
-54.352417;-55.307262;-56.960472;-57.618439;-57.962784;-58.58971;-58.85112;-58.991478;-59.257034;-59.37471;
-59.441105;-59.577976;-59.646767;-59.689163;-59.788139;-59.84523;-57.12112;-44.545616;3.8601577;18.05468;
15.295422;4.8523197;-2.8670988;-20.601084;-31.160698;-35.057106;-42.205597;-45.931118;-48.367607;-53.09967;
-54.867374;-55.746449;-57.27533;-57.887066;-58.20821;-58.795471;-59.042007;-59.17506;-59.428993;-59.54298;
-59.607861;-59.743271;-59.81229;-59.855133;-59.955822;-63.154007;-64.901062;-64.995796;-64.997658;-64.998077;
-64.99852;-64.999306;-64.999931;-65.000092;-65.000099;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;       };
      };
      float_Data @[2] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Vm20";
       desc="membrane_potential20";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] -65;-65.000084;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-64.98542;-64.53186;-60.349506;-57.280304;-52.813885;
-7.7885952;-3.6846144;-7.8057294;-24.114388;-32.057587;-35.813606;-41.150715;-43.179699;-44.48761;-47.832638;
-49.744381;-50.882126;-53.166065;-54.208134;-54.79628;-55.978497;-56.534397;-56.855309;-57.520412;-57.845016;
-58.036926;-58.448299;-58.722393;-58.845196;-59.119606;-59.229534;-58.707947;-53.839741;-32.036556;-11.716657;
-4.6008153;-12.775521;-19.150816;-32.182423;-36.913368;-39.032658;-42.794575;-44.922688;-46.387512;-49.881283;
-51.591068;-52.545689;-54.407749;-55.250996;-55.727154;-56.686016;-57.138199;-57.399834;-57.944252;-58.211586;
-58.370384;-58.713482;-58.89006;-58.998158;-59.24168;-59.370159;-59.164852;-55.27309;-42.324238;-19.474958;
-4.4013247;-11.11113;-17.260956;-30.9109;-37.538883;-39.594261;-43.383739;-45.586002;-47.086391;-50.534782;
-52.165291;-53.069233;-54.830147;-55.628883;-56.080639;-56.992516;-57.42384;-57.673897;-58.195679;-58.452805;
-58.605877;-58.937618;-59.108948;-59.214058;-59.451477;-63.20879;-64.903618;-64.995682;-64.997551;-64.997986;
-64.998444;-64.999268;-64.999916;-65.000084;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;       };
      };
      float_Data @[3] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Ca_Co12";
       desc="Ca.Co12";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.037099235;0.049596053;0.049803365;0.049953252;0.049995352;0.049999256;0.049999449;0.049999561;0.049999688;0.049999814;
0.049999937;0.050000042;0.050000127;0.050000191;0.050000235;0.050000262;0.050000276;0.050000284;0.050000288;0.050000288;
0.050000288;0.050000288;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.12522662;0.56461054;1.765399;2.5747502;3.2491634;
10.137098;10.383531;11.236498;12.623914;11.897495;11.359001;10.10604;9.4028997;8.9500294;7.8224449;
7.1870952;6.8038545;6.0115166;5.6350827;5.4167151;4.9597135;4.733252;4.5978904;4.303133;4.1503725;
4.056644;3.8456292;3.6963248;3.6269927;3.4665809;3.4331758;3.5380733;4.0721998;6.1498756;8.9429903;
8.6893806;9.2429161;9.3603897;8.5354614;8.0935373;7.7507772;6.6821618;6.091228;5.7177005;4.8824611;
4.4736156;4.240283;3.769047;3.5460997;3.4166281;3.1453335;3.0108078;2.9303958;2.7553213;2.6645989;
2.6089299;2.4835389;2.416091;2.3738112;2.2760055;2.226763;2.304698;2.6157296;3.2641659;5.0421796;
5.5126772;5.8126197;5.9819989;5.7672677;5.6051693;5.4003096;4.6878195;4.2891722;4.0379291;3.4824612;
3.2125814;3.0580099;2.7434421;2.5933847;2.505898;2.3218307;2.2302072;2.1753297;2.0555391;1.9932691;
1.9549788;1.8684577;1.821727;1.7923523;1.7241209;0.16056134;0.065036684;0.063711509;0.060057987;0.058388039;
0.056650743;0.053572446;0.051019873;0.050184;0.050055373;0.050036535;0.050029319;0.050024897;0.050024711;0.050024256;
0.050023377;0.050021973;0.050020013;0.050017565;0.050014794;0.050011907;0.050009128;0.050006654;0.050004605;0.050003029;
0.050001912;0.050001182;0.050000742;0.0500005;0.050000381;0.050000329;0.050000306;0.050000299;0.050000295;0.050000295;
0.050000295;0.050000295;0.050000295;0.050000295;0.050000295;       };
      };
      float_Data @[4] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Ca_Co6";
       desc="Ca.Co6";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.014838682;0.049058046;0.049540665;0.049890045;0.049988188;0.049997244;0.049997672;0.049997922;0.049998194;0.04999847;
0.049998734;0.049998965;0.049999151;0.049999289;0.049999382;0.049999442;0.049999475;0.04999949;0.049999498;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.050579134;0.06971395;0.16572826;0.23800844;0.29333383;
0.78810114;0.99510908;1.1145822;1.6533518;2.0982463;2.4604604;2.8259168;2.7024064;2.6132588;2.4166682;
2.3157063;2.2546065;2.1231081;2.0577259;2.0190265;1.9365289;1.895018;1.8700229;1.8150529;1.7861733;
1.7682661;1.727212;1.6972972;1.6830792;1.6491736;1.6305232;1.6252571;1.6361166;1.7019928;1.8790487;
2.072247;2.2440715;2.4287887;3.1499636;3.7505426;3.9905314;3.8414571;3.6480827;3.5205441;3.2218225;
3.0587683;2.9576147;2.7321222;2.6147597;2.5432923;2.3853726;2.3028502;2.2521603;2.1382403;2.0772951;
2.0392609;1.9518642;1.9039019;1.8735136;1.8023142;1.7624251;1.7405628;1.7052242;1.7028375;1.7638518;
1.9068217;2.0060117;2.1358933;2.7370305;3.4746828;3.6435778;3.4564712;3.273845;3.1546319;2.8764768;
2.7250209;2.6312168;2.4225008;2.3140686;2.2481048;2.1025324;2.0265737;1.9799576;1.875324;1.8194299;
1.7845803;1.7046049;1.6607815;1.6330415;1.5681314;0.1298082;0.059878573;0.058481909;0.056237519;0.055297554;
0.054319184;0.052555833;0.050955493;0.050275881;0.050111111;0.05007733;0.050062146;0.050052609;0.050052211;0.050051231;
0.050049338;0.050046302;0.05004207;0.050036792;0.050030805;0.050024569;0.050018571;0.050013226;0.0500088;0.050005399;
0.050002985;0.050001401;0.050000452;0.049999934;0.049999673;0.049999561;0.049999516;0.049999498;0.049999494;0.04999949;
0.04999949;0.04999949;0.04999949;0.04999949;0.04999949;       };
      };
      float_Data @[5] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaM_AC1_Co10";
       desc="CaM-AC1.Co10";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;2.3633944e-05;8.131229e-05;0.0001622351;0.00022809659;0.00025774952;0.00026884745;0.00027736655;0.00028633705;0.00029537317;
0.00030384542;0.00031122853;0.00031718839;0.00032162058;0.00032463734;0.00032650406;0.00032754755;0.00032807159;0.00032830675;0.00032840064;
0.00032843379;0.00032844409;0.00032844691;0.00032844758;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844776;0.00032845666;0.00032969005;0.00033630259;0.00035011649;
0.00057921297;0.0014397816;0.0026706557;0.0093911812;0.016547397;0.022508061;0.040356807;0.052277885;0.060443778;0.080880277;
0.092763044;0.1004056;0.11830133;0.12814505;0.13433489;0.14857045;0.15632489;0.1611955;0.17242636;0.17858155;
0.18246692;0.19149423;0.19808678;0.20119572;0.20847711;0.21253937;0.21513635;0.22139403;0.22515365;0.2279169;
0.23751208;0.24508905;0.25088111;0.26761413;0.27863017;0.28617167;0.30516255;0.31630179;0.32351151;0.34052601;
0.34993812;0.35586211;0.36946136;0.37683088;0.38143736;0.39196923;0.39767382;0.40124488;0.4094376;0.4138974;
0.41669884;0.42315763;0.42669371;0.42892265;0.43408522;0.43692604;0.43872312;0.44295684;0.44539034;0.44703165;
0.45195177;0.45558238;0.45828018;0.46595803;0.47282416;0.47642797;0.48571095;0.49129841;0.49497083;0.50381273;
0.50881201;0.51199925;0.51943642;0.52353626;0.52612305;0.53210342;0.5353781;0.53743941;0.54219693;0.54480052;
0.54643971;0.55022627;0.55230135;0.55360913;0.55663484;0.57981288;0.51244318;0.42809376;0.33318722;0.29720613;
0.25993672;0.18620208;0.095918447;0.031907976;0.007764657;0.0032123579;0.002445237;0.0021118128;0.0020981678;0.0020646313;
0.0019999149;0.0018965714;0.0017530468;0.0015748057;0.0013736768;0.0011653646;0.00096602162;0.00078907702;0.00064317294;0.00053149712;
0.00045236529;0.00040067034;0.00036969656;0.00035277827;0.00034441182;0.00034069482;0.00033922456;0.00033871364;0.00033856276;0.00033853014;
0.00033853139;0.00033854102;0.00033854242;0.00033854245;0.00033854254;       };
      };
      float_Data @[6] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaM_AC1_Co4";
       desc="CaM-AC1.Co4";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;2.2834156e-05;7.4706732e-05;0.00013498189;0.0001739486;0.00018891739;0.00019549887;0.00020154288;0.00020801539;0.00021453839;
0.00022065479;0.00022598504;0.00023028761;0.00023348707;0.00023566454;0.00023701177;0.00023776483;0.00023814297;0.00023831267;0.00023838039;
0.00023840432;0.00023841177;0.00023841379;0.00023841427;0.00023841437;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841456;0.00023844684;0.00023861822;0.00023899556;
0.00024447264;0.00026597915;0.00030517881;0.00059806189;0.0010104263;0.001431162;0.0031435885;0.0046768934;0.0059030908;0.0095869629;
0.012139125;0.013946709;0.018715849;0.021675397;0.023663411;0.02861682;0.03154175;0.033461064;0.038127225;0.040825468;
0.042579345;0.046803217;0.050017141;0.051570017;0.055299297;0.057435628;0.058819406;0.062150188;0.064076342;0.065344594;
0.068624407;0.070771866;0.072316237;0.076743089;0.079933055;0.082356252;0.089564607;0.094572656;0.098121405;0.10745481;
0.11320278;0.11703647;0.12646629;0.13193631;0.13548009;0.14392745;0.14869317;0.15174043;0.15890545;0.1629006;
0.16544187;0.1713872;0.17468959;0.17678727;0.18169041;0.18441352;0.18614386;0.19019566;0.19245812;0.19390617;
0.19740078;0.19947901;0.20088139;0.20456547;0.20789355;0.2097721;0.21521707;0.21892679;0.22153437;0.22833918;
0.23250389;0.23527375;0.24206606;0.24599481;0.24853607;0.25458097;0.25798291;0.2601546;0.26524842;0.26807985;
0.26987702;0.27406797;0.27638638;0.27785504;0.28127387;0.3187772;0.28013563;0.2292368;0.17253256;0.15154868;
0.13020715;0.089433692;0.043027651;0.013688717;0.0039349818;0.0021657411;0.0017371832;0.0015066983;0.0014971494;0.0014736637;
0.001428285;0.0013556926;0.0012546546;0.001128845;0.00098644139;0.00083845406;0.00069635577;0.00056982087;0.00046519339;0.00038493064;
0.00032796102;0.00029069933;0.00026835516;0.00025614322;0.00025010057;0.00024741312;0.0002463471;0.00024597338;0.00024585935;0.00024583054;
0.00024582606;0.00024582763;0.00024582795;0.00024582798;0.00024582798;       };
      };
      float_Data @[7] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaMCa3";
       desc="CaMCa3.Co15";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;1.2680189e-05;1.5358235e-05;1.862203e-05;2.0864094e-05;2.1917791e-05;2.2572987e-05;2.3244522e-05;2.3968669e-05;2.4699055e-05;
2.5384319e-05;2.5981757e-05;2.6464118e-05;2.6822829e-05;2.7066941e-05;2.7217957e-05;2.7302356e-05;2.7344731e-05;2.7363747e-05;2.7371334e-05;
2.7374015e-05;2.7374848e-05;2.7375076e-05;2.737513e-05;2.7375141e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7570321e-05;4.067539e-05;0.00079476199;0.0037625527;0.0089660995;
0.12303175;0.39865991;0.66828877;1.6876981;2.3418436;2.7011757;3.3017242;3.4764643;3.5322709;3.502883;
3.3959024;3.2992413;3.0102136;2.8261406;2.7050695;2.4191532;2.262742;2.1653361;1.9454238;1.8286536;
1.7565765;1.594456;1.4810169;1.4289947;1.3107899;1.2474442;1.2137054;1.1811616;1.2401518;1.4537237;
2.2176039;2.6466119;2.9364946;3.4832025;3.6519804;3.7198858;3.7283647;3.6431849;3.5590582;3.2825329;
3.0910699;2.9602659;2.6397092;2.4587748;2.3444166;2.0820262;1.9405904;1.8526545;1.6534188;1.5467774;
1.4805443;1.3302734;1.2495301;1.1992134;1.0844353;1.0223376;0.98558259;0.92381293;0.91437238;0.95942497;
1.2696775;1.4499375;1.5750475;1.8466995;1.9934031;2.0504632;2.1114256;2.096385;2.0691001;1.9558067;
1.8679264;1.8051862;1.6438444;1.5483981;1.4864904;1.3398184;1.2580669;1.2062821;1.0862373;1.0204451;
0.97905171;0.88367045;0.83161265;0.79890132;0.72355741;0.01691037;0.016894873;0.014390597;0.01087579;0.0095664132;
0.0082381889;0.0057160966;0.0028500485;0.0010098333;0.00037222003;0.00024087053;0.00019650931;0.00017042231;0.00016933898;0.00016667454;
0.000161527;0.00015329542;0.00014184623;0.00012760489;0.00011150658;9.4802803e-05;7.8790028e-05;6.455402e-05;5.2799805e-05;4.3793611e-05;
3.7406891e-05;3.3232191e-05;3.0729861e-05;2.9362716e-05;2.8686558e-05;2.8386161e-05;2.8267354e-05;2.8226086e-05;2.8213921e-05;2.8211312e-05;
2.821144e-05;2.8212249e-05;2.8212364e-05;2.8212367e-05;2.8212375e-05;       };
      };
      float_Data @[8] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="cAMP";
       desc="cAMP.Co13";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 4e-06;0.00046226193;0.0012392076;0.0019874938;0.0024291496;0.0026387125;0.0027708514;0.0028896655;0.0029961087;0.0030828281;
0.0031478903;0.0031940329;0.0032257026;0.0032468862;0.0032605091;0.0032687322;0.0032732901;0.0032755744;0.0032765998;0.0032770094;
0.0032771542;0.0032771991;0.0032772115;0.0032772142;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772161;0.0032772245;0.0032772445;
0.0032775574;0.0032788413;0.0032811612;0.0032977662;0.0033199161;0.0033414476;0.0034213362;0.0034873309;0.0035386542;0.0036915282;
0.0037993037;0.0038775031;0.0040941001;0.0042378502;0.0043391902;0.0046111159;0.0047865799;0.0049085156;0.0052301316;0.0054342062;
0.0055747153;0.0059410064;0.006248821;0.0064074369;0.0068170843;0.0070714834;0.0072445204;0.0076888278;0.0079634665;0.0081501519;
0.0086341416;0.0089396518;0.0091505395;0.0097055649;0.010058505;0.010302189;0.010941165;0.011345322;0.01162355;0.012350094;
0.01280718;0.013120604;0.013933904;0.014441656;0.014788091;0.015680732;0.016233634;0.016609062;0.017570149;0.018161299;
0.018561054;0.01957893;0.02020148;0.0206211;0.021685094;0.022333013;0.022768646;0.02386979;0.024538305;0.024987131;
0.026121138;0.026810834;0.027274808;0.028450254;0.029407321;0.029891644;0.031120352;0.031870529;0.032376282;0.033660941;
0.034445774;0.034974825;0.036317486;0.037136424;0.037687734;0.039083868;0.039933152;0.040503893;0.041945662;0.04282026;
0.043407016;0.044885878;0.045780778;0.046380289;0.047888454;0.23579288;0.56068176;0.8078869;0.87347341;0.84950006;
0.8057574;0.660079;0.39299607;0.15593405;0.054573536;0.031118551;0.023403389;0.019284628;0.019121081;0.018721422;
0.01795977;0.016770698;0.015176753;0.013292862;0.011297128;0.0093780542;0.0076841847;0.0062982016;0.0052391239;0.0044809724;
0.0039737974;0.0036593007;0.0034805185;0.0033882135;0.0033451207;0.0033269464;0.0033200374;0.0033176884;0.0033169882;0.0033168171;
0.0033167952;0.0033168101;0.0033168127;0.0033168129;0.0033168131;       };
      };
      float_Data @[9] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="I1_active";
       desc="I1_active.Co14";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.0020000001;0.13929188;0.15302791;0.18096469;0.23307444;0.31742051;0.4344112;0.57454848;0.72194654;0.85916632;
0.97186136;1.0524824;1.1015522;1.1258163;1.1344302;1.1354125;1.1339142;1.1323352;1.1313406;1.1308594;
1.1306683;1.1306043;1.1305861;1.1305816;1.1305808;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305805;1.1305802;1.1305797;
1.1305774;1.1305736;1.1305687;1.1305392;1.1304989;1.1304579;1.1302912;1.130141;1.1300188;1.1296365;
1.1293577;1.1291531;1.1285845;1.1282102;1.1279491;1.1272637;1.1268345;1.1265426;1.1257969;1.1253417;
1.1250359;1.124266;1.1236472;1.1233375;1.1225641;1.1221013;1.1217936;1.1210257;1.1205639;1.1202523;
1.1194365;1.1189157;1.1185526;1.1175815;1.1169548;1.1165193;1.1153729;1.1146502;1.1141562;1.1128862;
1.1121053;1.1115788;1.1102476;1.1094416;1.1089023;1.10755;1.1067371;1.1061951;1.1048404;1.1040283;
1.1034875;1.1021371;1.1013281;1.1007894;1.0994444;1.0986384;1.0981014;1.0967587;1.0959513;1.0954107;
1.0940347;1.0931886;1.0926151;1.0911452;1.0899316;1.0893124;1.0877302;1.0867596;1.0861045;1.084443;
1.0834318;1.0827526;1.0810394;1.0800027;1.0793082;1.0775621;1.0765084;1.0758039;1.0740355;1.0729704;
1.0722587;1.0704744;1.0694008;1.0686839;1.0668877;0.86979419;0.75625914;0.68196905;0.60428804;0.57616681;
0.54793632;0.4941636;0.43459433;0.40629366;0.41836372;0.45178071;0.49062696;0.51740348;0.51853609;0.52133071;
0.52677077;0.53561151;0.5483163;0.56515497;0.58651608;0.61332816;0.64730477;0.69067121;0.74518061;0.81057376;
0.88313031;0.95548606;1.0187598;1.0663716;1.0968378;1.1133342;1.1208912;1.1238235;1.1247835;1.1250402;
1.1250854;1.1250763;1.125074;1.1250739;1.1250738;       };
      };
      float_Data @[10] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="AMPAR_Internal";
       desc="Internal_AMPAR.Co16";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 5.9998331;6.1120553;6.4522104;6.6535673;6.6838336;6.6230817;6.5291061;6.4265938;6.3300567;6.2492356;
6.1888695;6.1490569;6.1265163;6.1162562;6.1132169;6.1134481;6.1145639;6.1155224;6.1160903;6.1163578;
6.1164627;6.1164975;6.1165071;6.1165094;6.1165099;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;
6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;
6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;
6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;
6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;
6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;
6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165781;6.1165781;6.1165781;
6.1165781;6.1165781;6.1165781;6.1165781;6.1165781;6.1165781;6.1165781;6.1165781;6.1165781;6.1165776;
6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165771;6.1165771;6.1165771;
6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165767;6.1165767;6.1165767;
6.1165767;6.1165767;6.1165767;6.1165767;6.1165767;6.1165767;6.1165762;6.1165762;6.1165762;6.1165762;
6.1165762;6.1165757;6.1165757;6.1165757;6.1165757;6.1165752;6.1165752;6.1165752;6.1165752;6.1165752;
6.1165752;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;
6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165743;6.1165743;6.1165743;6.1165743;
6.1165743;6.1165743;6.1165743;6.1165743;6.1165743;6.1165743;6.1165738;6.1165738;6.1165738;6.1165738;
6.1165738;6.1165738;6.1165738;6.1165738;6.1165738;6.1164961;6.1168461;6.1177087;6.1193671;6.1201916;
6.121222;6.1237979;6.1285567;6.1355309;6.1452537;6.1583071;6.1739058;6.1853557;6.1858487;6.1870666;
6.1894431;6.1933103;6.1988392;6.2059984;6.2145491;6.224072;6.2339854;6.2435451;6.2518373;6.2578306;
6.2605324;6.2592297;6.2537198;6.2443943;6.2321348;6.21807;6.2033129;6.1887827;6.1751385;6.1627994;
6.1519957;6.142817;6.1417775;6.1417508;6.1416836;       };
      };
      float_Data @[11] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="AMPAR_Memb";
       desc="Memb_AMPAR.Co17";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.15975384;0.17974462;0.1364605;0.13418297;0.15814763;0.19290687;0.23092167;0.26714817;0.29787961;
0.32107452;0.3364529;0.34514338;0.34904441;0.35013646;0.34997433;0.3494927;0.34909317;0.34885928;0.34874982;
0.34870711;0.34869298;0.34868899;0.34868801;0.3486878;0.34861135;0.34861135;0.34861133;0.34861133;0.3486113;
0.3486113;0.34861127;0.34861127;0.34861124;0.34861124;0.34861121;0.34861118;0.34861118;0.34861118;0.34861115;
0.34861112;0.34861112;0.34861109;0.34861109;0.34861106;0.34861106;0.34861103;0.34861103;0.348611;0.34861097;
0.34861097;0.34861094;0.34861094;0.34861094;0.34861091;0.34861088;0.34861088;0.34861085;0.34861085;0.34861082;
0.34861082;0.34861079;0.34861079;0.34861076;0.34861073;0.34861073;0.3486107;0.3486107;0.34861067;0.34861067;
0.34861064;0.34861064;0.34861061;0.34861058;0.34861058;0.34861055;0.34861055;0.34861055;0.34861052;0.34861049;
0.34861049;0.34861046;0.34861046;0.34861043;0.34861043;0.3486104;0.3486104;0.34861037;0.34861037;0.34861034;
0.34861031;0.34861031;0.34861031;0.34861028;0.34861025;0.34861025;0.34861022;0.34861022;0.34861019;0.34861019;
0.34861016;0.34861016;0.34861013;0.34861013;0.3486101;0.34861007;0.34861007;0.34861007;0.34861004;0.34861001;
0.34861001;0.34860998;0.34860995;0.34860995;0.34860992;0.34860992;0.34860989;0.34860989;0.34860986;0.34860986;
0.34860983;0.34860981;0.34860981;0.34860978;0.34860975;0.34860975;0.34860972;0.34860969;0.34860969;0.34860966;
0.34860963;0.34860963;0.3486096;0.34860957;0.34860957;0.34860954;0.34860951;0.34860948;0.34860945;0.34860942;
0.34860942;0.34860939;0.34860936;0.34860933;0.3486093;0.34860927;0.34860924;0.34860921;0.34860918;0.34860915;
0.34860912;0.34860909;0.34860906;0.348609;0.34860897;0.34860894;0.34860888;0.34860885;0.34860882;0.34860876;
0.34860873;0.3486087;0.34860864;0.34860861;0.34860858;0.34860852;0.34860846;0.34860843;0.34860837;0.34860834;
0.34860831;0.34860823;0.34860817;0.34860814;0.34860808;0.34856728;0.34825423;0.34731427;0.34531978;0.34424418;
0.34289908;0.33938318;0.33261967;0.32337016;0.31386739;0.30589426;0.29983696;0.29651964;0.29639006;0.2960737;
0.29547131;0.29452908;0.29325259;0.29170045;0.28996035;0.28812313;0.28627694;0.28453565;0.28308833;0.282224;
0.28228903;0.28358322;0.28625327;0.2902419;0.29530519;0.30107725;0.30715683;0.31318814;0.31890482;0.32413271;
0.328771;0.33277279;0.33323038;0.33324221;0.33327177;       };
      };
      float_Data @[12] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="AMPAR_PSD";
       desc="PSD_AMPAR.Co18";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.57793695;0.28403482;0.15517421;0.13215698;0.15313615;0.18848237;0.2275836;0.26485786;0.29643947;
0.32025042;0.33603281;0.34496111;0.34898421;0.35012773;0.34998077;0.34949982;0.34909752;0.34886131;0.34875059;
0.34870738;0.34869304;0.34868899;0.34868801;0.3486878;0.34822577;0.34822577;0.34822574;0.34822571;0.34822571;
0.34822568;0.34822568;0.34822565;0.34822562;0.34822562;0.34822562;0.34822559;0.34822556;0.34822556;0.34822553;
0.34822553;0.3482255;0.34822547;0.34822547;0.34822547;0.34822544;0.34822541;0.34822541;0.34822538;0.34822538;
0.34822536;0.34822536;0.34822533;0.34822533;0.3482253;0.3482253;0.34822527;0.34822527;0.34822524;0.34822524;
0.34822521;0.34822521;0.34822518;0.34822515;0.34822515;0.34822515;0.34822512;0.34822509;0.34822509;0.34822506;
0.34822506;0.34822506;0.34822503;0.348225;0.348225;0.34822497;0.34822497;0.34822497;0.34822494;0.34822491;
0.34822491;0.34822488;0.34822488;0.34822488;0.34822485;0.34822482;0.34822482;0.34822479;0.34822479;0.34822479;
0.34822476;0.34822476;0.34822473;0.34822473;0.3482247;0.3482247;0.34822467;0.34822467;0.34822464;0.34822461;
0.34822461;0.34822458;0.34822455;0.34822452;0.34822449;0.34822443;0.3482244;0.34822437;0.34822431;0.34822425;
0.34822422;0.34822413;0.34822404;0.34822398;0.34822387;0.34822378;0.34822375;0.34822357;0.34822348;0.34822342;
0.34822324;0.34822312;0.34822303;0.34822282;0.3482227;0.34822261;0.34822237;0.3482222;0.34822211;0.34822181;
0.34822163;0.34822151;0.34822118;0.34822097;0.34822083;0.34822047;0.34822023;0.34822005;0.34821963;0.34821936;
0.34821919;0.34821871;0.34821841;0.3482182;0.34821767;0.34821734;0.3482171;0.3482165;0.34821615;0.34821591;
0.34821525;0.34821486;0.34821457;0.34821388;0.34821329;0.34821299;0.34821221;0.34821174;0.34821141;0.34821057;
0.34821007;0.34820971;0.34820881;0.34820825;0.34820786;0.34820691;0.34820631;0.34820589;0.34820485;0.34820423;
0.34820378;0.34820268;0.34820199;0.34820154;0.34820035;0.34759581;0.34258103;0.32878444;0.30735511;0.29897282;
0.2907559;0.2779735;0.27614522;0.30090547;0.33765718;0.35870332;0.35824051;0.35114133;0.35078442;0.34989172;
0.34811267;0.34514153;0.34080315;0.33513367;0.32836336;0.32080901;0.31279349;0.30466053;0.2968477;0.28993785;
0.28461719;0.28152597;0.28106028;0.28322417;0.28761643;0.29356492;0.30033502;0.30730057;0.31401473;0.320198;
0.3256948;0.33043468;0.33097616;0.33099017;0.33102515;       };
      };
      float_Data @[13] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="AMPAR_Trapped";
       desc="Trapped_AMPAR.Co19";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 3.9866891;2.3341558;1.1990041;0.701204;0.61170423;0.73314685;0.92844754;1.1410148;1.3393569;1.5036322;
1.6252494;1.7050933;1.7503765;1.7712365;1.7777059;1.7775731;1.7755647;1.7737745;1.7727003;1.7721916;
1.7719918;1.7719256;1.7719067;1.7719021;1.7719011;1.7724007;1.7724009;1.7724009;1.7724009;1.7724009;
1.772401;1.772401;1.772401;1.7724011;1.7724011;1.7724011;1.7724012;1.7724012;1.7724012;1.7724012;
1.7724013;1.7724013;1.7724013;1.7724015;1.7724015;1.7724015;1.7724015;1.7724016;1.7724016;1.7724016;
1.7724016;1.7724017;1.7724017;1.7724017;1.7724018;1.7724018;1.7724018;1.7724018;1.7724019;1.7724019;
1.7724019;1.7724019;1.772402;1.772402;1.772402;1.772402;1.7724022;1.7724022;1.7724022;1.7724023;
1.7724023;1.7724023;1.7724024;1.7724024;1.7724024;1.7724024;1.7724025;1.7724025;1.7724025;1.7724025;
1.7724026;1.7724026;1.7724026;1.7724026;1.7724028;1.7724028;1.7724028;1.7724029;1.7724029;1.7724029;
1.7724029;1.7724029;1.7724029;1.7724029;1.7724028;1.7724026;1.7724024;1.7724022;1.772402;1.7724017;
1.7724015;1.7724013;1.7724011;1.7724009;1.7724009;1.7724006;1.7724005;1.7724005;1.7724004;1.7724003;
1.7724003;1.7724001;1.7724001;1.7724001;1.7724001;1.7724001;1.7724001;1.7724001;1.7724003;1.7724003;
1.7724003;1.7724003;1.7724003;1.7724001;1.7724001;1.7724;1.7723999;1.7723999;1.7723999;1.7723999;
1.7723999;1.7723999;1.7723999;1.7724;1.7724;1.7724003;1.7724004;1.7724005;1.7724007;1.7724009;
1.772401;1.7724013;1.7724016;1.7724018;1.7724022;1.7724025;1.7724026;1.7724031;1.7724035;1.7724037;
1.7724043;1.7724046;1.7724048;1.7724054;1.7724059;1.7724061;1.7724067;1.7724071;1.7724073;1.772408;
1.7724084;1.7724086;1.7724094;1.7724099;1.7724102;1.7724111;1.7724116;1.7724119;1.7724129;1.7724135;
1.7724138;1.7724149;1.7724155;1.772416;1.7724171;1.7726481;1.7777936;1.7921827;1.8151795;1.8246028;
1.834195;1.850919;1.8609074;1.8452816;1.8076355;1.7662475;1.7285311;1.7030954;1.7019989;1.6992849;
1.6939672;1.6852373;1.6725655;1.655808;1.6353357;1.6121482;1.5878946;1.564754;1.5451857;1.5315762;
1.5258272;1.5289476;1.5407687;1.5599478;1.5843352;1.6115528;1.6394863;1.6665111;1.6915028;1.7137604;
1.7329212;1.7488854;1.7506701;1.7507161;1.750831;       };
      };
      float_Data @[14] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Nopen";
       desc="Nopen24";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.019074386;0.053324208;0.12071466;0.15145789;0.16876501;
0.20291302;0.21802072;0.22606711;0.23975573;0.24403776;0.2455038;0.24531697;0.24319933;0.24117889;0.23461805;
0.22998527;0.22671983;0.2182278;0.21305366;0.20961542;0.20115791;0.19622277;0.19300292;0.18522225;0.18074638;
0.17784396;0.17087148;0.16557911;0.16302525;0.15689978;0.16063628;0.16545582;0.168299;0.16695312;0.16546124;
0.16046306;0.15692586;0.15444228;0.14799592;0.1440787;0.14148411;0.13513714;0.13146488;0.12908565;0.12340498;
0.12018973;0.11812802;0.11325457;0.11051509;0.10876137;0.10461416;0.10227657;0.1007762;0.09721268;0.09519314;
0.093892373;0.090788037;0.089019187;0.087876193;0.085136704;0.086343586;0.092291594;0.098050296;0.098469451;0.09816961;
0.096383765;0.094935328;0.093891755;0.091142744;0.088886358;0.087757252;0.084961675;0.083317883;0.082241058;0.07962773;
0.07811904;0.077139139;0.074780427;0.073426358;0.072548211;0.070434704;0.069219679;0.068430506;0.066526152;0.065427765;
0.064712815;0.062982537;0.061981265;0.061328262;0.059743825;0.0050577028;0.00076832803;0.00072134653;0.00052795059;0.00043587838;
0.00034040958;0.00017253922;3.9430917e-05;2.9032501e-06;5.1749826e-08;1.6687592e-10;7.1658947e-14;9.1101007e-17;6.68093e-17;3.076955e-17;
6.5266316e-18;4.6757687e-19;8.2970456e-21;2.6742918e-23;1.1481913e-26;4.8155132e-31;1.4467532e-36;2.2841165e-43;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;       };
      };
      float_Data @[15] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Nt0";
       desc="Nt021";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 1;0.86951292;0.868011;0.86707175;0.86684972;0.86684185;0.86684561;0.86684954;0.86685401;0.86685848;
0.86686277;0.86686653;0.86686951;0.86687171;0.8668732;0.8668741;0.86687464;0.86687487;0.86687499;0.86687499;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687446;0.86676306;0.86198664;0.84923184;0.83215117;
0.7261017;0.63039619;0.59404474;0.55334044;0.53361213;0.52038908;0.48805168;0.4695811;0.45774856;0.42998511;
0.41461763;0.40490964;0.38242936;0.37007388;0.36226475;0.34408936;0.33401412;0.32760805;0.31257537;0.30416667;
0.29879248;0.28609908;0.27664071;0.27212405;0.26140329;0.25571933;0.25190705;0.24231115;0.23651332;0.23227997;
0.22016063;0.21256734;0.20743728;0.19471867;0.18739577;0.18267748;0.17152822;0.16532837;0.16140692;0.15234269;
0.14739473;0.14428802;0.13713548;0.13322441;0.13075939;0.1250442;0.12189092;0.11989218;0.11522304;0.11262563;
0.11097146;0.10708426;0.10490841;0.10351796;0.10023666;0.098464884;0.097364746;0.094456911;0.092712276;0.091489054;
0.087912746;0.085666366;0.084145553;0.080323853;0.077336177;0.07587409;0.072367333;0.070395343;0.069142297;0.066234119;
0.064641647;0.06364049;0.061333325;0.06007158;0.059276748;0.057436697;0.056424133;0.055783715;0.054293282;0.05346854;
0.052945346;0.051723607;0.051045522;0.050614826;0.049608212;0.27088043;0.6921159;0.7325452;0.77186811;0.78557092;
0.79901403;0.82296282;0.84680367;0.85969877;0.86353707;0.86406624;0.86401892;0.86394888;0.86394572;0.8639378;
0.86392218;0.86389619;0.86385822;0.86380774;0.86374629;0.86367738;0.8636061;0.86353809;0.86347848;0.86343026;
0.86339444;0.86336988;0.86335427;0.86334485;0.8633393;0.86333579;0.86333323;0.86333102;0.86332893;0.86332679;
0.86332464;0.8633225;0.86332226;0.86332226;0.8633222;       };
      };
      float_Data @[16] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Nt1";
       desc="Nt122";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.12489057;0.12633459;0.12723404;0.12744664;0.12745419;0.1274506;0.12744679;0.12744255;0.12743823;
0.12743413;0.12743056;0.1274277;0.12742558;0.12742415;0.12742329;0.12742281;0.12742257;0.12742247;0.12742242;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12756796;0.12771475;0.12918891;0.13458173;0.14253217;
0.1904152;0.23447363;0.25067165;0.26399052;0.27110395;0.27720836;0.29570895;0.3084428;0.31738719;0.34100342;
0.35583448;0.36588359;0.39108464;0.40597805;0.41572776;0.43929839;0.45281827;0.46155608;0.48242113;0.49427411;
0.50190508;0.52006918;0.53370768;0.54024601;0.55582279;0.56490588;0.57078344;0.58238536;0.58449531;0.57751089;
0.56002545;0.55234861;0.54756838;0.54175711;0.54262799;0.54445517;0.55385661;0.56218547;0.56857258;0.58666056;
0.59840512;0.60638082;0.62623763;0.63781661;0.64531928;0.66316754;0.67319924;0.67959541;0.69457179;0.70288181;
0.70815229;0.72043747;0.72723639;0.7315473;0.74160594;0.74735636;0.75127411;0.75833958;0.75987387;0.75598824;
0.73672622;0.72733796;0.72109032;0.70874453;0.70304334;0.70134526;0.70205867;0.70534301;0.70844859;0.71859086;
0.7257458;0.73074991;0.74353731;0.75113922;0.75610262;0.76798636;0.77469146;0.77896941;0.78897631;0.79451323;
0.79801571;0.80614239;0.81061202;0.81343383;0.81997585;0.70507789;0.29709637;0.25709382;0.21875697;0.20549655;
0.19252959;0.169503;0.14664477;0.1342936;0.13061742;0.13011064;0.13015592;0.13022298;0.13022603;0.13023362;
0.13024859;0.13027343;0.13030982;0.13035814;0.13041699;0.13048299;0.13055125;0.13061632;0.13067344;0.13071959;
0.1307539;0.13077742;0.13079238;0.13080135;0.13080667;0.13081004;0.13081248;0.1308146;0.13081662;0.13081865;
0.13082069;0.13082275;0.130823;0.130823;0.13082303;       };
      };
      float_Data @[17] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Nt2";
       desc="Nt223";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.0055965194;0.0056543765;0.0056941952;0.005703636;0.0057039796;0.0057038213;0.0057036513;0.0057034632;0.0057032709;
0.0057030888;0.00570293;0.005702802;0.0057027079;0.0057026451;0.0057026064;0.005702585;0.0057025743;0.0057025696;0.0057025678;
0.0057025673;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0055575743;0.0055222199;0.0088244323;0.016186431;0.025316635;
0.083483078;0.13513017;0.15528361;0.18266904;0.1952839;0.20240255;0.21623938;0.22197607;0.22486426;0.22901148;
0.22954787;0.22920677;0.226486;0.22394808;0.22200747;0.21661225;0.21316761;0.21083587;0.20500347;0.20155922;
0.19930243;0.19383173;0.18965162;0.18762992;0.1827739;0.17937478;0.17730953;0.1753035;0.17899136;0.19020912;
0.21981393;0.23508404;0.24499434;0.2635242;0.26997623;0.27286732;0.27461517;0.27248615;0.27002048;0.26099673;
0.25420013;0.24933116;0.23662692;0.22895895;0.22392136;0.21178827;0.20490985;0.20051239;0.19020517;0.18449257;
0.18087626;0.17247829;0.16785516;0.16493475;0.15815739;0.15417875;0.15136117;0.14720348;0.14741383;0.15252271;
0.17536104;0.18699569;0.19476412;0.21093161;0.21962048;0.22278063;0.22557397;0.22426163;0.22240911;0.21517503;
0.20961253;0.20560959;0.19512938;0.18878917;0.18462066;0.17457694;0.16888438;0.1652469;0.15673041;0.15201822;
0.14903896;0.14213403;0.13834244;0.13595136;0.13041596;0.024041662;0.010787757;0.010360984;0.0093748923;0.0089325579;
0.0084563959;0.0075342064;0.0065515605;0.0060076294;0.0058454927;0.0058231498;0.0058251503;0.0058281156;0.0058282507;0.0058285864;
0.0058292495;0.0058303494;0.0058319615;0.0058341031;0.0058367127;0.0058396417;0.0058426722;0.0058455626;0.0058481004;0.0058501516;
0.0058516772;0.005852723;0.005853388;0.005853788;0.005854025;0.0058541745;0.0058542844;0.0058543789;0.0058544693;0.0058545601;
0.0058546513;0.0058547431;0.0058547547;0.0058547552;0.0058547561;       };
      };
      float_Data @[18] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="PP1_active_Co1";
       desc="PP1_active.Co1";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.0020000001;0.066766568;0.062003069;0.05284084;0.04141812;0.030685181;0.022578219;0.017154651;0.013696455;0.01153296;
0.010208892;0.0094341468;0.0090176454;0.0088249901;0.0087585542;0.0087510338;0.0087624872;0.0087745944;0.0087822387;0.0087859426;
0.0087874141;0.0087879067;0.0087880474;0.0087880809;0.0087880883;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880902;0.0087880911;0.0087880921;0.0087880986;0.008788107;0.0087881153;0.0087881489;
0.0087881824;0.0087882122;0.0087883165;0.008788405;0.0087884767;0.0087887067;0.0087888846;0.0087890215;0.008789435;0.0087897349;
0.0087899584;0.0087906029;0.0087912139;0.0087915519;0.0087924972;0.0087931352;0.0087935915;0.0087948404;0.0087956656;0.0087962486;
0.0087978207;0.0087988451;0.0087995622;0.0088014798;0.0088027194;0.0088035837;0.0088058896;0.008807377;0.0088084154;0.0088111823;
0.0088129677;0.0088142119;0.0088175228;0.0088196509;0.0088211317;0.0088250507;0.0088275559;0.008829291;0.0088338591;0.0088367593;
0.0088387588;0.008843991;0.0088472907;0.0088495556;0.008855449;0.0088591408;0.0088616665;0.0088682026;0.0088722734;0.0088750487;
0.0088822003;0.0088866334;0.0088896481;0.0088973874;0.0089037875;0.0089070573;0.0089154365;0.0089206072;0.0089241145;0.0089330981;
0.0089386366;0.0089423927;0.0089520011;0.0089579187;0.0089619262;0.0089721689;0.0089784646;0.0089827245;0.0089935921;0.0090002585;
0.0090047633;0.0090162344;0.0090232566;0.0090279952;0.0090400381;0.011150245;0.013003105;0.014409742;0.016237816;0.017020049;
0.017885147;0.019805698;0.022491926;0.024060648;0.023397814;0.021704787;0.020019086;0.019002127;0.01896139;0.018861623;
0.018670402;0.018367812;0.017949805;0.017424336;0.016800538;0.016078172;0.015247494;0.014304273;0.013272285;0.012215062;
0.011223135;0.010382372;0.0097440453;0.0093131959;0.0090569491;0.0089240102;0.0088644177;0.008841523;0.0088340715;0.0088321008;
0.0088317767;0.0088318735;0.008831895;0.0088318959;0.0088318968;       };
      };
      float_Data @[19] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="PP1_active_Co7";
       desc="PP1_active.Co7";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.0020000001;0.40044919;0.37243071;0.31736344;0.24872522;0.18425013;0.1355619;0.10299447;0.082230411;0.069240682;
0.06129108;0.056639627;0.054139026;0.052982364;0.052583493;0.052538335;0.0526071;0.052679792;0.052725684;0.05274792;
0.052756757;0.052759714;0.052760556;0.052760761;0.052760802;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760813;0.052760821;0.052760828;0.052760888;0.052760974;0.052761074;0.052761555;0.05276208;0.052762561;0.052764334;
0.052765861;0.052767102;0.052771036;0.052774012;0.052776262;0.052782852;0.052787472;0.052790828;0.052800186;0.052806452;
0.052810896;0.052822903;0.052833408;0.052838948;0.052853599;0.05286292;0.052869342;0.05288611;0.052896637;0.052903842;
0.052922551;0.052934274;0.052942321;0.052963298;0.052976534;0.05298565;0.053009529;0.053024638;0.053035051;0.053062286;
0.053079464;0.053091262;0.053121958;0.053141192;0.053154342;0.05318835;0.053209506;0.053223915;0.05326096;0.05328387;
0.05329942;0.053339213;0.053363707;0.053380281;0.053422555;0.053448476;0.053465981;0.053510502;0.053537723;0.053556081;
0.05360271;0.053631213;0.053650443;0.053699359;0.053739399;0.053759735;0.053811535;0.053843293;0.053864755;0.053919438;
0.053952955;0.053975597;0.054033238;0.054068532;0.054092351;0.054152913;0.054189935;0.054214898;0.054278273;0.054316953;
0.054343008;0.054409064;0.05444932;0.05447641;0.054545008;0.066830143;0.078037776;0.086491004;0.097464748;0.10215937;
0.10735366;0.11888713;0.13502318;0.14445294;0.14047784;0.13031261;0.12019091;0.11408477;0.11384018;0.11324115;
0.11209303;0.11027622;0.10776646;0.1046115;0.10086621;0.096529178;0.091541871;0.085878901;0.079682998;0.07333561;
0.067380272;0.062332511;0.058500141;0.055913422;0.054374982;0.053576846;0.053219069;0.053081617;0.05303688;0.053025045;
0.0530231;0.053023681;0.053023808;0.053023811;0.053023823;       };
      };
      float_Data @[20] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaMKII_active_Co11";
       desc="activeCaMKII.Co11";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.19384055;0.71482688;1.2334721;1.4706798;1.5169071;1.5202973;1.5204531;1.5205394;1.5206248;
1.5207042;1.5207732;1.5208291;1.5208709;1.5208995;1.5209175;1.5209277;1.5209328;1.5209351;1.520936;
1.5209363;1.5209364;1.5209365;1.5209365;1.5209365;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199038;1.5197895;1.519667;1.5196105;
1.5202254;1.5267035;1.5373728;1.5990843;1.6666191;1.7234055;1.8945379;2.0092177;2.0878386;2.284704;
2.3992155;2.4728827;2.6454556;2.7404516;2.8002269;2.9378858;3.0130286;3.0603039;3.1696131;3.2297454;
3.2678044;3.3565953;3.4218268;3.4527237;3.5254834;3.5663505;3.5925744;3.6559558;3.6939719;3.7214513;
3.8152704;3.8889534;3.9451079;4.1071596;4.2139225;4.2870507;4.4715419;4.5801139;4.6505823;4.8177238;
4.9108539;4.9697866;5.1062427;5.1810389;5.2281656;5.3372283;5.3972211;5.4351687;5.5235763;5.5726261;
5.603826;5.6770806;5.7180862;5.7443099;5.8063245;5.8413157;5.8638039;5.9177713;5.949244;5.9703498;
6.0305381;6.0731773;6.1042519;6.1909566;6.2674451;6.3073936;6.4102368;6.4724088;6.5134912;6.6134586;
6.6708655;6.7078881;6.795857;6.8454943;6.8773136;6.9526296;6.9950929;7.0223422;7.0870252;7.1236525;
7.1472311;7.2034678;7.2354951;7.2561879;7.3057914;10.191245;11.457962;10.250279;8.1892242;7.4049072;
6.6030984;5.0693402;3.3113821;2.1786001;1.7927684;1.724937;1.7127683;1.7070355;1.7067976;1.7062116;
1.7050759;1.7032478;1.7006732;1.6974008;1.6935679;1.6893632;1.6849822;1.6805916;1.6763116;1.6722082;
1.6682924;1.6645263;1.6608371;1.6571364;1.6533433;1.6493999;1.6452782;1.6409791;1.6365241;1.6319485;
1.6272948;1.6226094;1.6220202;1.6220047;1.6219662;       };
      };
      float_Data @[21] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaMKII_active_Co5";
       desc="activeCaMKII.Co5";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.059628744;0.11945115;0.17077224;0.19419861;0.19876567;0.19910215;0.1991193;0.19912969;0.19913998;
0.19914953;0.19915785;0.19916457;0.19916961;0.19917308;0.19917524;0.19917646;0.19917707;0.19917735;0.19917747;
0.1991775;0.19917752;0.19917752;0.19917752;0.19917752;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.19943309;0.19943266;0.19943312;0.19943544;
0.19947816;0.19966033;0.20000838;0.20269132;0.20652688;0.21046759;0.22662918;0.24120851;0.25290924;0.28817266;
0.31265071;0.32999718;0.37576824;0.4041566;0.42321292;0.47063124;0.49857828;0.51689154;0.56131828;0.58693868;
0.60356182;0.64348787;0.67375565;0.68834245;0.72326428;0.74319506;0.75607371;0.78696209;0.8047471;0.81641757;
0.84646565;0.8661139;0.88024414;0.92077446;0.95001447;0.97225118;1.0386423;1.0849279;1.117761;1.2041219;
1.2572478;1.2926338;1.3794515;1.4296303;1.4620528;1.5390186;1.5822101;1.6097275;1.6740805;1.7097225;
1.7322924;1.7847481;1.8136491;1.8319086;1.8742546;1.8975468;1.9122535;1.9463723;1.9652114;1.9771829;
2.0058177;2.0227478;2.0341563;2.0641766;2.0915093;2.1070788;2.1528068;2.1842961;2.2065156;2.2646337;
2.3002007;2.3238227;2.3815506;2.4147594;2.4361489;2.486676;2.5148506;2.5327203;2.5742216;2.5969996;
2.6113331;2.6443276;2.6622832;2.673532;2.6992898;2.3694184;1.5158045;1.1311125;0.89069498;0.80895931;
0.72628909;0.56809926;0.38625818;0.26879087;0.22869238;0.22155811;0.22019082;0.21952829;0.21950085;0.21943334;
0.21930264;0.21909276;0.21879828;0.21842606;0.2179935;0.2175238;0.21704052;0.21656328;0.21610554;0.21567398;
0.21526885;0.21488488;0.21451312;0.21414332;0.21376623;0.21337527;0.21296716;0.21254167;0.21210086;0.21164814;
0.21118769;0.2107241;0.21066581;0.21066429;0.21066047;       };
      };
      float_Data @[22] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaN_active_Co3";
       desc="activeCaN.Co3";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;1.5613216e-06;4.3461852e-05;0.0002413436;0.0006015611;0.0010857239;0.0017028498;0.0024305284;0.0032232464;0.0040248004;
0.0047781891;0.0054356498;0.0059664999;0.0063610035;0.0066291797;0.0067948811;0.0068873856;0.0069337874;0.006954595;0.0069628945;
0.0069658253;0.0069667371;0.0069669858;0.0069670444;0.006967057;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670584;0.0069674784;0.0069768927;0.0069907298;0.0070043541;
0.0070767803;0.0071853716;0.0073020668;0.007928974;0.0087202117;0.0095135327;0.012737466;0.015620342;0.017944137;0.02508059;
0.030173384;0.033854712;0.04386308;0.050291743;0.054705873;0.066051103;0.072992742;0.077650234;0.089328982;0.096323937;
0.10097041;0.11249837;0.12160566;0.12611495;0.13724655;0.14382286;0.14816529;0.15891781;0.16535437;0.16974764;
0.181558;0.18931377;0.19491459;0.21113193;0.22296733;0.23192373;0.25715843;0.27364069;0.28500259;0.31412712;
0.33173305;0.34339672;0.37196416;0.38853431;0.39929631;0.42511374;0.43982857;0.44931215;0.47189626;0.48469782;
0.49293211;0.51251608;0.52361417;0.5307557;0.54775876;0.55741;0.56362957;0.57852542;0.58708566;0.59271193;
0.60709107;0.61593121;0.62205046;0.63901955;0.65553689;0.66495961;0.68989778;0.70511925;0.71524882;0.74019486;
0.75472254;0.76416481;0.78678626;0.79963005;0.8078779;0.82739502;0.83836395;0.8453778;0.86191297;0.87118381;
0.87710857;0.89107847;0.89891851;0.90393353;0.91577697;1.0595728;0.86556768;0.69932491;0.54371011;0.49313331;
0.44566369;0.36536613;0.29127094;0.25114316;0.22569135;0.19824252;0.16745833;0.14545766;0.14452033;0.14220792;
0.13771208;0.1304453;0.12017889;0.107145;0.092048526;0.075962141;0.060122129;0.045682184;0.033496901;0.023994192;
0.017164957;0.012658843;0.0099410573;0.0084504476;0.0077114138;0.0073823561;0.007251671;0.0072057052;0.0071915169;0.0071877493;
0.0071869562;0.0071868994;0.0071869078;0.0071869083;0.0071869087;       };
      };
      float_Data @[23] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaN_active_Co9";
       desc="activeCaN.Co9";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;1.5599226e-06;4.3540891e-05;0.00024176323;0.00060226576;0.0010865233;0.001703686;0.0024313971;0.0032241496;0.0040257378;
0.0047791586;0.0054366468;0.0059675188;0.0063620387;0.006630226;0.0067959344;0.0068884431;0.0069348468;0.0069556548;0.0069639548;
0.0069668856;0.0069677974;0.0069680461;0.0069681052;0.0069681173;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069684382;0.0069832541;0.0071321428;0.0073101283;0.0074781971;
0.0086566256;0.010753366;0.013285397;0.027181601;0.042730518;0.05613954;0.098082811;0.12702064;0.14707716;0.19747569;
0.22654648;0.2450373;0.28747258;0.31019461;0.32422242;0.355625;0.37216878;0.38233539;0.40505284;0.41703495;
0.42441294;0.44095641;0.45246625;0.45771357;0.4695181;0.47580165;0.47984761;0.49046564;0.49866202;0.50843203;
0.54206246;0.56619388;0.58429968;0.63304919;0.66261172;0.68207097;0.72782606;0.75251377;0.76765454;0.80069125;
0.81730473;0.82715327;0.84798652;0.85823548;0.86426449;0.87693352;0.88313001;0.88676339;0.89435977;0.8980456;
0.90019214;0.90462327;0.9067288;0.90793371;0.91034174;0.91142601;0.91210872;0.91450721;0.91693187;0.92066312;
0.93802315;0.94975728;0.95848447;0.98186105;1.0008708;1.0103852;1.0326494;1.0446414;1.0520122;1.0682018;
1.0764503;1.0813959;1.0920522;1.0974243;1.1006365;1.1075469;1.1110274;1.1131074;1.1175767;1.1198215;
1.1211593;1.1240165;1.1254369;1.126276;1.1280392;1.0685437;0.86789185;0.70082301;0.54465032;0.49392244;
0.44626817;0.3656719;0.29135525;0.25115922;0.2256954;0.19824538;0.16746175;0.14546134;0.14452402;0.14221162;
0.1377158;0.13044904;0.12018263;0.10714865;0.09205202;0.075965375;0.060125001;0.045684662;0.033498988;0.023995945;
0.017166451;0.012660159;0.0099422634;0.0084515912;0.0077125276;0.0073834565;0.0072527658;0.0072067981;0.0071926094;0.0071888417;
0.0071880487;0.0071879919;0.0071880003;0.0071880007;0.0071880012;       };
      };
      float_Data @[24] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="PKA_active_Co2";
       desc="activePKA.Co2";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.049673915;0.040283151;0.040364861;0.04054958;0.040853042;0.04129;0.041854165;0.042512901;0.043208163;0.04386647;
0.044418287;0.044820331;0.04506845;0.045192372;0.04523683;0.045242231;0.045234833;0.045226913;0.045221902;0.045219477;
0.045218512;0.045218188;0.045218095;0.045218073;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218065;0.045218065;0.045218065;0.045218065;0.045218065;0.045218065;0.045218062;0.045218062;0.045218062;
0.045218058;0.045218054;0.045218054;0.04521805;0.04521805;0.045218047;0.045218043;0.045218039;0.045218036;0.045218032;
0.045218028;0.045218024;0.045218017;0.04521801;0.045218006;0.045217995;0.045217987;0.045217983;0.045217972;0.045217961;
0.045217957;0.045217939;0.045217931;0.045217924;0.045217901;0.04521789;0.045217879;0.045217857;0.045217842;0.045217831;
0.045217801;0.045217782;0.045217771;0.045217738;0.045217708;0.045217693;0.045217652;0.04521763;0.045217611;0.045217566;
0.045217536;0.045217514;0.045217462;0.045217428;0.045217406;0.045217346;0.045217309;0.045217283;0.045217212;0.045217171;
0.045217142;0.045217067;0.045217019;0.045216985;0.045216899;0.045127727;0.044589899;0.044005319;0.044696968;0.045917373;
0.048095588;0.056256983;0.07527253;0.09496887;0.10275445;0.10130669;0.095162347;0.089172527;0.088893391;0.088197172;
0.086813681;0.084499292;0.081082731;0.076541781;0.071082003;0.065153755;0.059358835;0.054275181;0.050295647;0.047555514;
0.045949966;0.04520715;0.044992309;0.04501529;0.045095209;0.0451576;0.04519086;0.045204729;0.045209453;0.045210756;
0.045211013;0.045210999;0.045210991;0.045210991;0.045210991;       };
      };
      float_Data @[25] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="PKA_active_Co8";
       desc="activePKA.Co8";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.049673911;0.040283341;0.040364802;0.040549524;0.04085299;0.041289952;0.041854121;0.042512864;0.043208133;0.043866452;
0.044418272;0.044820324;0.045068447;0.045192372;0.045236826;0.045242231;0.045234833;0.045226913;0.045221902;0.045219477;
0.045218512;0.045218188;0.045218095;0.045218073;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218065;0.045218065;0.045218065;0.045218065;0.045218065;
0.045218062;0.045218062;0.045218058;0.045218058;0.045218054;0.04521805;0.04521805;0.045218047;0.045218043;0.045218039;
0.045218036;0.045218028;0.045218028;0.045218021;0.045218013;0.04521801;0.045218002;0.045217995;0.045217991;0.045217976;
0.045217969;0.045217965;0.04521795;0.045217939;0.045217935;0.045217916;0.045217905;0.045217898;0.045217875;0.045217864;
0.045217853;0.045217831;0.045217812;0.045217805;0.045217775;0.045217756;0.045217745;0.045217711;0.045217689;0.045217674;
0.045217637;0.045217615;0.0452176;0.045217555;0.045217518;0.045217499;0.045217451;0.045217421;0.045217399;0.045217346;
0.045217309;0.045217287;0.045217227;0.045217186;0.04521716;0.045217093;0.045217048;0.045217019;0.045216944;0.045216896;
0.045216866;0.04521678;0.045216728;0.045216691;0.045216601;0.045128111;0.044590421;0.04400548;0.044696145;0.045914654;
0.048091616;0.056251034;0.075266607;0.094965063;0.10275184;0.10130468;0.095160842;0.089171372;0.088892251;0.088196062;
0.086812645;0.084498368;0.081081957;0.076541178;0.071081579;0.065153487;0.059358682;0.054275103;0.050295614;0.047555499;
0.045949958;0.045207147;0.044992305;0.045015287;0.045095205;0.0451576;0.04519086;0.045204729;0.045209453;0.045210756;
0.045211013;0.045210999;0.045210991;0.045210991;0.045210991;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[1] {
     name="UrGraph";
     desc="log of data from urakubo sim";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.2;0.69999999;1.7;3.4000001;6;9.6999998;14.7;21.200001;29.4;
39.5;51.700001;66.199997;83.199997;102.9;125.5;151.2;180.2;212.7;248.89999;
289;333.20001;381.70001;434.70001;492.39999;501.00058;501.00079;501.00128;501.00159;501.00177;
501.00229;501.00259;501.00278;501.00327;501.00357;501.00378;501.00427;501.00458;501.00479;501.00528;
501.00558;501.00577;501.00629;501.00659;501.00677;501.00729;501.00757;501.00778;501.00827;501.00858;
501.00879;501.00928;501.00958;501.00977;501.01028;501.01059;501.01077;501.01129;501.01157;501.01178;
501.01227;501.01257;501.01279;501.01328;501.01358;501.01379;501.01428;501.01468;501.01489;501.01538;
501.01569;501.01587;501.01639;501.01669;501.01688;501.0174;501.01767;501.01788;501.01837;501.01868;
501.01889;501.01938;501.01968;501.01987;501.02039;501.02069;501.02087;501.02139;501.02167;501.02188;
501.02237;501.02267;501.02289;501.02338;501.02368;501.02386;501.02438;501.02469;501.02487;501.02539;
501.02567;501.02588;501.02637;501.02667;501.02689;501.02737;501.02768;501.02789;501.02838;501.02869;
501.02887;501.02939;501.02979;501.02997;501.03049;501.03079;501.03098;501.03149;501.03177;501.03198;
501.03247;501.03278;501.03299;501.03348;501.03378;501.03397;501.03448;501.03479;501.03497;501.03549;
501.03577;501.03598;501.03647;501.03677;501.03699;501.03748;501.03778;501.03799;501.03848;501.03879;
501.03897;501.03949;501.03979;501.03998;501.04047;501.04077;501.04099;501.04147;501.04178;501.04199;
501.04248;501.04279;501.04297;501.04349;501.04388;501.04407;501.04459;501.04489;501.04507;501.04559;
501.04587;501.04608;501.04657;501.04688;501.04709;501.04758;501.04788;501.04807;501.04858;501.04889;
501.04907;501.04959;501.04987;501.05008;501.05057;501.12183;501.29184;501.55185;501.92184;502.09183;
502.29184;502.79184;503.79184;505.49185;508.09183;511.79184;516.79187;521.09186;521.29187;521.79187;
522.79187;524.49182;527.09186;530.79187;535.79187;542.29187;550.49182;560.59186;572.79187;587.29187;
604.29187;623.99182;646.59186;672.29187;701.29187;733.79187;769.99182;810.09186;854.29187;902.79187;
955.79187;1013.4918;1021.0919;1021.2919;1021.7919;       };
      };
      float_Data @[1] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Vm25";
       desc="Vm25";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] -65;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-64.776047;-61.39299;-51.524433;-45.561832;-16.972569;
19.796171;14.665983;7.9421692;-11.424697;-21.714247;-27.416399;-37.331726;-41.26046;-43.54982;-48.959515;
-51.652508;-53.040432;-55.429199;-56.374413;-56.870796;-57.784447;-58.172527;-58.383583;-58.78965;-58.972523;
-59.076225;-59.289215;-59.426609;-59.487915;-59.626907;-59.037708;-55.278454;-34.90831;12.451537;20.593607;
12.956016;1.9179636;-5.8050528;-22.883797;-30.568079;-34.516502;-41.578651;-45.13443;-47.489552;-52.431389;
-54.352417;-55.307262;-56.960472;-57.618439;-57.962784;-58.58971;-58.85112;-58.991478;-59.257034;-59.37471;
-59.441105;-59.577976;-59.646767;-59.689163;-59.788139;-59.84523;-57.12112;-44.545616;3.8601577;18.05468;
15.295422;4.8523197;-2.8670988;-20.601084;-31.160698;-35.057106;-42.205597;-45.931118;-48.367607;-53.09967;
-54.867374;-55.746449;-57.27533;-57.887066;-58.20821;-58.795471;-59.042007;-59.17506;-59.428993;-59.54298;
-59.607861;-59.743271;-59.81229;-59.855133;-59.955822;-63.154007;-64.901062;-64.995796;-64.997658;-64.998077;
-64.99852;-64.999306;-64.999931;-65.000092;-65.000099;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;       };
      };
      float_Data @[2] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Vm20";
       desc="membrane_potential20";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] -65;-65.000084;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-64.98542;-64.53186;-60.349506;-57.280304;-52.813885;
-7.7885952;-3.6846144;-7.8057294;-24.114388;-32.057587;-35.813606;-41.150715;-43.179699;-44.48761;-47.832638;
-49.744381;-50.882126;-53.166065;-54.208134;-54.79628;-55.978497;-56.534397;-56.855309;-57.520412;-57.845016;
-58.036926;-58.448299;-58.722393;-58.845196;-59.119606;-59.229534;-58.707947;-53.839741;-32.036556;-11.716657;
-4.6008153;-12.775521;-19.150816;-32.182423;-36.913368;-39.032658;-42.794575;-44.922688;-46.387512;-49.881283;
-51.591068;-52.545689;-54.407749;-55.250996;-55.727154;-56.686016;-57.138199;-57.399834;-57.944252;-58.211586;
-58.370384;-58.713482;-58.89006;-58.998158;-59.24168;-59.370159;-59.164852;-55.27309;-42.324238;-19.474958;
-4.4013247;-11.11113;-17.260956;-30.9109;-37.538883;-39.594261;-43.383739;-45.586002;-47.086391;-50.534782;
-52.165291;-53.069233;-54.830147;-55.628883;-56.080639;-56.992516;-57.42384;-57.673897;-58.195679;-58.452805;
-58.605877;-58.937618;-59.108948;-59.214058;-59.451477;-63.20879;-64.903618;-64.995682;-64.997551;-64.997986;
-64.998444;-64.999268;-64.999916;-65.000084;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;
-65.000092;-65.000092;-65.000092;-65.000092;-65.000092;       };
      };
      float_Data @[3] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Ca_Co12";
       desc="Ca.Co12";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.037099235;0.049596053;0.049803365;0.049953252;0.049995352;0.049999256;0.049999449;0.049999561;0.049999688;0.049999814;
0.049999937;0.050000042;0.050000127;0.050000191;0.050000235;0.050000262;0.050000276;0.050000284;0.050000288;0.050000288;
0.050000288;0.050000288;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;
0.050000291;0.050000291;0.050000291;0.050000291;0.050000291;0.12522662;0.56461054;1.765399;2.5747502;3.2491634;
10.137098;10.383531;11.236498;12.623914;11.897495;11.359001;10.10604;9.4028997;8.9500294;7.8224449;
7.1870952;6.8038545;6.0115166;5.6350827;5.4167151;4.9597135;4.733252;4.5978904;4.303133;4.1503725;
4.056644;3.8456292;3.6963248;3.6269927;3.4665809;3.4331758;3.5380733;4.0721998;6.1498756;8.9429903;
8.6893806;9.2429161;9.3603897;8.5354614;8.0935373;7.7507772;6.6821618;6.091228;5.7177005;4.8824611;
4.4736156;4.240283;3.769047;3.5460997;3.4166281;3.1453335;3.0108078;2.9303958;2.7553213;2.6645989;
2.6089299;2.4835389;2.416091;2.3738112;2.2760055;2.226763;2.304698;2.6157296;3.2641659;5.0421796;
5.5126772;5.8126197;5.9819989;5.7672677;5.6051693;5.4003096;4.6878195;4.2891722;4.0379291;3.4824612;
3.2125814;3.0580099;2.7434421;2.5933847;2.505898;2.3218307;2.2302072;2.1753297;2.0555391;1.9932691;
1.9549788;1.8684577;1.821727;1.7923523;1.7241209;0.16056134;0.065036684;0.063711509;0.060057987;0.058388039;
0.056650743;0.053572446;0.051019873;0.050184;0.050055373;0.050036535;0.050029319;0.050024897;0.050024711;0.050024256;
0.050023377;0.050021973;0.050020013;0.050017565;0.050014794;0.050011907;0.050009128;0.050006654;0.050004605;0.050003029;
0.050001912;0.050001182;0.050000742;0.0500005;0.050000381;0.050000329;0.050000306;0.050000299;0.050000295;0.050000295;
0.050000295;0.050000295;0.050000295;0.050000295;0.050000295;       };
      };
      float_Data @[4] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Ca_Co6";
       desc="Ca.Co6";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.014838682;0.049058046;0.049540665;0.049890045;0.049988188;0.049997244;0.049997672;0.049997922;0.049998194;0.04999847;
0.049998734;0.049998965;0.049999151;0.049999289;0.049999382;0.049999442;0.049999475;0.04999949;0.049999498;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;
0.049999502;0.049999502;0.049999502;0.049999502;0.049999502;0.050579134;0.06971395;0.16572826;0.23800844;0.29333383;
0.78810114;0.99510908;1.1145822;1.6533518;2.0982463;2.4604604;2.8259168;2.7024064;2.6132588;2.4166682;
2.3157063;2.2546065;2.1231081;2.0577259;2.0190265;1.9365289;1.895018;1.8700229;1.8150529;1.7861733;
1.7682661;1.727212;1.6972972;1.6830792;1.6491736;1.6305232;1.6252571;1.6361166;1.7019928;1.8790487;
2.072247;2.2440715;2.4287887;3.1499636;3.7505426;3.9905314;3.8414571;3.6480827;3.5205441;3.2218225;
3.0587683;2.9576147;2.7321222;2.6147597;2.5432923;2.3853726;2.3028502;2.2521603;2.1382403;2.0772951;
2.0392609;1.9518642;1.9039019;1.8735136;1.8023142;1.7624251;1.7405628;1.7052242;1.7028375;1.7638518;
1.9068217;2.0060117;2.1358933;2.7370305;3.4746828;3.6435778;3.4564712;3.273845;3.1546319;2.8764768;
2.7250209;2.6312168;2.4225008;2.3140686;2.2481048;2.1025324;2.0265737;1.9799576;1.875324;1.8194299;
1.7845803;1.7046049;1.6607815;1.6330415;1.5681314;0.1298082;0.059878573;0.058481909;0.056237519;0.055297554;
0.054319184;0.052555833;0.050955493;0.050275881;0.050111111;0.05007733;0.050062146;0.050052609;0.050052211;0.050051231;
0.050049338;0.050046302;0.05004207;0.050036792;0.050030805;0.050024569;0.050018571;0.050013226;0.0500088;0.050005399;
0.050002985;0.050001401;0.050000452;0.049999934;0.049999673;0.049999561;0.049999516;0.049999498;0.049999494;0.04999949;
0.04999949;0.04999949;0.04999949;0.04999949;0.04999949;       };
      };
      float_Data @[5] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaM_AC1_Co10";
       desc="CaM-AC1.Co10";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;2.3633944e-05;8.131229e-05;0.0001622351;0.00022809659;0.00025774952;0.00026884745;0.00027736655;0.00028633705;0.00029537317;
0.00030384542;0.00031122853;0.00031718839;0.00032162058;0.00032463734;0.00032650406;0.00032754755;0.00032807159;0.00032830675;0.00032840064;
0.00032843379;0.00032844409;0.00032844691;0.00032844758;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;
0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844773;0.00032844776;0.00032845666;0.00032969005;0.00033630259;0.00035011649;
0.00057921297;0.0014397816;0.0026706557;0.0093911812;0.016547397;0.022508061;0.040356807;0.052277885;0.060443778;0.080880277;
0.092763044;0.1004056;0.11830133;0.12814505;0.13433489;0.14857045;0.15632489;0.1611955;0.17242636;0.17858155;
0.18246692;0.19149423;0.19808678;0.20119572;0.20847711;0.21253937;0.21513635;0.22139403;0.22515365;0.2279169;
0.23751208;0.24508905;0.25088111;0.26761413;0.27863017;0.28617167;0.30516255;0.31630179;0.32351151;0.34052601;
0.34993812;0.35586211;0.36946136;0.37683088;0.38143736;0.39196923;0.39767382;0.40124488;0.4094376;0.4138974;
0.41669884;0.42315763;0.42669371;0.42892265;0.43408522;0.43692604;0.43872312;0.44295684;0.44539034;0.44703165;
0.45195177;0.45558238;0.45828018;0.46595803;0.47282416;0.47642797;0.48571095;0.49129841;0.49497083;0.50381273;
0.50881201;0.51199925;0.51943642;0.52353626;0.52612305;0.53210342;0.5353781;0.53743941;0.54219693;0.54480052;
0.54643971;0.55022627;0.55230135;0.55360913;0.55663484;0.57981288;0.51244318;0.42809376;0.33318722;0.29720613;
0.25993672;0.18620208;0.095918447;0.031907976;0.007764657;0.0032123579;0.002445237;0.0021118128;0.0020981678;0.0020646313;
0.0019999149;0.0018965714;0.0017530468;0.0015748057;0.0013736768;0.0011653646;0.00096602162;0.00078907702;0.00064317294;0.00053149712;
0.00045236529;0.00040067034;0.00036969656;0.00035277827;0.00034441182;0.00034069482;0.00033922456;0.00033871364;0.00033856276;0.00033853014;
0.00033853139;0.00033854102;0.00033854242;0.00033854245;0.00033854254;       };
      };
      float_Data @[6] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaM_AC1_Co4";
       desc="CaM-AC1.Co4";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;2.2834156e-05;7.4706732e-05;0.00013498189;0.0001739486;0.00018891739;0.00019549887;0.00020154288;0.00020801539;0.00021453839;
0.00022065479;0.00022598504;0.00023028761;0.00023348707;0.00023566454;0.00023701177;0.00023776483;0.00023814297;0.00023831267;0.00023838039;
0.00023840432;0.00023841177;0.00023841379;0.00023841427;0.00023841437;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;
0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841439;0.00023841456;0.00023844684;0.00023861822;0.00023899556;
0.00024447264;0.00026597915;0.00030517881;0.00059806189;0.0010104263;0.001431162;0.0031435885;0.0046768934;0.0059030908;0.0095869629;
0.012139125;0.013946709;0.018715849;0.021675397;0.023663411;0.02861682;0.03154175;0.033461064;0.038127225;0.040825468;
0.042579345;0.046803217;0.050017141;0.051570017;0.055299297;0.057435628;0.058819406;0.062150188;0.064076342;0.065344594;
0.068624407;0.070771866;0.072316237;0.076743089;0.079933055;0.082356252;0.089564607;0.094572656;0.098121405;0.10745481;
0.11320278;0.11703647;0.12646629;0.13193631;0.13548009;0.14392745;0.14869317;0.15174043;0.15890545;0.1629006;
0.16544187;0.1713872;0.17468959;0.17678727;0.18169041;0.18441352;0.18614386;0.19019566;0.19245812;0.19390617;
0.19740078;0.19947901;0.20088139;0.20456547;0.20789355;0.2097721;0.21521707;0.21892679;0.22153437;0.22833918;
0.23250389;0.23527375;0.24206606;0.24599481;0.24853607;0.25458097;0.25798291;0.2601546;0.26524842;0.26807985;
0.26987702;0.27406797;0.27638638;0.27785504;0.28127387;0.3187772;0.28013563;0.2292368;0.17253256;0.15154868;
0.13020715;0.089433692;0.043027651;0.013688717;0.0039349818;0.0021657411;0.0017371832;0.0015066983;0.0014971494;0.0014736637;
0.001428285;0.0013556926;0.0012546546;0.001128845;0.00098644139;0.00083845406;0.00069635577;0.00056982087;0.00046519339;0.00038493064;
0.00032796102;0.00029069933;0.00026835516;0.00025614322;0.00025010057;0.00024741312;0.0002463471;0.00024597338;0.00024585935;0.00024583054;
0.00024582606;0.00024582763;0.00024582795;0.00024582798;0.00024582798;       };
      };
      float_Data @[7] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaMCa3";
       desc="CaMCa3.Co15";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;1.2680189e-05;1.5358235e-05;1.862203e-05;2.0864094e-05;2.1917791e-05;2.2572987e-05;2.3244522e-05;2.3968669e-05;2.4699055e-05;
2.5384319e-05;2.5981757e-05;2.6464118e-05;2.6822829e-05;2.7066941e-05;2.7217957e-05;2.7302356e-05;2.7344731e-05;2.7363747e-05;2.7371334e-05;
2.7374015e-05;2.7374848e-05;2.7375076e-05;2.737513e-05;2.7375141e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;
2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7375143e-05;2.7570321e-05;4.067539e-05;0.00079476199;0.0037625527;0.0089660995;
0.12303175;0.39865991;0.66828877;1.6876981;2.3418436;2.7011757;3.3017242;3.4764643;3.5322709;3.502883;
3.3959024;3.2992413;3.0102136;2.8261406;2.7050695;2.4191532;2.262742;2.1653361;1.9454238;1.8286536;
1.7565765;1.594456;1.4810169;1.4289947;1.3107899;1.2474442;1.2137054;1.1811616;1.2401518;1.4537237;
2.2176039;2.6466119;2.9364946;3.4832025;3.6519804;3.7198858;3.7283647;3.6431849;3.5590582;3.2825329;
3.0910699;2.9602659;2.6397092;2.4587748;2.3444166;2.0820262;1.9405904;1.8526545;1.6534188;1.5467774;
1.4805443;1.3302734;1.2495301;1.1992134;1.0844353;1.0223376;0.98558259;0.92381293;0.91437238;0.95942497;
1.2696775;1.4499375;1.5750475;1.8466995;1.9934031;2.0504632;2.1114256;2.096385;2.0691001;1.9558067;
1.8679264;1.8051862;1.6438444;1.5483981;1.4864904;1.3398184;1.2580669;1.2062821;1.0862373;1.0204451;
0.97905171;0.88367045;0.83161265;0.79890132;0.72355741;0.01691037;0.016894873;0.014390597;0.01087579;0.0095664132;
0.0082381889;0.0057160966;0.0028500485;0.0010098333;0.00037222003;0.00024087053;0.00019650931;0.00017042231;0.00016933898;0.00016667454;
0.000161527;0.00015329542;0.00014184623;0.00012760489;0.00011150658;9.4802803e-05;7.8790028e-05;6.455402e-05;5.2799805e-05;4.3793611e-05;
3.7406891e-05;3.3232191e-05;3.0729861e-05;2.9362716e-05;2.8686558e-05;2.8386161e-05;2.8267354e-05;2.8226086e-05;2.8213921e-05;2.8211312e-05;
2.821144e-05;2.8212249e-05;2.8212364e-05;2.8212367e-05;2.8212375e-05;       };
      };
      float_Data @[8] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="cAMP";
       desc="cAMP.Co13";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 4e-06;0.00046226193;0.0012392076;0.0019874938;0.0024291496;0.0026387125;0.0027708514;0.0028896655;0.0029961087;0.0030828281;
0.0031478903;0.0031940329;0.0032257026;0.0032468862;0.0032605091;0.0032687322;0.0032732901;0.0032755744;0.0032765998;0.0032770094;
0.0032771542;0.0032771991;0.0032772115;0.0032772142;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;
0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772149;0.0032772161;0.0032772245;0.0032772445;
0.0032775574;0.0032788413;0.0032811612;0.0032977662;0.0033199161;0.0033414476;0.0034213362;0.0034873309;0.0035386542;0.0036915282;
0.0037993037;0.0038775031;0.0040941001;0.0042378502;0.0043391902;0.0046111159;0.0047865799;0.0049085156;0.0052301316;0.0054342062;
0.0055747153;0.0059410064;0.006248821;0.0064074369;0.0068170843;0.0070714834;0.0072445204;0.0076888278;0.0079634665;0.0081501519;
0.0086341416;0.0089396518;0.0091505395;0.0097055649;0.010058505;0.010302189;0.010941165;0.011345322;0.01162355;0.012350094;
0.01280718;0.013120604;0.013933904;0.014441656;0.014788091;0.015680732;0.016233634;0.016609062;0.017570149;0.018161299;
0.018561054;0.01957893;0.02020148;0.0206211;0.021685094;0.022333013;0.022768646;0.02386979;0.024538305;0.024987131;
0.026121138;0.026810834;0.027274808;0.028450254;0.029407321;0.029891644;0.031120352;0.031870529;0.032376282;0.033660941;
0.034445774;0.034974825;0.036317486;0.037136424;0.037687734;0.039083868;0.039933152;0.040503893;0.041945662;0.04282026;
0.043407016;0.044885878;0.045780778;0.046380289;0.047888454;0.23579288;0.56068176;0.8078869;0.87347341;0.84950006;
0.8057574;0.660079;0.39299607;0.15593405;0.054573536;0.031118551;0.023403389;0.019284628;0.019121081;0.018721422;
0.01795977;0.016770698;0.015176753;0.013292862;0.011297128;0.0093780542;0.0076841847;0.0062982016;0.0052391239;0.0044809724;
0.0039737974;0.0036593007;0.0034805185;0.0033882135;0.0033451207;0.0033269464;0.0033200374;0.0033176884;0.0033169882;0.0033168171;
0.0033167952;0.0033168101;0.0033168127;0.0033168129;0.0033168131;       };
      };
      float_Data @[9] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="I1_active";
       desc="I1_active.Co14";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.0020000001;0.13929188;0.15302791;0.18096469;0.23307444;0.31742051;0.4344112;0.57454848;0.72194654;0.85916632;
0.97186136;1.0524824;1.1015522;1.1258163;1.1344302;1.1354125;1.1339142;1.1323352;1.1313406;1.1308594;
1.1306683;1.1306043;1.1305861;1.1305816;1.1305808;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;
1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305807;1.1305805;1.1305802;1.1305797;
1.1305774;1.1305736;1.1305687;1.1305392;1.1304989;1.1304579;1.1302912;1.130141;1.1300188;1.1296365;
1.1293577;1.1291531;1.1285845;1.1282102;1.1279491;1.1272637;1.1268345;1.1265426;1.1257969;1.1253417;
1.1250359;1.124266;1.1236472;1.1233375;1.1225641;1.1221013;1.1217936;1.1210257;1.1205639;1.1202523;
1.1194365;1.1189157;1.1185526;1.1175815;1.1169548;1.1165193;1.1153729;1.1146502;1.1141562;1.1128862;
1.1121053;1.1115788;1.1102476;1.1094416;1.1089023;1.10755;1.1067371;1.1061951;1.1048404;1.1040283;
1.1034875;1.1021371;1.1013281;1.1007894;1.0994444;1.0986384;1.0981014;1.0967587;1.0959513;1.0954107;
1.0940347;1.0931886;1.0926151;1.0911452;1.0899316;1.0893124;1.0877302;1.0867596;1.0861045;1.084443;
1.0834318;1.0827526;1.0810394;1.0800027;1.0793082;1.0775621;1.0765084;1.0758039;1.0740355;1.0729704;
1.0722587;1.0704744;1.0694008;1.0686839;1.0668877;0.86979419;0.75625914;0.68196905;0.60428804;0.57616681;
0.54793632;0.4941636;0.43459433;0.40629366;0.41836372;0.45178071;0.49062696;0.51740348;0.51853609;0.52133071;
0.52677077;0.53561151;0.5483163;0.56515497;0.58651608;0.61332816;0.64730477;0.69067121;0.74518061;0.81057376;
0.88313031;0.95548606;1.0187598;1.0663716;1.0968378;1.1133342;1.1208912;1.1238235;1.1247835;1.1250402;
1.1250854;1.1250763;1.125074;1.1250739;1.1250738;       };
      };
      float_Data @[10] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="AMPAR_Internal";
       desc="Internal_AMPAR.Co16";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 5.9998331;6.1120553;6.4522104;6.6535673;6.6838336;6.6230817;6.5291061;6.4265938;6.3300567;6.2492356;
6.1888695;6.1490569;6.1265163;6.1162562;6.1132169;6.1134481;6.1145639;6.1155224;6.1160903;6.1163578;
6.1164627;6.1164975;6.1165071;6.1165094;6.1165099;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;
6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;
6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;
6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;
6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;
6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;
6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165781;6.1165781;6.1165781;
6.1165781;6.1165781;6.1165781;6.1165781;6.1165781;6.1165781;6.1165781;6.1165781;6.1165781;6.1165776;
6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165776;6.1165771;6.1165771;6.1165771;
6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165771;6.1165767;6.1165767;6.1165767;
6.1165767;6.1165767;6.1165767;6.1165767;6.1165767;6.1165767;6.1165762;6.1165762;6.1165762;6.1165762;
6.1165762;6.1165757;6.1165757;6.1165757;6.1165757;6.1165752;6.1165752;6.1165752;6.1165752;6.1165752;
6.1165752;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;
6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165748;6.1165743;6.1165743;6.1165743;6.1165743;
6.1165743;6.1165743;6.1165743;6.1165743;6.1165743;6.1165743;6.1165738;6.1165738;6.1165738;6.1165738;
6.1165738;6.1165738;6.1165738;6.1165738;6.1165738;6.1164961;6.1168461;6.1177087;6.1193671;6.1201916;
6.121222;6.1237979;6.1285567;6.1355309;6.1452537;6.1583071;6.1739058;6.1853557;6.1858487;6.1870666;
6.1894431;6.1933103;6.1988392;6.2059984;6.2145491;6.224072;6.2339854;6.2435451;6.2518373;6.2578306;
6.2605324;6.2592297;6.2537198;6.2443943;6.2321348;6.21807;6.2033129;6.1887827;6.1751385;6.1627994;
6.1519957;6.142817;6.1417775;6.1417508;6.1416836;       };
      };
      float_Data @[11] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="AMPAR_Memb";
       desc="Memb_AMPAR.Co17";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.15975384;0.17974462;0.1364605;0.13418297;0.15814763;0.19290687;0.23092167;0.26714817;0.29787961;
0.32107452;0.3364529;0.34514338;0.34904441;0.35013646;0.34997433;0.3494927;0.34909317;0.34885928;0.34874982;
0.34870711;0.34869298;0.34868899;0.34868801;0.3486878;0.34861135;0.34861135;0.34861133;0.34861133;0.3486113;
0.3486113;0.34861127;0.34861127;0.34861124;0.34861124;0.34861121;0.34861118;0.34861118;0.34861118;0.34861115;
0.34861112;0.34861112;0.34861109;0.34861109;0.34861106;0.34861106;0.34861103;0.34861103;0.348611;0.34861097;
0.34861097;0.34861094;0.34861094;0.34861094;0.34861091;0.34861088;0.34861088;0.34861085;0.34861085;0.34861082;
0.34861082;0.34861079;0.34861079;0.34861076;0.34861073;0.34861073;0.3486107;0.3486107;0.34861067;0.34861067;
0.34861064;0.34861064;0.34861061;0.34861058;0.34861058;0.34861055;0.34861055;0.34861055;0.34861052;0.34861049;
0.34861049;0.34861046;0.34861046;0.34861043;0.34861043;0.3486104;0.3486104;0.34861037;0.34861037;0.34861034;
0.34861031;0.34861031;0.34861031;0.34861028;0.34861025;0.34861025;0.34861022;0.34861022;0.34861019;0.34861019;
0.34861016;0.34861016;0.34861013;0.34861013;0.3486101;0.34861007;0.34861007;0.34861007;0.34861004;0.34861001;
0.34861001;0.34860998;0.34860995;0.34860995;0.34860992;0.34860992;0.34860989;0.34860989;0.34860986;0.34860986;
0.34860983;0.34860981;0.34860981;0.34860978;0.34860975;0.34860975;0.34860972;0.34860969;0.34860969;0.34860966;
0.34860963;0.34860963;0.3486096;0.34860957;0.34860957;0.34860954;0.34860951;0.34860948;0.34860945;0.34860942;
0.34860942;0.34860939;0.34860936;0.34860933;0.3486093;0.34860927;0.34860924;0.34860921;0.34860918;0.34860915;
0.34860912;0.34860909;0.34860906;0.348609;0.34860897;0.34860894;0.34860888;0.34860885;0.34860882;0.34860876;
0.34860873;0.3486087;0.34860864;0.34860861;0.34860858;0.34860852;0.34860846;0.34860843;0.34860837;0.34860834;
0.34860831;0.34860823;0.34860817;0.34860814;0.34860808;0.34856728;0.34825423;0.34731427;0.34531978;0.34424418;
0.34289908;0.33938318;0.33261967;0.32337016;0.31386739;0.30589426;0.29983696;0.29651964;0.29639006;0.2960737;
0.29547131;0.29452908;0.29325259;0.29170045;0.28996035;0.28812313;0.28627694;0.28453565;0.28308833;0.282224;
0.28228903;0.28358322;0.28625327;0.2902419;0.29530519;0.30107725;0.30715683;0.31318814;0.31890482;0.32413271;
0.328771;0.33277279;0.33323038;0.33324221;0.33327177;       };
      };
      float_Data @[12] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="AMPAR_PSD";
       desc="PSD_AMPAR.Co18";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.57793695;0.28403482;0.15517421;0.13215698;0.15313615;0.18848237;0.2275836;0.26485786;0.29643947;
0.32025042;0.33603281;0.34496111;0.34898421;0.35012773;0.34998077;0.34949982;0.34909752;0.34886131;0.34875059;
0.34870738;0.34869304;0.34868899;0.34868801;0.3486878;0.34822577;0.34822577;0.34822574;0.34822571;0.34822571;
0.34822568;0.34822568;0.34822565;0.34822562;0.34822562;0.34822562;0.34822559;0.34822556;0.34822556;0.34822553;
0.34822553;0.3482255;0.34822547;0.34822547;0.34822547;0.34822544;0.34822541;0.34822541;0.34822538;0.34822538;
0.34822536;0.34822536;0.34822533;0.34822533;0.3482253;0.3482253;0.34822527;0.34822527;0.34822524;0.34822524;
0.34822521;0.34822521;0.34822518;0.34822515;0.34822515;0.34822515;0.34822512;0.34822509;0.34822509;0.34822506;
0.34822506;0.34822506;0.34822503;0.348225;0.348225;0.34822497;0.34822497;0.34822497;0.34822494;0.34822491;
0.34822491;0.34822488;0.34822488;0.34822488;0.34822485;0.34822482;0.34822482;0.34822479;0.34822479;0.34822479;
0.34822476;0.34822476;0.34822473;0.34822473;0.3482247;0.3482247;0.34822467;0.34822467;0.34822464;0.34822461;
0.34822461;0.34822458;0.34822455;0.34822452;0.34822449;0.34822443;0.3482244;0.34822437;0.34822431;0.34822425;
0.34822422;0.34822413;0.34822404;0.34822398;0.34822387;0.34822378;0.34822375;0.34822357;0.34822348;0.34822342;
0.34822324;0.34822312;0.34822303;0.34822282;0.3482227;0.34822261;0.34822237;0.3482222;0.34822211;0.34822181;
0.34822163;0.34822151;0.34822118;0.34822097;0.34822083;0.34822047;0.34822023;0.34822005;0.34821963;0.34821936;
0.34821919;0.34821871;0.34821841;0.3482182;0.34821767;0.34821734;0.3482171;0.3482165;0.34821615;0.34821591;
0.34821525;0.34821486;0.34821457;0.34821388;0.34821329;0.34821299;0.34821221;0.34821174;0.34821141;0.34821057;
0.34821007;0.34820971;0.34820881;0.34820825;0.34820786;0.34820691;0.34820631;0.34820589;0.34820485;0.34820423;
0.34820378;0.34820268;0.34820199;0.34820154;0.34820035;0.34759581;0.34258103;0.32878444;0.30735511;0.29897282;
0.2907559;0.2779735;0.27614522;0.30090547;0.33765718;0.35870332;0.35824051;0.35114133;0.35078442;0.34989172;
0.34811267;0.34514153;0.34080315;0.33513367;0.32836336;0.32080901;0.31279349;0.30466053;0.2968477;0.28993785;
0.28461719;0.28152597;0.28106028;0.28322417;0.28761643;0.29356492;0.30033502;0.30730057;0.31401473;0.320198;
0.3256948;0.33043468;0.33097616;0.33099017;0.33102515;       };
      };
      float_Data @[13] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="AMPAR_Trapped";
       desc="Trapped_AMPAR.Co19";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 3.9866891;2.3341558;1.1990041;0.701204;0.61170423;0.73314685;0.92844754;1.1410148;1.3393569;1.5036322;
1.6252494;1.7050933;1.7503765;1.7712365;1.7777059;1.7775731;1.7755647;1.7737745;1.7727003;1.7721916;
1.7719918;1.7719256;1.7719067;1.7719021;1.7719011;1.7724007;1.7724009;1.7724009;1.7724009;1.7724009;
1.772401;1.772401;1.772401;1.7724011;1.7724011;1.7724011;1.7724012;1.7724012;1.7724012;1.7724012;
1.7724013;1.7724013;1.7724013;1.7724015;1.7724015;1.7724015;1.7724015;1.7724016;1.7724016;1.7724016;
1.7724016;1.7724017;1.7724017;1.7724017;1.7724018;1.7724018;1.7724018;1.7724018;1.7724019;1.7724019;
1.7724019;1.7724019;1.772402;1.772402;1.772402;1.772402;1.7724022;1.7724022;1.7724022;1.7724023;
1.7724023;1.7724023;1.7724024;1.7724024;1.7724024;1.7724024;1.7724025;1.7724025;1.7724025;1.7724025;
1.7724026;1.7724026;1.7724026;1.7724026;1.7724028;1.7724028;1.7724028;1.7724029;1.7724029;1.7724029;
1.7724029;1.7724029;1.7724029;1.7724029;1.7724028;1.7724026;1.7724024;1.7724022;1.772402;1.7724017;
1.7724015;1.7724013;1.7724011;1.7724009;1.7724009;1.7724006;1.7724005;1.7724005;1.7724004;1.7724003;
1.7724003;1.7724001;1.7724001;1.7724001;1.7724001;1.7724001;1.7724001;1.7724001;1.7724003;1.7724003;
1.7724003;1.7724003;1.7724003;1.7724001;1.7724001;1.7724;1.7723999;1.7723999;1.7723999;1.7723999;
1.7723999;1.7723999;1.7723999;1.7724;1.7724;1.7724003;1.7724004;1.7724005;1.7724007;1.7724009;
1.772401;1.7724013;1.7724016;1.7724018;1.7724022;1.7724025;1.7724026;1.7724031;1.7724035;1.7724037;
1.7724043;1.7724046;1.7724048;1.7724054;1.7724059;1.7724061;1.7724067;1.7724071;1.7724073;1.772408;
1.7724084;1.7724086;1.7724094;1.7724099;1.7724102;1.7724111;1.7724116;1.7724119;1.7724129;1.7724135;
1.7724138;1.7724149;1.7724155;1.772416;1.7724171;1.7726481;1.7777936;1.7921827;1.8151795;1.8246028;
1.834195;1.850919;1.8609074;1.8452816;1.8076355;1.7662475;1.7285311;1.7030954;1.7019989;1.6992849;
1.6939672;1.6852373;1.6725655;1.655808;1.6353357;1.6121482;1.5878946;1.564754;1.5451857;1.5315762;
1.5258272;1.5289476;1.5407687;1.5599478;1.5843352;1.6115528;1.6394863;1.6665111;1.6915028;1.7137604;
1.7329212;1.7488854;1.7506701;1.7507161;1.750831;       };
      };
      float_Data @[14] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Nopen";
       desc="Nopen24";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0.019074386;0.053324208;0.12071466;0.15145789;0.16876501;
0.20291302;0.21802072;0.22606711;0.23975573;0.24403776;0.2455038;0.24531697;0.24319933;0.24117889;0.23461805;
0.22998527;0.22671983;0.2182278;0.21305366;0.20961542;0.20115791;0.19622277;0.19300292;0.18522225;0.18074638;
0.17784396;0.17087148;0.16557911;0.16302525;0.15689978;0.16063628;0.16545582;0.168299;0.16695312;0.16546124;
0.16046306;0.15692586;0.15444228;0.14799592;0.1440787;0.14148411;0.13513714;0.13146488;0.12908565;0.12340498;
0.12018973;0.11812802;0.11325457;0.11051509;0.10876137;0.10461416;0.10227657;0.1007762;0.09721268;0.09519314;
0.093892373;0.090788037;0.089019187;0.087876193;0.085136704;0.086343586;0.092291594;0.098050296;0.098469451;0.09816961;
0.096383765;0.094935328;0.093891755;0.091142744;0.088886358;0.087757252;0.084961675;0.083317883;0.082241058;0.07962773;
0.07811904;0.077139139;0.074780427;0.073426358;0.072548211;0.070434704;0.069219679;0.068430506;0.066526152;0.065427765;
0.064712815;0.062982537;0.061981265;0.061328262;0.059743825;0.0050577028;0.00076832803;0.00072134653;0.00052795059;0.00043587838;
0.00034040958;0.00017253922;3.9430917e-05;2.9032501e-06;5.1749826e-08;1.6687592e-10;7.1658947e-14;9.1101007e-17;6.68093e-17;3.076955e-17;
6.5266316e-18;4.6757687e-19;8.2970456e-21;2.6742918e-23;1.1481913e-26;4.8155132e-31;1.4467532e-36;2.2841165e-43;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;       };
      };
      float_Data @[15] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Nt0";
       desc="Nt021";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 1;0.86951292;0.868011;0.86707175;0.86684972;0.86684185;0.86684561;0.86684954;0.86685401;0.86685848;
0.86686277;0.86686653;0.86686951;0.86687171;0.8668732;0.8668741;0.86687464;0.86687487;0.86687499;0.86687499;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;
0.86687505;0.86687505;0.86687505;0.86687505;0.86687505;0.86687446;0.86676306;0.86198664;0.84923184;0.83215117;
0.7261017;0.63039619;0.59404474;0.55334044;0.53361213;0.52038908;0.48805168;0.4695811;0.45774856;0.42998511;
0.41461763;0.40490964;0.38242936;0.37007388;0.36226475;0.34408936;0.33401412;0.32760805;0.31257537;0.30416667;
0.29879248;0.28609908;0.27664071;0.27212405;0.26140329;0.25571933;0.25190705;0.24231115;0.23651332;0.23227997;
0.22016063;0.21256734;0.20743728;0.19471867;0.18739577;0.18267748;0.17152822;0.16532837;0.16140692;0.15234269;
0.14739473;0.14428802;0.13713548;0.13322441;0.13075939;0.1250442;0.12189092;0.11989218;0.11522304;0.11262563;
0.11097146;0.10708426;0.10490841;0.10351796;0.10023666;0.098464884;0.097364746;0.094456911;0.092712276;0.091489054;
0.087912746;0.085666366;0.084145553;0.080323853;0.077336177;0.07587409;0.072367333;0.070395343;0.069142297;0.066234119;
0.064641647;0.06364049;0.061333325;0.06007158;0.059276748;0.057436697;0.056424133;0.055783715;0.054293282;0.05346854;
0.052945346;0.051723607;0.051045522;0.050614826;0.049608212;0.27088043;0.6921159;0.7325452;0.77186811;0.78557092;
0.79901403;0.82296282;0.84680367;0.85969877;0.86353707;0.86406624;0.86401892;0.86394888;0.86394572;0.8639378;
0.86392218;0.86389619;0.86385822;0.86380774;0.86374629;0.86367738;0.8636061;0.86353809;0.86347848;0.86343026;
0.86339444;0.86336988;0.86335427;0.86334485;0.8633393;0.86333579;0.86333323;0.86333102;0.86332893;0.86332679;
0.86332464;0.8633225;0.86332226;0.86332226;0.8633222;       };
      };
      float_Data @[16] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Nt1";
       desc="Nt122";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.12489057;0.12633459;0.12723404;0.12744664;0.12745419;0.1274506;0.12744679;0.12744255;0.12743823;
0.12743413;0.12743056;0.1274277;0.12742558;0.12742415;0.12742329;0.12742281;0.12742257;0.12742247;0.12742242;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;
0.12742241;0.12742241;0.12742241;0.12742241;0.12742241;0.12756796;0.12771475;0.12918891;0.13458173;0.14253217;
0.1904152;0.23447363;0.25067165;0.26399052;0.27110395;0.27720836;0.29570895;0.3084428;0.31738719;0.34100342;
0.35583448;0.36588359;0.39108464;0.40597805;0.41572776;0.43929839;0.45281827;0.46155608;0.48242113;0.49427411;
0.50190508;0.52006918;0.53370768;0.54024601;0.55582279;0.56490588;0.57078344;0.58238536;0.58449531;0.57751089;
0.56002545;0.55234861;0.54756838;0.54175711;0.54262799;0.54445517;0.55385661;0.56218547;0.56857258;0.58666056;
0.59840512;0.60638082;0.62623763;0.63781661;0.64531928;0.66316754;0.67319924;0.67959541;0.69457179;0.70288181;
0.70815229;0.72043747;0.72723639;0.7315473;0.74160594;0.74735636;0.75127411;0.75833958;0.75987387;0.75598824;
0.73672622;0.72733796;0.72109032;0.70874453;0.70304334;0.70134526;0.70205867;0.70534301;0.70844859;0.71859086;
0.7257458;0.73074991;0.74353731;0.75113922;0.75610262;0.76798636;0.77469146;0.77896941;0.78897631;0.79451323;
0.79801571;0.80614239;0.81061202;0.81343383;0.81997585;0.70507789;0.29709637;0.25709382;0.21875697;0.20549655;
0.19252959;0.169503;0.14664477;0.1342936;0.13061742;0.13011064;0.13015592;0.13022298;0.13022603;0.13023362;
0.13024859;0.13027343;0.13030982;0.13035814;0.13041699;0.13048299;0.13055125;0.13061632;0.13067344;0.13071959;
0.1307539;0.13077742;0.13079238;0.13080135;0.13080667;0.13081004;0.13081248;0.1308146;0.13081662;0.13081865;
0.13082069;0.13082275;0.130823;0.130823;0.13082303;       };
      };
      float_Data @[17] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="Nt2";
       desc="Nt223";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.0055965194;0.0056543765;0.0056941952;0.005703636;0.0057039796;0.0057038213;0.0057036513;0.0057034632;0.0057032709;
0.0057030888;0.00570293;0.005702802;0.0057027079;0.0057026451;0.0057026064;0.005702585;0.0057025743;0.0057025696;0.0057025678;
0.0057025673;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;
0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0057025668;0.0055575743;0.0055222199;0.0088244323;0.016186431;0.025316635;
0.083483078;0.13513017;0.15528361;0.18266904;0.1952839;0.20240255;0.21623938;0.22197607;0.22486426;0.22901148;
0.22954787;0.22920677;0.226486;0.22394808;0.22200747;0.21661225;0.21316761;0.21083587;0.20500347;0.20155922;
0.19930243;0.19383173;0.18965162;0.18762992;0.1827739;0.17937478;0.17730953;0.1753035;0.17899136;0.19020912;
0.21981393;0.23508404;0.24499434;0.2635242;0.26997623;0.27286732;0.27461517;0.27248615;0.27002048;0.26099673;
0.25420013;0.24933116;0.23662692;0.22895895;0.22392136;0.21178827;0.20490985;0.20051239;0.19020517;0.18449257;
0.18087626;0.17247829;0.16785516;0.16493475;0.15815739;0.15417875;0.15136117;0.14720348;0.14741383;0.15252271;
0.17536104;0.18699569;0.19476412;0.21093161;0.21962048;0.22278063;0.22557397;0.22426163;0.22240911;0.21517503;
0.20961253;0.20560959;0.19512938;0.18878917;0.18462066;0.17457694;0.16888438;0.1652469;0.15673041;0.15201822;
0.14903896;0.14213403;0.13834244;0.13595136;0.13041596;0.024041662;0.010787757;0.010360984;0.0093748923;0.0089325579;
0.0084563959;0.0075342064;0.0065515605;0.0060076294;0.0058454927;0.0058231498;0.0058251503;0.0058281156;0.0058282507;0.0058285864;
0.0058292495;0.0058303494;0.0058319615;0.0058341031;0.0058367127;0.0058396417;0.0058426722;0.0058455626;0.0058481004;0.0058501516;
0.0058516772;0.005852723;0.005853388;0.005853788;0.005854025;0.0058541745;0.0058542844;0.0058543789;0.0058544693;0.0058545601;
0.0058546513;0.0058547431;0.0058547547;0.0058547552;0.0058547561;       };
      };
      float_Data @[18] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="PP1_active_Co1";
       desc="PP1_active.Co1";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.0020000001;0.066766568;0.062003069;0.05284084;0.04141812;0.030685181;0.022578219;0.017154651;0.013696455;0.01153296;
0.010208892;0.0094341468;0.0090176454;0.0088249901;0.0087585542;0.0087510338;0.0087624872;0.0087745944;0.0087822387;0.0087859426;
0.0087874141;0.0087879067;0.0087880474;0.0087880809;0.0087880883;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;0.0087880893;
0.0087880893;0.0087880893;0.0087880893;0.0087880902;0.0087880911;0.0087880921;0.0087880986;0.008788107;0.0087881153;0.0087881489;
0.0087881824;0.0087882122;0.0087883165;0.008788405;0.0087884767;0.0087887067;0.0087888846;0.0087890215;0.008789435;0.0087897349;
0.0087899584;0.0087906029;0.0087912139;0.0087915519;0.0087924972;0.0087931352;0.0087935915;0.0087948404;0.0087956656;0.0087962486;
0.0087978207;0.0087988451;0.0087995622;0.0088014798;0.0088027194;0.0088035837;0.0088058896;0.008807377;0.0088084154;0.0088111823;
0.0088129677;0.0088142119;0.0088175228;0.0088196509;0.0088211317;0.0088250507;0.0088275559;0.008829291;0.0088338591;0.0088367593;
0.0088387588;0.008843991;0.0088472907;0.0088495556;0.008855449;0.0088591408;0.0088616665;0.0088682026;0.0088722734;0.0088750487;
0.0088822003;0.0088866334;0.0088896481;0.0088973874;0.0089037875;0.0089070573;0.0089154365;0.0089206072;0.0089241145;0.0089330981;
0.0089386366;0.0089423927;0.0089520011;0.0089579187;0.0089619262;0.0089721689;0.0089784646;0.0089827245;0.0089935921;0.0090002585;
0.0090047633;0.0090162344;0.0090232566;0.0090279952;0.0090400381;0.011150245;0.013003105;0.014409742;0.016237816;0.017020049;
0.017885147;0.019805698;0.022491926;0.024060648;0.023397814;0.021704787;0.020019086;0.019002127;0.01896139;0.018861623;
0.018670402;0.018367812;0.017949805;0.017424336;0.016800538;0.016078172;0.015247494;0.014304273;0.013272285;0.012215062;
0.011223135;0.010382372;0.0097440453;0.0093131959;0.0090569491;0.0089240102;0.0088644177;0.008841523;0.0088340715;0.0088321008;
0.0088317767;0.0088318735;0.008831895;0.0088318959;0.0088318968;       };
      };
      float_Data @[19] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="PP1_active_Co7";
       desc="PP1_active.Co7";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.0020000001;0.40044919;0.37243071;0.31736344;0.24872522;0.18425013;0.1355619;0.10299447;0.082230411;0.069240682;
0.06129108;0.056639627;0.054139026;0.052982364;0.052583493;0.052538335;0.0526071;0.052679792;0.052725684;0.05274792;
0.052756757;0.052759714;0.052760556;0.052760761;0.052760802;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;0.052760806;
0.052760813;0.052760821;0.052760828;0.052760888;0.052760974;0.052761074;0.052761555;0.05276208;0.052762561;0.052764334;
0.052765861;0.052767102;0.052771036;0.052774012;0.052776262;0.052782852;0.052787472;0.052790828;0.052800186;0.052806452;
0.052810896;0.052822903;0.052833408;0.052838948;0.052853599;0.05286292;0.052869342;0.05288611;0.052896637;0.052903842;
0.052922551;0.052934274;0.052942321;0.052963298;0.052976534;0.05298565;0.053009529;0.053024638;0.053035051;0.053062286;
0.053079464;0.053091262;0.053121958;0.053141192;0.053154342;0.05318835;0.053209506;0.053223915;0.05326096;0.05328387;
0.05329942;0.053339213;0.053363707;0.053380281;0.053422555;0.053448476;0.053465981;0.053510502;0.053537723;0.053556081;
0.05360271;0.053631213;0.053650443;0.053699359;0.053739399;0.053759735;0.053811535;0.053843293;0.053864755;0.053919438;
0.053952955;0.053975597;0.054033238;0.054068532;0.054092351;0.054152913;0.054189935;0.054214898;0.054278273;0.054316953;
0.054343008;0.054409064;0.05444932;0.05447641;0.054545008;0.066830143;0.078037776;0.086491004;0.097464748;0.10215937;
0.10735366;0.11888713;0.13502318;0.14445294;0.14047784;0.13031261;0.12019091;0.11408477;0.11384018;0.11324115;
0.11209303;0.11027622;0.10776646;0.1046115;0.10086621;0.096529178;0.091541871;0.085878901;0.079682998;0.07333561;
0.067380272;0.062332511;0.058500141;0.055913422;0.054374982;0.053576846;0.053219069;0.053081617;0.05303688;0.053025045;
0.0530231;0.053023681;0.053023808;0.053023811;0.053023823;       };
      };
      float_Data @[20] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaMKII_active_Co11";
       desc="activeCaMKII.Co11";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.19384055;0.71482688;1.2334721;1.4706798;1.5169071;1.5202973;1.5204531;1.5205394;1.5206248;
1.5207042;1.5207732;1.5208291;1.5208709;1.5208995;1.5209175;1.5209277;1.5209328;1.5209351;1.520936;
1.5209363;1.5209364;1.5209365;1.5209365;1.5209365;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;
1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199124;1.5199038;1.5197895;1.519667;1.5196105;
1.5202254;1.5267035;1.5373728;1.5990843;1.6666191;1.7234055;1.8945379;2.0092177;2.0878386;2.284704;
2.3992155;2.4728827;2.6454556;2.7404516;2.8002269;2.9378858;3.0130286;3.0603039;3.1696131;3.2297454;
3.2678044;3.3565953;3.4218268;3.4527237;3.5254834;3.5663505;3.5925744;3.6559558;3.6939719;3.7214513;
3.8152704;3.8889534;3.9451079;4.1071596;4.2139225;4.2870507;4.4715419;4.5801139;4.6505823;4.8177238;
4.9108539;4.9697866;5.1062427;5.1810389;5.2281656;5.3372283;5.3972211;5.4351687;5.5235763;5.5726261;
5.603826;5.6770806;5.7180862;5.7443099;5.8063245;5.8413157;5.8638039;5.9177713;5.949244;5.9703498;
6.0305381;6.0731773;6.1042519;6.1909566;6.2674451;6.3073936;6.4102368;6.4724088;6.5134912;6.6134586;
6.6708655;6.7078881;6.795857;6.8454943;6.8773136;6.9526296;6.9950929;7.0223422;7.0870252;7.1236525;
7.1472311;7.2034678;7.2354951;7.2561879;7.3057914;10.191245;11.457962;10.250279;8.1892242;7.4049072;
6.6030984;5.0693402;3.3113821;2.1786001;1.7927684;1.724937;1.7127683;1.7070355;1.7067976;1.7062116;
1.7050759;1.7032478;1.7006732;1.6974008;1.6935679;1.6893632;1.6849822;1.6805916;1.6763116;1.6722082;
1.6682924;1.6645263;1.6608371;1.6571364;1.6533433;1.6493999;1.6452782;1.6409791;1.6365241;1.6319485;
1.6272948;1.6226094;1.6220202;1.6220047;1.6219662;       };
      };
      float_Data @[21] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaMKII_active_Co5";
       desc="activeCaMKII.Co5";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.059628744;0.11945115;0.17077224;0.19419861;0.19876567;0.19910215;0.1991193;0.19912969;0.19913998;
0.19914953;0.19915785;0.19916457;0.19916961;0.19917308;0.19917524;0.19917646;0.19917707;0.19917735;0.19917747;
0.1991775;0.19917752;0.19917752;0.19917752;0.19917752;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;
0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.1994331;0.19943309;0.19943266;0.19943312;0.19943544;
0.19947816;0.19966033;0.20000838;0.20269132;0.20652688;0.21046759;0.22662918;0.24120851;0.25290924;0.28817266;
0.31265071;0.32999718;0.37576824;0.4041566;0.42321292;0.47063124;0.49857828;0.51689154;0.56131828;0.58693868;
0.60356182;0.64348787;0.67375565;0.68834245;0.72326428;0.74319506;0.75607371;0.78696209;0.8047471;0.81641757;
0.84646565;0.8661139;0.88024414;0.92077446;0.95001447;0.97225118;1.0386423;1.0849279;1.117761;1.2041219;
1.2572478;1.2926338;1.3794515;1.4296303;1.4620528;1.5390186;1.5822101;1.6097275;1.6740805;1.7097225;
1.7322924;1.7847481;1.8136491;1.8319086;1.8742546;1.8975468;1.9122535;1.9463723;1.9652114;1.9771829;
2.0058177;2.0227478;2.0341563;2.0641766;2.0915093;2.1070788;2.1528068;2.1842961;2.2065156;2.2646337;
2.3002007;2.3238227;2.3815506;2.4147594;2.4361489;2.486676;2.5148506;2.5327203;2.5742216;2.5969996;
2.6113331;2.6443276;2.6622832;2.673532;2.6992898;2.3694184;1.5158045;1.1311125;0.89069498;0.80895931;
0.72628909;0.56809926;0.38625818;0.26879087;0.22869238;0.22155811;0.22019082;0.21952829;0.21950085;0.21943334;
0.21930264;0.21909276;0.21879828;0.21842606;0.2179935;0.2175238;0.21704052;0.21656328;0.21610554;0.21567398;
0.21526885;0.21488488;0.21451312;0.21414332;0.21376623;0.21337527;0.21296716;0.21254167;0.21210086;0.21164814;
0.21118769;0.2107241;0.21066581;0.21066429;0.21066047;       };
      };
      float_Data @[22] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaN_active_Co3";
       desc="activeCaN.Co3";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;1.5613216e-06;4.3461852e-05;0.0002413436;0.0006015611;0.0010857239;0.0017028498;0.0024305284;0.0032232464;0.0040248004;
0.0047781891;0.0054356498;0.0059664999;0.0063610035;0.0066291797;0.0067948811;0.0068873856;0.0069337874;0.006954595;0.0069628945;
0.0069658253;0.0069667371;0.0069669858;0.0069670444;0.006967057;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;
0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670575;0.0069670584;0.0069674784;0.0069768927;0.0069907298;0.0070043541;
0.0070767803;0.0071853716;0.0073020668;0.007928974;0.0087202117;0.0095135327;0.012737466;0.015620342;0.017944137;0.02508059;
0.030173384;0.033854712;0.04386308;0.050291743;0.054705873;0.066051103;0.072992742;0.077650234;0.089328982;0.096323937;
0.10097041;0.11249837;0.12160566;0.12611495;0.13724655;0.14382286;0.14816529;0.15891781;0.16535437;0.16974764;
0.181558;0.18931377;0.19491459;0.21113193;0.22296733;0.23192373;0.25715843;0.27364069;0.28500259;0.31412712;
0.33173305;0.34339672;0.37196416;0.38853431;0.39929631;0.42511374;0.43982857;0.44931215;0.47189626;0.48469782;
0.49293211;0.51251608;0.52361417;0.5307557;0.54775876;0.55741;0.56362957;0.57852542;0.58708566;0.59271193;
0.60709107;0.61593121;0.62205046;0.63901955;0.65553689;0.66495961;0.68989778;0.70511925;0.71524882;0.74019486;
0.75472254;0.76416481;0.78678626;0.79963005;0.8078779;0.82739502;0.83836395;0.8453778;0.86191297;0.87118381;
0.87710857;0.89107847;0.89891851;0.90393353;0.91577697;1.0595728;0.86556768;0.69932491;0.54371011;0.49313331;
0.44566369;0.36536613;0.29127094;0.25114316;0.22569135;0.19824252;0.16745833;0.14545766;0.14452033;0.14220792;
0.13771208;0.1304453;0.12017889;0.107145;0.092048526;0.075962141;0.060122129;0.045682184;0.033496901;0.023994192;
0.017164957;0.012658843;0.0099410573;0.0084504476;0.0077114138;0.0073823561;0.007251671;0.0072057052;0.0071915169;0.0071877493;
0.0071869562;0.0071868994;0.0071869078;0.0071869083;0.0071869087;       };
      };
      float_Data @[23] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="CaN_active_Co9";
       desc="activeCaN.Co9";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;1.5599226e-06;4.3540891e-05;0.00024176323;0.00060226576;0.0010865233;0.001703686;0.0024313971;0.0032241496;0.0040257378;
0.0047791586;0.0054366468;0.0059675188;0.0063620387;0.006630226;0.0067959344;0.0068884431;0.0069348468;0.0069556548;0.0069639548;
0.0069668856;0.0069677974;0.0069680461;0.0069681052;0.0069681173;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;
0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069681183;0.0069684382;0.0069832541;0.0071321428;0.0073101283;0.0074781971;
0.0086566256;0.010753366;0.013285397;0.027181601;0.042730518;0.05613954;0.098082811;0.12702064;0.14707716;0.19747569;
0.22654648;0.2450373;0.28747258;0.31019461;0.32422242;0.355625;0.37216878;0.38233539;0.40505284;0.41703495;
0.42441294;0.44095641;0.45246625;0.45771357;0.4695181;0.47580165;0.47984761;0.49046564;0.49866202;0.50843203;
0.54206246;0.56619388;0.58429968;0.63304919;0.66261172;0.68207097;0.72782606;0.75251377;0.76765454;0.80069125;
0.81730473;0.82715327;0.84798652;0.85823548;0.86426449;0.87693352;0.88313001;0.88676339;0.89435977;0.8980456;
0.90019214;0.90462327;0.9067288;0.90793371;0.91034174;0.91142601;0.91210872;0.91450721;0.91693187;0.92066312;
0.93802315;0.94975728;0.95848447;0.98186105;1.0008708;1.0103852;1.0326494;1.0446414;1.0520122;1.0682018;
1.0764503;1.0813959;1.0920522;1.0974243;1.1006365;1.1075469;1.1110274;1.1131074;1.1175767;1.1198215;
1.1211593;1.1240165;1.1254369;1.126276;1.1280392;1.0685437;0.86789185;0.70082301;0.54465032;0.49392244;
0.44626817;0.3656719;0.29135525;0.25115922;0.2256954;0.19824538;0.16746175;0.14546134;0.14452402;0.14221162;
0.1377158;0.13044904;0.12018263;0.10714865;0.09205202;0.075965375;0.060125001;0.045684662;0.033498988;0.023995945;
0.017166451;0.012660159;0.0099422634;0.0084515912;0.0077125276;0.0073834565;0.0072527658;0.0072067981;0.0071926094;0.0071888417;
0.0071880487;0.0071879919;0.0071880003;0.0071880007;0.0071880012;       };
      };
      float_Data @[24] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="PKA_active_Co2";
       desc="activePKA.Co2";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.049673915;0.040283151;0.040364861;0.04054958;0.040853042;0.04129;0.041854165;0.042512901;0.043208163;0.04386647;
0.044418287;0.044820331;0.04506845;0.045192372;0.04523683;0.045242231;0.045234833;0.045226913;0.045221902;0.045219477;
0.045218512;0.045218188;0.045218095;0.045218073;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218065;0.045218065;0.045218065;0.045218065;0.045218065;0.045218065;0.045218062;0.045218062;0.045218062;
0.045218058;0.045218054;0.045218054;0.04521805;0.04521805;0.045218047;0.045218043;0.045218039;0.045218036;0.045218032;
0.045218028;0.045218024;0.045218017;0.04521801;0.045218006;0.045217995;0.045217987;0.045217983;0.045217972;0.045217961;
0.045217957;0.045217939;0.045217931;0.045217924;0.045217901;0.04521789;0.045217879;0.045217857;0.045217842;0.045217831;
0.045217801;0.045217782;0.045217771;0.045217738;0.045217708;0.045217693;0.045217652;0.04521763;0.045217611;0.045217566;
0.045217536;0.045217514;0.045217462;0.045217428;0.045217406;0.045217346;0.045217309;0.045217283;0.045217212;0.045217171;
0.045217142;0.045217067;0.045217019;0.045216985;0.045216899;0.045127727;0.044589899;0.044005319;0.044696968;0.045917373;
0.048095588;0.056256983;0.07527253;0.09496887;0.10275445;0.10130669;0.095162347;0.089172527;0.088893391;0.088197172;
0.086813681;0.084499292;0.081082731;0.076541781;0.071082003;0.065153755;0.059358835;0.054275181;0.050295647;0.047555514;
0.045949966;0.04520715;0.044992309;0.04501529;0.045095209;0.0451576;0.04519086;0.045204729;0.045209453;0.045210756;
0.045211013;0.045210999;0.045210991;0.045210991;0.045210991;       };
      };
      float_Data @[25] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="PKA_active_Co8";
       desc="activePKA.Co8";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.049673911;0.040283341;0.040364802;0.040549524;0.04085299;0.041289952;0.041854121;0.042512864;0.043208133;0.043866452;
0.044418272;0.044820324;0.045068447;0.045192372;0.045236826;0.045242231;0.045234833;0.045226913;0.045221902;0.045219477;
0.045218512;0.045218188;0.045218095;0.045218073;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218065;0.045218065;0.045218065;0.045218065;0.045218065;
0.045218062;0.045218062;0.045218058;0.045218058;0.045218054;0.04521805;0.04521805;0.045218047;0.045218043;0.045218039;
0.045218036;0.045218028;0.045218028;0.045218021;0.045218013;0.04521801;0.045218002;0.045217995;0.045217991;0.045217976;
0.045217969;0.045217965;0.04521795;0.045217939;0.045217935;0.045217916;0.045217905;0.045217898;0.045217875;0.045217864;
0.045217853;0.045217831;0.045217812;0.045217805;0.045217775;0.045217756;0.045217745;0.045217711;0.045217689;0.045217674;
0.045217637;0.045217615;0.0452176;0.045217555;0.045217518;0.045217499;0.045217451;0.045217421;0.045217399;0.045217346;
0.045217309;0.045217287;0.045217227;0.045217186;0.04521716;0.045217093;0.045217048;0.045217019;0.045216944;0.045216896;
0.045216866;0.04521678;0.045216728;0.045216691;0.045216601;0.045128111;0.044590421;0.04400548;0.044696145;0.045914654;
0.048091616;0.056251034;0.075266607;0.094965063;0.10275184;0.10130468;0.095160842;0.089171372;0.088892251;0.088196062;
0.086812645;0.084498368;0.081081957;0.076541178;0.071081579;0.065153487;0.059358682;0.054275103;0.050295614;0.047555499;
0.045949958;0.045207147;0.044992305;0.045015287;0.045095205;0.0451576;0.04519086;0.045204729;0.045209453;0.045210756;
0.045211013;0.045210999;0.045210991;0.045210991;0.045210991;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[2] {
     name="UReadOne";
     desc="read in one col of data";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0;0.2;0.69999999;1.7;3.4000001;6;9.6999998;14.7;21.200001;29.4;
39.5;51.700001;66.199997;83.199997;102.9;125.5;151.2;180.2;212.7;248.89999;
289;333.20001;381.70001;434.70001;492.39999;501.00058;501.00079;501.00128;501.00159;501.00177;
501.00229;501.00259;501.00278;501.00327;501.00357;501.00378;501.00427;501.00458;501.00479;501.00528;
501.00558;501.00577;501.00629;501.00659;501.00677;501.00729;501.00757;501.00778;501.00827;501.00858;
501.00879;501.00928;501.00958;501.00977;501.01028;501.01059;501.01077;501.01129;501.01157;501.01178;
501.01227;501.01257;501.01279;501.01328;501.01358;501.01379;501.01428;501.01468;501.01489;501.01538;
501.01569;501.01587;501.01639;501.01669;501.01688;501.0174;501.01767;501.01788;501.01837;501.01868;
501.01889;501.01938;501.01968;501.01987;501.02039;501.02069;501.02087;501.02139;501.02167;501.02188;
501.02237;501.02267;501.02289;501.02338;501.02368;501.02386;501.02438;501.02469;501.02487;501.02539;
501.02567;501.02588;501.02637;501.02667;501.02689;501.02737;501.02768;501.02789;501.02838;501.02869;
501.02887;501.02939;501.02979;501.02997;501.03049;501.03079;501.03098;501.03149;501.03177;501.03198;
501.03247;501.03278;501.03299;501.03348;501.03378;501.03397;501.03448;501.03479;501.03497;501.03549;
501.03577;501.03598;501.03647;501.03677;501.03699;501.03748;501.03778;501.03799;501.03848;501.03879;
501.03897;501.03949;501.03979;501.03998;501.04047;501.04077;501.04099;501.04147;501.04178;501.04199;
501.04248;501.04279;501.04297;501.04349;501.04388;501.04407;501.04459;501.04489;501.04507;501.04559;
501.04587;501.04608;501.04657;501.04688;501.04709;501.04758;501.04788;501.04807;501.04858;501.04889;
501.04907;501.04959;501.04987;501.05008;501.05057;501.12183;501.29184;501.55185;501.92184;502.09183;
502.29184;502.79184;503.79184;505.49185;508.09183;511.79184;516.79187;521.09186;521.29187;521.79187;
522.79187;524.49182;527.09186;530.79187;535.79187;542.29187;550.49182;560.59186;572.79187;587.29187;
604.29187;623.99182;646.59186;672.29187;701.29187;733.79187;769.99182;810.09186;854.29187;902.79187;
955.79187;1013.4918;1021.0919;1021.2919;1021.7919;       };
      };
      float_Data @[1] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="val";
       desc="value";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [215] 0.049673911;0.040283341;0.040364802;0.040549524;0.04085299;0.041289952;0.041854121;0.042512864;0.043208133;0.043866452;
0.044418272;0.044820324;0.045068447;0.045192372;0.045236826;0.045242231;0.045234833;0.045226913;0.045221902;0.045219477;
0.045218512;0.045218188;0.045218095;0.045218073;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;
0.045218069;0.045218069;0.045218069;0.045218069;0.045218069;0.045218065;0.045218065;0.045218065;0.045218065;0.045218065;
0.045218062;0.045218062;0.045218058;0.045218058;0.045218054;0.04521805;0.04521805;0.045218047;0.045218043;0.045218039;
0.045218036;0.045218028;0.045218028;0.045218021;0.045218013;0.04521801;0.045218002;0.045217995;0.045217991;0.045217976;
0.045217969;0.045217965;0.04521795;0.045217939;0.045217935;0.045217916;0.045217905;0.045217898;0.045217875;0.045217864;
0.045217853;0.045217831;0.045217812;0.045217805;0.045217775;0.045217756;0.045217745;0.045217711;0.045217689;0.045217674;
0.045217637;0.045217615;0.0452176;0.045217555;0.045217518;0.045217499;0.045217451;0.045217421;0.045217399;0.045217346;
0.045217309;0.045217287;0.045217227;0.045217186;0.04521716;0.045217093;0.045217048;0.045217019;0.045216944;0.045216896;
0.045216866;0.04521678;0.045216728;0.045216691;0.045216601;0.045128111;0.044590421;0.04400548;0.044696145;0.045914654;
0.048091616;0.056251034;0.075266607;0.094965063;0.10275184;0.10130468;0.095160842;0.089171372;0.088892251;0.088196062;
0.086812645;0.084498368;0.081081957;0.076541178;0.071081579;0.065153487;0.059358682;0.054275103;0.050295614;0.047555499;
0.045949958;0.045207147;0.044992305;0.045015287;0.045095205;0.0451576;0.04519086;0.045204729;0.045209453;0.045210756;
0.045211013;0.045210999;0.045210991;0.045210991;0.045210991;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
   };
   types {
    name=;
    el_typ=ProgType;
    el_def=0;
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="urakubo_sim_dir";
     var_type=T_String;
     string_val="/home/oreilly/svn_sims/leabra/urakubo_ltp/";
     objs_ptr=0;
     flags=NULL_CHECK|EDIT_VAL;
     reference=0;
     desc="path to where the urakubo sims live";
     init_from=NULL;
    };
    ProgVar @[1] {
     name="data_dir";
     var_type=T_String;
     string_val="dur50shz100rhz100_off1_rep1";
     objs_ptr=0;
     flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="data dir to read";
     init_from=NULL;
    };
    ProgVar @[2] {
     name="full_path";
     var_type=T_String;
     string_val="/Users/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act_sr/dur50shz100rhz100_off1_rep1";
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="data dir to read";
     init_from=NULL;
    };
    ProgVar @[3] {
     name="UrakuboLog";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[5].objs[0]$241$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[4] {
     name="UReadOne";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[5].objs[2]$242$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[5] {
     name="i";
     var_type=T_Int;
     int_val=26;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[6] {
     name="dsc";
     var_type=T_String;
     string_val="activePKA.Co8";
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[7] {
     name="cur_col";
     var_type=T_Object;
     object_type=DataColTp;
     object_val=.projects[0].programs[5].objs[0].data[25]$243$;
     objs_ptr=0;
     flags=USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[8] {
     name="UrGraph";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[5].objs[1]$244$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    MethodCall @[0] {
     desc=;
     flags=;
     result_var=NULL;
     obj=.projects[0].programs[5].vars[4]$245$;
     method=DataTable::LoadData;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="fname";
       required=1;
       def_val=;
       expr {
	expr="\"\"";
       };
      };
      ProgArg @[1] {
       arg_type=DataTable::Delimiters;
       type="DataTable::Delimiters";
       name="delim";
       required=0;
       def_val="DataTable::TAB";
       expr {
	expr="DataTable::SPACE";
       };
      };
      ProgArg @[2] {
       arg_type=bool;
       type="bool";
       name="quote_str";
       required=0;
       def_val="true";
       expr {
	expr="true";
       };
      };
      ProgArg @[3] {
       arg_type=int;
       type="int";
       name="max_recs";
       required=0;
       def_val="-1";
       expr {
	expr="-1";
       };
      };
      ProgArg @[4] {
       arg_type=bool;
       type="bool";
       name="reset_first";
       required=0;
       def_val="false";
       expr {
	expr="true";
       };
      };
     };
    };
    AssignExpr @[1] {
     desc=;
     flags=;
     result_var=.projects[0].programs[5].vars[2]$246$;
     expr {
      expr="UReadOne.file_name.before(\"/\",-1)";
     };
    };
    AssignExpr @[2] {
     desc=;
     flags=;
     result_var=.projects[0].programs[5].vars[1]$247$;
     expr {
      expr="full_path.after(\"/\",-1)";
     };
    };
    ForLoop @[3] {
     desc=;
     flags=;
     loop_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      AssignExpr @[0] {
       desc=;
       flags=;
       result_var=.projects[0].programs[5].vars[7]$248$;
       expr {
	expr="UrakuboLog[i]";
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[5].vars[6]$249$;
       expr {
	expr="cur_col.desc";
       };
      };
      MethodCall @[2] {
       desc=;
       flags=;
       result_var=NULL;
       obj=$245$;
       method=DataTable::LoadData;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="const taString&";
	 name="fname";
	 required=1;
	 def_val=;
	 expr {
	  expr="full_path + \"/\" + cur_col.desc";
	 };
	};
	ProgArg @[1] {
	 arg_type=DataTable::Delimiters;
	 type="DataTable::Delimiters";
	 name="delim";
	 required=0;
	 def_val="DataTable::TAB";
	 expr {
	  expr="DataTable::SPACE";
	 };
	};
	ProgArg @[2] {
	 arg_type=bool;
	 type="bool";
	 name="quote_str";
	 required=0;
	 def_val="true";
	 expr {
	  expr="true";
	 };
	};
	ProgArg @[3] {
	 arg_type=int;
	 type="int";
	 name="max_recs";
	 required=0;
	 def_val="-1";
	 expr {
	  expr="-1";
	 };
	};
	ProgArg @[4] {
	 arg_type=bool;
	 type="bool";
	 name="reset_first";
	 required=0;
	 def_val="false";
	 expr {
	  expr="true";
	 };
	};
       };
      };
      If @[3] {
       desc=;
       flags=;
       cond {
	expr="i==1";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	MethodCall @[0] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 obj=.projects[0].programs[5].vars[3]$250$;
	 method=DataTable::EnforceRows;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=int;
	   type="int";
	   name="n_rows";
	   required=0;
	   def_val=;
	   expr {
	    expr="UReadOne.rows";
	   };
	  };
	 };
	};
	UserScript @[1] {
	 desc=;
	 flags=;
	 script {
	  expr="UrakuboLog[0].CopyFromCol_Robust(UReadOne[0]);";
	 };
	};
       };
      };
      MethodCall @[4] {
       desc=;
       flags=;
       result_var=NULL;
       obj=$248$;
       method=DataCol::CopyFromCol_Robust;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_DataCol_ref;
	 type="const DataCol&";
	 name="cp";
	 required=0;
	 def_val=;
	 expr {
	  expr="UReadOne[1]";
	 };
	};
       };
      };
      MemberAssign @[5] {
       desc=;
       flags=;
       obj=$248$;
       path="desc";
       expr {
	expr="dsc";
       };
       update_after=0;
      };
     };
     init {
      expr="i = 1";
     };
     test {
      expr="i < UrakuboLog.data.size";
     };
     iter {
      expr="i++";
     };
    };
    MethodCall @[4] {
     desc=;
     flags=;
     result_var=NULL;
     obj=.projects[0].programs[5].vars[8]$251$;
     method=taBase::CopyFrom;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=taBase_ptr;
       type="taBase*";
       name="cpy_from";
       required=0;
       def_val=;
       expr {
	expr="UrakuboLog";
       };
      };
     };
    };
   };
  };
  Program @[6] {
   name="UrakuboRawActWt";
   tags=;
   desc="get net weight change out of urakubo detailed sim results";
   flags=;
   objs {
    name=;
    el_typ=taNBase;
    el_def=0;
    DataTable @[0] {
     name="UReadOne";
     desc="read in one col of data";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [788] 0;0.2;0.69999999;1.7;3.4000001;6;9.6999998;14.7;21.200001;29.4;
39.5;51.700001;66.199997;83.199997;102.9;125.5;151.2;180.2;212.7;248.89999;
289;333.20001;381.70001;434.70001;492.39999;501.00058;501.00079;501.00128;501.00229;501.00397;
501.00607;501.00629;501.00677;501.00778;501.00949;501.01169;501.01187;501.01239;501.01337;501.01508;
501.01727;501.01749;501.01797;501.01898;501.02069;501.02277;501.02298;501.02347;501.02448;501.02618;
501.02838;501.02859;501.02908;501.03009;501.03177;501.03397;501.03418;501.03467;501.03568;501.03738;
501.03949;501.03967;501.04019;501.04117;501.04288;501.04507;501.04529;501.04578;501.04678;501.04849;
501.05069;501.05087;501.05139;501.05237;501.05408;501.05627;501.05649;501.05698;501.05798;501.05969;
501.06177;501.06198;501.06247;501.06348;501.06519;501.06738;501.06757;501.06808;501.06909;501.07077;
501.07297;501.07318;501.07367;501.07468;501.07639;501.07849;501.07867;501.07919;501.08017;501.08188;
501.08408;501.08429;501.08478;501.08578;501.08749;501.08969;501.08987;501.09039;501.09137;501.09308;
501.09528;501.09549;501.09598;501.09698;501.09869;501.10077;501.10098;501.10147;501.10248;501.10419;
501.10638;501.10657;501.10709;501.10809;501.10977;501.11197;501.11218;501.11267;501.11368;501.11539;
501.11749;501.11768;501.11819;501.11917;501.12088;501.12308;501.12329;501.12378;501.12479;501.12646;
501.12869;501.12888;501.12939;501.13037;501.13208;501.13428;501.13449;501.13498;501.13599;501.13766;
501.13977;501.13998;501.14047;501.14148;501.14319;501.14539;501.14557;501.14609;501.14709;501.14877;
501.15097;501.15118;501.15167;501.15268;501.15439;501.15649;501.15668;501.15717;501.15817;501.15988;
501.16208;501.16229;501.16278;501.16379;501.16547;501.16769;501.16788;501.16837;501.16937;501.17108;
501.17328;501.17349;501.17398;501.17499;501.17667;501.17877;501.17899;501.17947;501.18048;501.18219;
501.18439;501.18457;501.18509;501.18607;501.18777;501.18997;501.19019;501.19067;501.19168;501.19339;
501.19547;501.19568;501.19617;501.19717;501.19888;501.20108;501.20129;501.20178;501.20279;501.20447;
501.20667;501.20688;501.20737;501.20837;501.21008;501.21228;501.21249;501.21298;501.21399;501.21567;
501.21777;501.21799;501.21848;501.21948;501.22119;501.22339;501.22357;501.22409;501.22507;501.22678;
501.22897;501.22919;501.22968;501.23068;501.23239;501.23447;501.23468;501.23517;501.23618;501.23788;
501.24008;501.24026;501.24078;501.24179;501.24347;501.24567;501.24588;501.24637;501.24738;501.24908;
501.25119;501.25137;501.25189;501.25287;501.25458;501.25677;501.25699;501.25748;501.25848;501.26019;
501.26239;501.26257;501.26309;501.26407;501.26578;501.26797;501.26819;501.26868;501.26968;501.27139;
501.27347;501.27368;501.27417;501.27518;501.27689;501.27908;501.27927;501.27979;501.28079;501.28247;
501.28467;501.28488;501.28537;501.28638;501.28809;501.29019;501.29037;501.29089;501.29187;501.29358;
501.29578;501.29599;501.29648;501.29749;501.29919;501.30139;501.30157;501.30209;501.30307;501.30478;
501.30698;501.30719;501.30768;501.30869;501.31039;501.31247;501.31268;501.31317;501.31418;501.31589;
501.31808;501.31827;501.31879;501.31979;501.32147;501.32367;501.32388;501.32437;501.32538;501.32709;
501.32919;501.32938;501.3299;501.33087;501.33258;501.33478;501.33499;501.33548;501.33649;501.33817;
501.34039;501.34058;501.34109;501.34207;501.34378;501.34598;501.34619;501.34668;501.34769;501.34937;
501.35147;501.35168;501.35217;501.35318;501.35489;501.35709;501.35727;501.35779;501.3588;501.36047;
501.36267;501.36288;501.36337;501.36438;501.36609;501.36819;501.36838;501.36887;501.36987;501.37158;
501.37378;501.37399;501.37448;501.37549;501.37717;501.37939;501.37958;501.38007;501.38107;501.38278;
501.38498;501.38519;501.38568;501.38669;501.38837;501.39047;501.39069;501.39117;501.39218;501.39389;
501.39609;501.39627;501.39679;501.39777;501.39948;501.40167;501.40189;501.40237;501.40338;501.40509;
501.40717;501.40738;501.40787;501.40887;501.41058;501.41278;501.41299;501.41348;501.41449;501.41617;
501.41837;501.41858;501.41907;501.42007;501.42178;501.42398;501.42419;501.42468;501.42569;501.42737;
501.42947;501.42969;501.43018;501.43118;501.43289;501.43509;501.43527;501.43579;501.43677;501.43848;
501.44067;501.44089;501.44138;501.44238;501.44409;501.44617;501.44638;501.44687;501.44788;501.44958;
501.45178;501.45197;501.45248;501.45349;501.45517;501.45737;501.45758;501.45807;501.45908;501.46078;
501.46289;501.46307;501.46359;501.46457;501.46628;501.46848;501.46869;501.46918;501.47018;501.47189;
501.47409;501.47427;501.47479;501.47577;501.47748;501.47968;501.47989;501.48038;501.48138;501.48309;
501.48517;501.48538;501.48587;501.48688;501.48859;501.49078;501.49097;501.49149;501.49249;501.49417;
501.49637;501.49658;501.49707;501.49808;501.49979;501.50189;501.50208;501.50259;501.50357;501.50528;
501.50748;501.50769;501.50818;501.50919;501.51089;501.51309;501.51328;501.51379;501.51477;501.51648;
501.51868;501.51889;501.51938;501.52039;501.52209;501.52417;501.52438;501.52487;501.52588;501.52759;
501.52979;501.52997;501.53049;501.53149;501.53317;501.53537;501.53558;501.53607;501.53708;501.53879;
501.54089;501.54108;501.54156;501.54257;501.54428;501.54648;501.54669;501.54718;501.54819;501.54987;
501.55209;501.55228;501.55276;501.55377;501.55548;501.55768;501.55789;501.55838;501.55939;501.56107;
501.56317;501.56339;501.56387;501.56488;501.56659;501.56879;501.56897;501.56949;501.57047;501.57217;
501.57437;501.57458;501.57507;501.57608;501.57779;501.5799;501.58008;501.58057;501.58157;501.58328;
501.58548;501.58569;501.58618;501.58719;501.58887;501.59109;501.59128;501.59177;501.59277;501.59448;
501.59668;501.59689;501.59738;501.59839;501.60007;501.60217;501.60239;501.60287;501.60388;501.60559;
501.60779;501.60797;501.60849;501.60947;501.61118;501.61337;501.61359;501.61407;501.61508;501.61679;
501.61887;501.61908;501.61957;501.62057;501.62228;501.62448;501.62469;501.62518;501.62619;501.62787;
501.63007;501.63028;501.63077;501.63177;501.63348;501.63559;501.63577;501.63629;501.63727;501.63898;
501.64117;501.64139;501.64188;501.64288;501.64459;501.64679;501.64697;501.64749;501.64847;501.65018;
501.65237;501.65259;501.65308;501.65408;501.65579;501.65787;501.65808;501.65857;501.65958;501.66129;
501.66348;501.66367;501.66418;501.66519;501.66687;501.66907;501.66928;501.66977;501.67078;501.67249;
501.67459;501.67477;501.67529;501.67627;501.67798;501.68018;501.68039;501.68088;501.68188;501.68359;
501.68579;501.68597;501.68649;501.68747;501.68918;501.69138;501.69159;501.69208;501.69308;501.69479;
501.69687;501.69708;501.69757;501.69858;501.70029;501.70248;501.70267;501.70319;501.70419;501.70587;
501.70807;501.70828;501.70877;501.70978;501.71149;501.71359;501.71378;501.71429;501.71527;501.71698;
501.71918;501.71939;501.71988;501.72089;501.7226;501.72479;501.72498;501.72549;501.72647;501.72818;
501.73038;501.73059;501.73108;501.73209;501.7338;501.73587;501.73608;501.73657;501.73758;501.73929;
501.74149;501.74167;501.74219;501.74319;501.74487;501.74707;501.74728;501.74777;501.74878;501.75049;
501.75259;501.75278;501.75327;501.75427;501.75598;501.75818;501.75839;501.75888;501.75989;501.76157;
501.76379;501.76398;501.76447;501.76547;501.76718;501.76938;501.76959;501.77008;501.77109;501.77277;
501.77487;501.77509;501.77557;501.77658;501.77829;501.78049;501.78067;501.78119;501.78217;501.78387;
501.78607;501.78629;501.78677;501.78778;501.78949;501.79156;501.79178;501.79227;501.79327;501.79498;
501.79718;501.79739;501.79788;501.79889;501.80057;501.80624;501.82623;501.87625;501.97623;502.14624;
502.40625;502.77625;502.84625;503.04623;503.54623;504.54623;506.24625;508.84625;512.54626;517.54626;
521.84625;522.04626;522.54626;523.54626;525.24622;527.84625;531.54626;536.54626;543.04626;551.24622;
561.34625;573.54626;588.04626;605.04626;624.74622;647.34625;673.04626;702.04626;734.54626;770.74622;
810.84625;855.04626;903.54626;956.54626;1014.2462;1021.8463;1022.0463;1022.5463;       };
      };
      float_Data @[1] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="val";
       desc="value";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [788] 3.9866891;2.3341558;1.1990041;0.701204;0.61170423;0.73314685;0.92844754;1.1410148;1.3393569;1.5036322;
1.6252494;1.7050933;1.7503765;1.7712365;1.7777059;1.7775731;1.7755647;1.7737745;1.7727003;1.7721916;
1.7719918;1.7719256;1.7719067;1.7719021;1.7719011;1.7724007;1.7724009;1.7724009;1.772401;1.7724011;
1.7724013;1.7724013;1.7724015;1.7724015;1.7724017;1.7724019;1.7724019;1.7724019;1.772402;1.772402;
1.7724019;1.7724019;1.7724019;1.7724019;1.772402;1.7724022;1.7724022;1.7724023;1.7724024;1.7724024;
1.7724024;1.7724024;1.7724024;1.7724025;1.7724029;1.7724035;1.7724036;1.7724037;1.7724041;1.7724047;
1.7724055;1.7724055;1.7724057;1.7724063;1.7724074;1.772409;1.7724092;1.7724096;1.7724105;1.7724121;
1.7724142;1.7724144;1.7724149;1.7724161;1.7724184;1.7724215;1.7724218;1.7724227;1.7724242;1.7724271;
1.7724309;1.7724313;1.7724322;1.7724342;1.7724379;1.7724431;1.7724437;1.7724448;1.7724475;1.772452;
1.7724581;1.7724587;1.7724602;1.7724632;1.7724688;1.772476;1.7724767;1.7724785;1.7724823;1.7724887;
1.7724975;1.7724984;1.7725004;1.7725047;1.7725123;1.7725227;1.7725236;1.7725261;1.7725312;1.77254;
1.7725518;1.7725528;1.7725557;1.7725614;1.7725714;1.7725844;1.7725857;1.7725888;1.7725954;1.7726067;
1.772622;1.7726234;1.772627;1.7726343;1.7726469;1.7726642;1.7726657;1.7726698;1.7726779;1.7726921;
1.7727102;1.772712;1.7727164;1.7727255;1.7727411;1.7727622;1.7727641;1.7727691;1.772779;1.7727964;
1.7728194;1.7728215;1.7728269;1.7728378;1.7728567;1.7728821;1.7728844;1.7728903;1.7729023;1.7729229;
1.7729491;1.7729516;1.772958;1.7729709;1.7729933;1.7730231;1.7730259;1.7730328;1.7730469;1.7730711;
1.7731032;1.7731062;1.7731136;1.7731286;1.7731547;1.7731879;1.7731911;1.7731991;1.7732153;1.7732433;
1.7732803;1.7732837;1.7732923;1.7733096;1.7733396;1.7733793;1.7733829;1.7733922;1.7734107;1.7734426;
1.7734849;1.7734888;1.7734985;1.7735182;1.7735523;1.7735952;1.7735994;1.7736098;1.7736307;1.7736667;
1.7737144;1.7737187;1.7737298;1.7737519;1.7737901;1.7738405;1.7738452;1.7738569;1.7738804;1.7739207;
1.7739714;1.7739763;1.7739886;1.7740133;1.7740558;1.7741119;1.774117;1.77413;1.774156;1.7742008;
1.7742597;1.7742651;1.7742786;1.7743059;1.7743529;1.7744148;1.7744205;1.7744348;1.7744634;1.7745128;
1.7745745;1.7745805;1.7745954;1.7746253;1.7746768;1.7747446;1.7747508;1.7747664;1.7747978;1.7748516;
1.7749223;1.7749288;1.774945;1.7749777;1.775034;1.7751043;1.7751111;1.775128;1.7751621;1.7752206;
1.7752973;1.7753043;1.775322;1.7753574;1.7754182;1.775498;1.7755053;1.7755237;1.7755605;1.7756237;
1.7757027;1.7757103;1.7757293;1.7757674;1.775833;1.775919;1.7759268;1.7759465;1.7759861;1.776054;
1.776143;1.7761511;1.7761714;1.7762125;1.7762828;1.7763748;1.7763833;1.7764044;1.7764468;1.7765194;
1.7766101;1.7766188;1.7766407;1.7766844;1.7767594;1.7768575;1.7768666;1.7768891;1.7769343;1.7770116;
1.7771128;1.777122;1.7771453;1.7771918;1.7772715;1.777371;1.7773806;1.7774044;1.7774525;1.7775345;
1.7776418;1.7776515;1.7776761;1.7777255;1.7778099;1.7779202;1.7779303;1.7779555;1.7780063;1.7780931;
1.7782065;1.7782167;1.7782427;1.7782948;1.778384;1.778495;1.7785056;1.7785323;1.7785857;1.7786771;
1.7787964;1.7788073;1.7788346;1.7788894;1.7789831;1.7791054;1.7791165;1.7791445;1.7792007;1.7792968;
1.7794162;1.7794276;1.7794563;1.7795137;1.7796119;1.7797401;1.7797518;1.7797811;1.7798399;1.7799404;
1.7800714;1.7800834;1.7801133;1.7801734;1.7802762;1.7804101;1.7804223;1.780453;1.7805144;1.7806193;
1.7807498;1.7807623;1.7807935;1.7808563;1.7809633;1.7811029;1.7811157;1.7811475;1.7812115;1.7813207;
1.781463;1.781476;1.7815086;1.7815738;1.7816851;1.7818236;1.7818369;1.78187;1.7819365;1.78205;
1.7821977;1.7822112;1.7822449;1.7823126;1.7824281;1.7825787;1.7825924;1.7826267;1.7826957;1.7828133;
1.7829664;1.7829804;1.7830154;1.7830855;1.783205;1.7833538;1.783368;1.7834035;1.7834748;1.7835964;
1.7837547;1.7837691;1.7838053;1.7838776;1.7840012;1.784162;1.7841767;1.7842134;1.784287;1.7844126;
1.7845684;1.7845833;1.7846205;1.7846953;1.7848226;1.7849884;1.7850035;1.7850413;1.7851171;1.7852464;
1.7854146;1.7854298;1.7854682;1.7855451;1.7856762;1.7858468;1.7858623;1.7859012;1.7859792;1.7861122;
1.7862772;1.7862929;1.7863322;1.7864113;1.786546;1.7867211;1.7867371;1.786777;1.786857;1.7869935;
1.7871708;1.787187;1.7872274;1.7873085;1.7874466;1.7876179;1.7876343;1.7876753;1.7877573;1.7878971;
1.7880787;1.7880952;1.7881367;1.7882197;1.7883611;1.7885449;1.7885616;1.7886035;1.7886875;1.7888305;
1.7890079;1.7890248;1.7890671;1.7891519;1.7892965;1.7894844;1.7895014;1.7895443;1.7896301;1.7897762;
1.789966;1.7899833;1.7900265;1.7901131;1.7902608;1.7904525;1.7904699;1.7905136;1.7906011;1.7907503;
1.790935;1.7909526;1.7909967;1.791085;1.7912356;1.791431;1.7914487;1.7914932;1.7915823;1.7917343;
1.7919314;1.7919494;1.7919943;1.7920842;1.7922375;1.7924273;1.7924454;1.7924907;1.7925814;1.7927361;
1.7929366;1.7929548;1.7930006;1.793092;1.7932478;1.79345;1.7934685;1.7935145;1.7936068;1.7937638;
1.7939676;1.7939862;1.7940326;1.7941254;1.7942837;1.7944797;1.7944984;1.7945452;1.7946389;1.7947983;
1.7950051;1.7950239;1.795071;1.7951653;1.7953259;1.7955341;1.7955531;1.7956005;1.7956955;1.7958572;
1.7960573;1.7960764;1.7961241;1.7962197;1.7963824;1.7965934;1.7966127;1.7966608;1.7967569;1.7969207;
1.797133;1.7971524;1.7972007;1.7972975;1.7974622;1.7976758;1.7976953;1.7977439;1.7978412;1.798007;
1.7982121;1.7982316;1.7982805;1.7983783;1.798545;1.798761;1.7987807;1.7988298;1.7989283;1.7990957;
1.7993129;1.7993326;1.7993821;1.799481;1.7996494;1.7998576;1.7998775;1.7999272;1.8000267;1.8001958;
1.800415;1.8004351;1.8004849;1.8005848;1.8007548;1.8009751;1.8009951;1.8010452;1.8011456;1.8013163;
1.8015375;1.8015577;1.801608;1.8017087;1.8018801;1.8020922;1.8021125;1.802163;1.8022642;1.8024362;
1.8026593;1.8026797;1.8027303;1.8028319;1.8030046;1.8032285;1.8032489;1.8032999;1.8034018;1.8035752;
1.8037896;1.8038101;1.8038611;1.8039634;1.8041375;1.8043629;1.8043834;1.8044347;1.8045372;1.8047118;
1.804938;1.8049585;1.80501;1.8051128;1.805288;1.8055044;1.8055251;1.8055767;1.8056798;1.8058554;
1.8060828;1.8061036;1.8061553;1.8062588;1.8064348;1.8066628;1.8066835;1.8067354;1.8068392;1.8070157;
1.8072443;1.807265;1.807317;1.8074211;1.807598;1.8078166;1.8078375;1.8078896;1.8079939;1.8081712;
1.8084008;1.8084216;1.8084738;1.8085783;1.8087559;1.8089859;1.8090068;1.8090591;1.8091638;1.8093418;
1.8095617;1.8095827;1.809635;1.8097398;1.8099182;1.810149;1.8101699;1.8102224;1.8103274;1.810506;
1.8107371;1.8107581;1.8108107;1.8109158;1.8110945;1.811326;1.8113471;1.8113997;1.811505;1.811684;
1.8119051;1.8119262;1.8119789;1.8120843;1.8122635;1.8124955;1.8125166;1.8125693;1.8126748;1.8128542;
1.8130863;1.8131074;1.8131602;1.8132657;1.8134452;1.8136669;1.8136882;1.813741;1.8138466;1.8140262;
1.8142587;1.8142798;1.8143326;1.8144383;1.8146181;1.8148507;1.8148718;1.8149247;1.8150305;1.8152102;
1.8154429;1.815464;1.8155169;1.8156227;1.8158025;1.8160247;1.8160458;1.8160987;1.8162045;1.8163843;
1.8166171;1.8166382;1.8166912;1.8167969;1.8169768;1.8172095;1.8172307;1.8172835;1.8173894;1.8175691;
1.8177913;1.8178124;1.8178654;1.8179711;1.8181509;1.8183835;1.8184047;1.8184575;1.8185632;1.818743;
1.8189756;1.8189967;1.8190495;1.8191552;1.8193349;1.8195672;1.8195884;1.8196412;1.8197469;1.8199264;
1.8201481;1.8201692;1.820222;1.8203275;1.8205069;1.820739;1.8207601;1.8208129;1.8209183;1.8210976;
1.8213296;1.8213507;1.8214034;1.8215088;1.8216878;1.821909;1.8219301;1.8219827;1.822088;1.8222669;
1.8224983;1.8225194;1.822572;1.8226771;1.8228558;1.8233972;1.8255123;1.830732;1.8407366;1.8560221;
1.8747971;1.8933069;1.8960828;1.9026709;1.9146386;1.9297485;1.9432428;1.951785;1.9616444;1.9742941;
1.9824034;1.9827185;1.983484;1.9849226;1.9871019;1.9898493;1.9927198;1.9950742;1.996303;1.9961554;
1.995034;1.9940704;1.9948751;1.9990227;2.0074883;2.0202627;2.0363009;2.0538459;2.0709808;2.0860891;
2.0980141;2.105999;2.1095886;2.1085765;2.1029804;2.1019609;2.1019332;2.1018641;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[1] {
     name="Files";
     desc=;
     data {
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @[0] {
       name="Path";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [300] "/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz100_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz100_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz100_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz100_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz100_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz10_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz10_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz10_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz10_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz10_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz20_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz20_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz20_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz20_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz20_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz30_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz30_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz30_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz30_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz30_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz40_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz40_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz40_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz40_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz40_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz50_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz50_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz50_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz50_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz50_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz60_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz60_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz60_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz60_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz60_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz70_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz70_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz70_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz70_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz70_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz80_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz80_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz80_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz80_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz80_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz90_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz90_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz90_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz90_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur100hz90_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz100_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz100_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz100_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz100_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz100_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz10_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz10_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz10_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz10_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz10_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz20_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz20_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz20_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz20_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz20_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz30_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz30_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz30_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz30_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz30_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz40_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz40_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz40_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz40_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz40_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz50_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz50_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz50_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz50_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz50_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz60_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz60_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz60_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz60_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz60_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz70_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz70_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz70_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz70_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz70_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz80_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz80_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz80_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz80_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz80_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz90_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz90_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz90_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz90_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur200hz90_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz100_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz100_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz100_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz100_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz100_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz10_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz10_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz10_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz10_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz10_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz20_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz20_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz20_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz20_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz20_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz30_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz30_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz30_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz30_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz30_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz40_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz40_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz40_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz40_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz40_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz50_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz50_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz50_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz50_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz50_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz60_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz60_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz60_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz60_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz60_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz70_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz70_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz70_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz70_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz70_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz80_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz80_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz80_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz80_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz80_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz90_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz90_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz90_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz90_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur300hz90_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz100_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz100_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz100_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz100_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz100_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz10_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz10_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz10_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz10_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz10_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz20_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz20_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz20_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz20_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz20_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz30_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz30_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz30_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz30_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz30_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz40_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz40_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz40_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz40_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz40_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz50_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz50_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz50_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz50_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz50_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz60_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz60_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz60_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz60_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz60_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz70_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz70_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz70_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz70_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz70_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz80_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz80_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz80_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz80_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz80_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz90_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz90_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz90_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz90_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur500hz90_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz100_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz100_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz100_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz100_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz100_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz10_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz10_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz10_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz10_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz10_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz20_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz20_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz20_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz20_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz20_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz30_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz30_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz30_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz30_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz30_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz40_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz40_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz40_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz40_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz40_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz50_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz50_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz50_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz50_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz50_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz60_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz60_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz60_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz60_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz60_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz70_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz70_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz70_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz70_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz70_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz80_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz80_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz80_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz80_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz80_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz90_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz90_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz90_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz90_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur50hz90_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz100_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz100_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz100_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz100_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz100_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz10_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz10_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz10_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz10_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz10_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz20_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz20_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz20_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz20_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz20_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz30_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz30_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz30_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz30_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz30_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz40_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz40_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz40_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz40_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz40_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz50_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz50_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz50_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz50_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz50_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz60_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz60_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz60_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz60_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz60_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz70_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz70_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz70_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz70_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz70_off5_rep3/Trapped_AMPAR.Co19";
"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz80_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz80_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz80_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz80_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz80_off5_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz90_off10_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz90_off10_rep3/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz90_off1_rep1/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz90_off5_rep2/Trapped_AMPAR.Co19";"/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz90_off5_rep3/Trapped_AMPAR.Co19";
       };
      };
      String_Data @[1] {
       name="FName";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [300] "Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";"Trapped_AMPAR.Co19";
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[2] {
     name="URawActdWt";
     desc="incremental accumulation of data, then copied to URawActdWt for graphing";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="ActHz";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [120] 10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;10;10;10;10;10;20;20;20;20;
20;20;30;30;30;30;30;30;40;40;
40;40;40;40;50;50;50;50;50;50;
60;60;60;60;60;60;70;70;70;70;
70;70;80;80;80;80;80;80;90;90;
90;90;90;90;100;100;100;100;100;100;
       };
      };
      float_Data @[1] {
       name="DurMsec";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [120] 50;50;50;50;50;50;50;50;50;50;
100;100;100;100;100;100;100;100;100;100;
200;200;200;200;200;200;200;200;200;200;
300;300;300;300;300;300;300;300;300;300;
500;500;500;500;500;500;500;500;500;500;
800;800;800;800;800;800;800;800;800;800;
50;100;200;300;500;800;50;100;200;300;
500;800;50;100;200;300;500;800;50;100;
200;300;500;800;50;100;200;300;500;800;
50;100;200;300;500;800;50;100;200;300;
500;800;50;100;200;300;500;800;50;100;
200;300;500;800;50;100;200;300;500;800;
       };
      };
      float_Data @[2] {
       name="NSpikes";
       desc="Act * Dur";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [120] 0.0062500001;0.0125;0.018750001;0.025;0.03125;0.037500001;0.043749999;0.050000001;0.056249999;0.0625;
0.0125;0.025;0.037500001;0.050000001;0.0625;0.075000003;0.087499999;0.1;0.1125;0.125;
0.025;0.050000001;0.075000003;0.1;0.125;0.15000001;0.175;0.2;0.22499999;0.25;
0.037500001;0.075000003;0.1125;0.15000001;0.1875;0.22499999;0.26249999;0.30000001;0.33750001;0.375;
0.0625;0.125;0.1875;0.25;0.3125;0.375;0.4375;0.5;0.5625;0.625;
0.1;0.2;0.30000001;0.40000001;0.5;0.60000002;0.69999999;0.80000001;0.89999998;1;
0.0062500001;0.0125;0.025;0.037500001;0.0625;0.1;0.0125;0.025;0.050000001;0.075000003;
0.125;0.2;0.018750001;0.037500001;0.075000003;0.1125;0.1875;0.30000001;0.025;0.050000001;
0.1;0.15000001;0.25;0.40000001;0.03125;0.0625;0.125;0.1875;0.3125;0.5;
0.037500001;0.075000003;0.15000001;0.22499999;0.375;0.60000002;0.043749999;0.087499999;0.175;0.26249999;
0.4375;0.69999999;0.050000001;0.1;0.2;0.30000001;0.5;0.80000001;0.056249999;0.1125;
0.22499999;0.33750001;0.5625;0.89999998;0.0625;0.125;0.25;0.375;0.625;1;
       };
      };
      float_Data @[3] {
       name="dWt";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [120] -8.0408478e-05;-0.075187027;-0.04972738;-0.14417011;-0.1414445;-0.22099096;-0.23114043;-0.28797227;-0.29784614;-0.30699104;
-0.14085919;-0.16141146;-0.19680828;-0.24052793;-0.28041989;-0.30752224;-0.31634408;-0.30498236;-0.27622396;-0.23340982;
-0.20014173;-0.22888428;-0.27683026;-0.31265849;-0.32189029;-0.30433792;-0.2666288;-0.21593267;-0.15531331;-0.083943546;
-0.20176607;-0.25532287;-0.31412047;-0.32625681;-0.30222028;-0.25864726;-0.20152694;-0.14698046;-0.071395457;0.028877793;
-0.29585415;-0.31990451;-0.32645887;-0.29396755;-0.23930782;-0.17304271;-0.095724881;-0.0085751433;0.086331666;0.18595892;
-0.32968229;-0.3309682;-0.29512185;-0.23233634;-0.1572867;-0.071968138;0.025402961;0.12993282;0.23558825;0.33875817;
-8.0408478e-05;-0.14085919;-0.20014173;-0.20176607;-0.29585415;-0.32968229;-0.075187027;-0.16141146;-0.22888428;-0.25532287;
-0.31990451;-0.3309682;-0.04972738;-0.19680828;-0.27683026;-0.31412047;-0.32645887;-0.29512185;-0.14417011;-0.24052793;
-0.31265849;-0.32625681;-0.29396755;-0.23233634;-0.1414445;-0.28041989;-0.32189029;-0.30222028;-0.23930782;-0.1572867;
-0.22099096;-0.30752224;-0.30433792;-0.25864726;-0.17304271;-0.071968138;-0.23114043;-0.31634408;-0.2666288;-0.20152694;
-0.095724881;0.025402961;-0.28797227;-0.30498236;-0.21593267;-0.14698046;-0.0085751433;0.12993282;-0.29784614;-0.27622396;
-0.15531331;-0.071395457;0.086331666;0.23558825;-0.30699104;-0.23340982;-0.083943546;0.028877793;0.18595892;0.33875817;
       };
      };
      float_Data @[4] {
       name="dWt_fun";
       desc="delta-weight computed from the learning rule function";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [120] -0.028124999;-0.056249999;-0.084375001;-0.1125;-0.140625;-0.16875;-0.19687501;-0.22499999;-0.25312501;-0.28125;
-0.056249999;-0.1125;-0.16875;-0.22499999;-0.28125;-0.33750001;-0.39375001;-0.44999999;-0.4375;-0.42500001;
-0.1125;-0.22499999;-0.33750001;-0.44999999;-0.42500001;-0.40000001;-0.375;-0.34999999;-0.32499999;-0.30000001;
-0.16875;-0.33750001;-0.4375;-0.40000001;-0.36250001;-0.32499999;-0.28749999;-0.25;-0.21250001;-0.175;
-0.28125;-0.42500001;-0.36250001;-0.30000001;-0.2375;-0.175;-0.1125;-0.050000001;0.0125;0.075000003;
-0.44999999;-0.34999999;-0.25;-0.15000001;-0.050000001;0.050000001;0.15000001;0.25;0.34999999;0.44999999;
-0.028124999;-0.056249999;-0.1125;-0.16875;-0.28125;-0.44999999;-0.056249999;-0.1125;-0.22499999;-0.33750001;
-0.42500001;-0.34999999;-0.084375001;-0.16875;-0.33750001;-0.4375;-0.36250001;-0.25;-0.1125;-0.22499999;
-0.44999999;-0.40000001;-0.30000001;-0.15000001;-0.140625;-0.28125;-0.42500001;-0.36250001;-0.2375;-0.050000001;
-0.16875;-0.33750001;-0.40000001;-0.32499999;-0.175;0.050000001;-0.19687501;-0.39375001;-0.375;-0.28749999;
-0.1125;0.15000001;-0.22499999;-0.44999999;-0.34999999;-0.25;-0.050000001;0.25;-0.25312501;-0.4375;
-0.32499999;-0.21250001;0.0125;0.34999999;-0.28125;-0.42500001;-0.30000001;-0.175;0.075000003;0.44999999;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[3] {
     name="URIncremental";
     desc="incremental accumulation of data, then copied to URawActdWt for graphing";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="ActHz";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [60] 100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
       };
      };
      float_Data @[1] {
       name="DurMsec";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [60] 100;100;100;100;100;100;100;100;100;100;
200;200;200;200;200;200;200;200;200;200;
300;300;300;300;300;300;300;300;300;300;
500;500;500;500;500;500;500;500;500;500;
50;50;50;50;50;50;50;50;50;50;
800;800;800;800;800;800;800;800;800;800;
       };
      };
      float_Data @[2] {
       name="NSpikes";
       desc="Act * Dur";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [60] 0.125;0.0125;0.025;0.037500001;0.050000001;0.0625;0.075000003;0.087499999;0.1;0.1125;
0.25;0.025;0.050000001;0.075000003;0.1;0.125;0.15000001;0.175;0.2;0.22499999;
0.375;0.037500001;0.075000003;0.1125;0.15000001;0.1875;0.22499999;0.26249999;0.30000001;0.33750001;
0.625;0.0625;0.125;0.1875;0.25;0.3125;0.375;0.4375;0.5;0.5625;
0.0625;0.0062500001;0.0125;0.018750001;0.025;0.03125;0.037500001;0.043749999;0.050000001;0.056249999;
1;0.1;0.2;0.30000001;0.40000001;0.5;0.60000002;0.69999999;0.80000001;0.89999998;
       };
      };
      float_Data @[3] {
       name="dWt";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [60] -0.23340982;-0.14085919;-0.16141146;-0.19680828;-0.24052793;-0.28041989;-0.30752224;-0.31634408;-0.30498236;-0.27622396;
-0.083943546;-0.20014173;-0.22888428;-0.27683026;-0.31265849;-0.32189029;-0.30433792;-0.2666288;-0.21593267;-0.15531331;
0.028877793;-0.20176607;-0.25532287;-0.31412047;-0.32625681;-0.30222028;-0.25864726;-0.20152694;-0.14698046;-0.071395457;
0.18595892;-0.29585415;-0.31990451;-0.32645887;-0.29396755;-0.23930782;-0.17304271;-0.095724881;-0.0085751433;0.086331666;
-0.30699104;-8.0408478e-05;-0.075187027;-0.04972738;-0.14417011;-0.1414445;-0.22099096;-0.23114043;-0.28797227;-0.29784614;
0.33875817;-0.32968229;-0.3309682;-0.29512185;-0.23233634;-0.1572867;-0.071968138;0.025402961;0.12993282;0.23558825;
       };
      };
      float_Data @[4] {
       name="dWt_fun";
       desc="delta-weight computed from the learning rule function";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [60] -0.42500001;-0.056249999;-0.1125;-0.16875;-0.22499999;-0.28125;-0.33750001;-0.39375001;-0.44999999;-0.4375;
-0.30000001;-0.1125;-0.22499999;-0.33750001;-0.44999999;-0.42500001;-0.40000001;-0.375;-0.34999999;-0.32499999;
-0.175;-0.16875;-0.33750001;-0.4375;-0.40000001;-0.36250001;-0.32499999;-0.28749999;-0.25;-0.21250001;
0.075000003;-0.28125;-0.42500001;-0.36250001;-0.30000001;-0.2375;-0.175;-0.1125;-0.050000001;0.0125;
-0.28125;-0.028124999;-0.056249999;-0.084375001;-0.1125;-0.140625;-0.16875;-0.19687501;-0.22499999;-0.25312501;
0.44999999;-0.44999999;-0.34999999;-0.25;-0.15000001;-0.050000001;0.050000001;0.15000001;0.25;0.34999999;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
   };
   types {
    name=;
    el_typ=ProgType;
    el_def=0;
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="urakubo_sim_dir";
     var_type=T_String;
     string_val="/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act";
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="path to where the urakubo sims live";
     init_from=NULL;
    };
    ProgVar @[1] {
     name="file_filter";
     var_type=T_String;
     string_val="Trapped_AMPAR.Co19";
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="text that fname must contain";
     init_from=NULL;
    };
    ProgVar @[2] {
     name="rep_off_filter";
     var_type=T_String;
     string_val="off1_rep1";
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="off and rep vals -- filter for files off5_rep3, off1_rep1";
     init_from=NULL;
    };
    ProgVar @[3] {
     name="Path";
     var_type=T_String;
     string_val="/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act/dur800hz90_off5_rep3/Trapped_AMPAR.Co19";
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[4] {
     name="FName";
     var_type=T_String;
     string_val="Trapped_AMPAR.Co19";
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[5] {
     name="subdir";
     var_type=T_String;
     string_val="dur800hz90_off1_rep1";
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[6] {
     name="ActHz";
     var_type=T_Real;
     real_val=90;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[7] {
     name="DurMsec";
     var_type=T_Real;
     real_val=800;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[8] {
     name="NSpikes";
     var_type=T_Real;
     real_val=0.9;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[9] {
     name="NSpikes_max";
     var_type=T_Real;
     real_val=80000;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="max number of spikes, for normalizing";
     init_from=NULL;
    };
    ProgVar @[10] {
     name="DP_theta";
     var_type=T_Real;
     real_val=0.55;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="theta for decrease vs. increase, in normalized units";
     init_from=NULL;
    };
    ProgVar @[11] {
     name="Drev_theta";
     var_type=T_Real;
     real_val=0.1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="reversal point for decrease (point of maximal decrease)";
     init_from=NULL;
    };
    ProgVar @[12] {
     name="Dmult";
     var_type=T_Real;
     real_val=12;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="multiplier for D vals";
     init_from=NULL;
    };
    ProgVar @[13] {
     name="dWt";
     var_type=T_Real;
     real_val=0.2355882507324218;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[14] {
     name="dWt_fun";
     var_type=T_Real;
     real_val=0.35;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[15] {
     name="init_wt";
     var_type=T_Real;
     real_val=1.7719;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="weight at eq before stim train";
     init_from=NULL;
    };
    ProgVar @[16] {
     name="time";
     var_type=T_Real;
     real_val=624.7462158203125;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[17] {
     name="final_wt";
     var_type=T_Real;
     real_val=2.007488250732422;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[18] {
     name="UReadOne";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[6].objs[0]$252$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[19] {
     name="Files";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[6].objs[1]$253$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[20] {
     name="URawActdWt";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[6].objs[2]$254$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[21] {
     name="i";
     var_type=T_Int;
     int_val=300;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[22] {
     name="j";
     var_type=T_Int;
     int_val=774;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[23] {
     name="URIncremental";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[6].objs[3]$255$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    ResetDataRows @[0] {
     desc=;
     flags=;
     data_var=.projects[0].programs[6].vars[19]$256$;
    };
    ResetDataRows @[1] {
     desc=;
     flags=;
     data_var=.projects[0].programs[6].vars[23]$257$;
    };
    DataGenCall @[2] {
     desc=;
     flags=;
     result_var=NULL;
     object_type=taDataGen;
     method=taDataGen::GetDirFiles;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="dest";
       required=1;
       def_val=;
       expr {
	expr="Files";
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="dir_path";
       required=1;
       def_val=;
       expr {
	expr="urakubo_sim_dir";
       };
      };
      ProgArg @[2] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="filter";
       required=0;
       def_val="\"\"";
       expr {
	expr="file_filter";
       };
      };
      ProgArg @[3] {
       arg_type=bool;
       type="bool";
       name="recursive";
       required=0;
       def_val="false";
       expr {
	expr="true";
       };
      };
      ProgArg @[4] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="fname_col_nm";
       required=0;
       def_val="FileName";
       expr {
	expr="\"FName\"";
       };
      };
      ProgArg @[5] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="path_col_nm";
       required=0;
       def_val="FilePath";
       expr {
	expr="\"Path\"";
       };
      };
     };
    };
    ForLoop @[3] {
     desc=;
     flags=;
     loop_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      DataVarProg @[0] {
       desc=;
       flags=;
       data_var=$256$;
       set_data=0;
       row_spec=ROW_NUM;
       row_var=.projects[0].programs[6].vars[21]$258$;
       quiet=0;
       var_1=.projects[0].programs[6].vars[3]$259$;
       var_2=.projects[0].programs[6].vars[4]$260$;
       var_3=NULL;
       var_4=NULL;
      };
      IfContinue @[1] {
       desc=;
       flags=;
       cond {
	expr="!Path.contains(rep_off_filter)";
       };
      };
      MethodCall @[2] {
       desc=;
       flags=;
       result_var=NULL;
       obj=.projects[0].programs[6].vars[18]$261$;
       method=DataTable::LoadData;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_taString_ref;
	 type="const taString&";
	 name="fname";
	 required=1;
	 def_val=;
	 expr {
	  expr="Path ";
	 };
	};
	ProgArg @[1] {
	 arg_type=DataTable::Delimiters;
	 type="DataTable::Delimiters";
	 name="delim";
	 required=0;
	 def_val="DataTable::TAB";
	 expr {
	  expr="DataTable::SPACE";
	 };
	};
	ProgArg @[2] {
	 arg_type=bool;
	 type="bool";
	 name="quote_str";
	 required=0;
	 def_val="true";
	 expr {
	  expr="true";
	 };
	};
	ProgArg @[3] {
	 arg_type=int;
	 type="int";
	 name="max_recs";
	 required=0;
	 def_val="-1";
	 expr {
	  expr="-1";
	 };
	};
	ProgArg @[4] {
	 arg_type=bool;
	 type="bool";
	 name="reset_first";
	 required=0;
	 def_val="false";
	 expr {
	  expr="true";
	 };
	};
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=.projects[0].programs[6].vars[5]$262$;
       expr {
	expr="Path.before(\"/\",-1).after(\"/\",-1)";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=.projects[0].programs[6].vars[6]$263$;
       expr {
	expr="subdir.after(\"hz\").before(\"_\")";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=.projects[0].programs[6].vars[7]$264$;
       expr {
	expr="subdir.after(\"dur\").before(\"hz\")";
       };
      };
      AssignExpr @[6] {
       desc=;
       flags=;
       result_var=.projects[0].programs[6].vars[8]$265$;
       expr {
	expr="(ActHz * DurMsec) / NSpikes_max";
       };
      };
      AssignExpr @[7] {
       desc="piecewise linear (best fit)";
       flags=;
       result_var=.projects[0].programs[6].vars[14]$266$;
       expr {
	expr="NSpikes > Drev_theta ? NSpikes - DP_theta : -NSpikes * ((DP_theta - Drev_theta) / Drev_theta)";
       };
      };
      AssignExpr @[8] {
       desc="quasi-bcm";
       flags=OFF;
       result_var=$266$;
       expr {
	expr="NSpikes > DP_theta ? NSpikes - DP_theta : Dmult * NSpikes * (NSpikes - DP_theta)";
       };
      };
      ForLoop @[9] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[6].vars[16]$267$;
	 expr {
	  expr="UReadOne[0][j]";
	 };
	};
	If @[1] {
	 desc=;
	 flags=;
	 cond {
	  expr="time >= 620.0";
	 };
	 true_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=;
	   result_var=.projects[0].programs[6].vars[17]$268$;
	   expr {
	    expr="UReadOne[1][j]";
	   };
	  };
	  IfBreak @[1] {
	   desc=;
	   flags=;
	   cond {
	    expr="true";
	   };
	  };
	 };
	};
       };
       init {
	expr="j = 0";
       };
       test {
	expr="j < UReadOne.rows";
       };
       iter {
	expr="j++";
       };
      };
      AssignExpr @[10] {
       desc=;
       flags=;
       result_var=.projects[0].programs[6].vars[13]$269$;
       expr {
	expr="final_wt - init_wt";
       };
      };
      AddNewDataRow @[11] {
       desc=;
       flags=;
       data_var=$257$;
      };
      DataVarProg @[12] {
       desc=;
       flags=;
       data_var=$257$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$263$;
       var_2=$264$;
       var_3=$269$;
       var_4=$265$;
      };
      DataVarProg @[13] {
       desc=;
       flags=;
       data_var=$257$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$266$;
       var_2=NULL;
       var_3=NULL;
       var_4=NULL;
      };
      DoneWritingDataRow @[14] {
       desc=;
       flags=;
       data_var=$257$;
      };
     };
     init {
      expr="i = 0";
     };
     test {
      expr="i < Files.rows";
     };
     iter {
      expr="i++";
     };
    };
    MethodCall @[4] {
     desc=;
     flags=;
     result_var=NULL;
     obj=.projects[0].programs[6].vars[20]$270$;
     method=taBase::CopyFrom;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=taBase_ptr;
       type="taBase*";
       name="cpy_from";
       required=0;
       def_val=;
       expr {
	expr="URIncremental";
       };
      };
     };
    };
    DataAnalCall @[5] {
     desc=;
     flags=;
     result_var=NULL;
     object_type=taDataAnal;
     method=taDataAnal::Matrix3DGraph;
     meth_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
      ProgArg @[0] {
       arg_type=DataTable_ptr;
       type="DataTable*";
       name="data";
       required=0;
       def_val=;
       expr {
	expr="URawActdWt";
       };
      };
      ProgArg @[1] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="x_axis_col";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"DurMsec\"";
       };
      };
      ProgArg @[2] {
       arg_type=const_taString_ref;
       type="const taString&";
       name="z_axis_col";
       required=0;
       def_val="\"\"";
       expr {
	expr="\"ActHz\"";
       };
      };
     };
    };
   };
  };
  Program @[7] {
   name="UrakuboRawActSRWt";
   tags=;
   desc="get net weight change out of urakubo detailed sim results";
   flags=;
   objs {
    name=;
    el_typ=taNBase;
    el_def=0;
    DataTable @[0] {
     name="UReadOne";
     desc="read in one col of data";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       UserDataItem_List @*(.user_data_) {
	name=;
	el_typ=UserDataItemBase;
	el_def=0;
	UserDataItem @[0] {
	 name="view_panel_wd";
	 value 6 0=0.1848428845405579;
	 val_type_fixed=0;
	};
       };
       name="val";
       desc="value";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[1] {
     name="Files";
     desc=;
     data {
      name="data";
      el_typ=String_Data;
      el_def=0;
      String_Data @[0] {
       name="Path";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      String_Data @[1] {
       name="FName";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[2] {
     name="URawActSRdWt";
     desc="incremental accumulation of data, then copied to URawActdWt for graphing";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="SActHz";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [140] 20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
20;20;20;20;20;20;20;20;20;20;
       };
      };
      float_Data @[1] {
       name="RActHz";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [140] 10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;20;30;40;50;60;70;80;90;100;
10;10;10;10;10;10;10;20;20;20;
20;20;20;20;30;30;30;30;30;30;
30;40;40;40;40;40;40;40;50;50;
50;50;50;50;50;60;60;60;60;60;
60;60;70;70;70;70;70;70;70;80;
80;80;80;80;80;80;90;90;90;90;
90;90;90;100;100;100;100;100;100;100;
       };
      };
      float_Data @[2] {
       name="SRAvg";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [140] 0.001;0.0020000001;0.003;0.0040000002;0.0049999999;0.0060000001;0.0070000002;0.0080000004;0.0089999996;0.0099999998;
0.0020000001;0.0040000002;0.0060000001;0.0080000004;0.0099999998;0.012;0.014;0.016000001;0.017999999;0.02;
0.0040000002;0.0080000004;0.012;0.016000001;0.02;0.024;0.028000001;0.032000002;0.035999998;0.039999999;
0.0060000001;0.012;0.017999999;0.024;0.029999999;0.035999998;0.041999999;0.048;0.054000001;0.059999999;
0.0099999998;0.02;0.029999999;0.039999999;0.050000001;0.059999999;0.07;0.079999998;0.090000004;0.1;
0.016000001;0.032000002;0.048;0.064000003;0.079999998;0.096000001;0.112;0.12800001;0.14399999;0.16;
0.02;0.039999999;0.059999999;0.079999998;0.1;0.12;0.14;0.16;0.18000001;0.2;
0.001;0.0020000001;0.0040000002;0.0060000001;0.0099999998;0.016000001;0.02;0.0020000001;0.0040000002;0.0080000004;
0.012;0.02;0.032000002;0.039999999;0.003;0.0060000001;0.012;0.017999999;0.029999999;0.048;
0.059999999;0.0040000002;0.0080000004;0.016000001;0.024;0.039999999;0.064000003;0.079999998;0.0049999999;0.0099999998;
0.02;0.029999999;0.050000001;0.079999998;0.1;0.0060000001;0.012;0.024;0.035999998;0.059999999;
0.096000001;0.12;0.0070000002;0.014;0.028000001;0.041999999;0.07;0.112;0.14;0.0080000004;
0.016000001;0.032000002;0.048;0.079999998;0.12800001;0.16;0.0089999996;0.017999999;0.035999998;0.054000001;
0.090000004;0.14399999;0.18000001;0.0099999998;0.02;0.039999999;0.059999999;0.1;0.16;0.2;
       };
      };
      float_Data @[3] {
       name="DurMsec";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [140] 50;50;50;50;50;50;50;50;50;50;
100;100;100;100;100;100;100;100;100;100;
200;200;200;200;200;200;200;200;200;200;
300;300;300;300;300;300;300;300;300;300;
500;500;500;500;500;500;500;500;500;500;
800;800;800;800;800;800;800;800;800;800;
1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
50;100;200;300;500;800;1000;50;100;200;
300;500;800;1000;50;100;200;300;500;800;
1000;50;100;200;300;500;800;1000;50;100;
200;300;500;800;1000;50;100;200;300;500;
800;1000;50;100;200;300;500;800;1000;50;
100;200;300;500;800;1000;50;100;200;300;
500;800;1000;50;100;200;300;500;800;1000;
       };
      };
      float_Data @[4] {
       name="dWt";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [140] -8.0408478e-05;-8.0408478e-05;-8.0408478e-05;-8.0408478e-05;-0.0031498093;-0.0038557667;-0.014287891;-0.016012492;-0.053288281;-0.049819648;
-0.19419914;-0.19419914;-0.036607802;-0.063925326;-0.12184197;-0.1005128;-0.10304314;-0.15535432;-0.18086463;-0.2264263;
-0.21781427;-0.29293782;-0.17724794;-0.19073969;-0.26502508;-0.25589389;-0.28107768;-0.31040758;-0.31334585;-0.30906409;
-0.25926501;-0.31411558;-0.25171381;-0.25596625;-0.3150956;-0.31156379;-0.32128197;-0.28245538;-0.30687755;-0.24353391;
-0.30736166;-0.32626182;-0.31649047;-0.32123512;-0.31447989;-0.31368834;-0.28116232;-0.23715383;-0.21375257;-0.10955638;
-0.3321144;-0.31368846;-0.32290095;-0.32177991;-0.25692838;-0.24524492;-0.1938929;-0.13309997;-0.093675077;0.050429165;
-0.33277816;-0.29899806;-0.30109543;-0.30140239;-0.21834129;-0.19547361;-0.14767188;-0.074669302;-0.023500385;0.13695973;
-8.0408478e-05;-0.19419914;-0.21781427;-0.25926501;-0.30736166;-0.3321144;-0.33277816;-8.0408478e-05;-0.19419914;-0.29293782;
-0.31411558;-0.32626182;-0.31368846;-0.29899806;-8.0408478e-05;-0.036607802;-0.17724794;-0.25171381;-0.31649047;-0.32290095;
-0.30109543;-8.0408478e-05;-0.063925326;-0.19073969;-0.25596625;-0.32123512;-0.32177991;-0.30140239;-0.0031498093;-0.12184197;
-0.26502508;-0.3150956;-0.31447989;-0.25692838;-0.21834129;-0.0038557667;-0.1005128;-0.25589389;-0.31156379;-0.31368834;
-0.24524492;-0.19547361;-0.014287891;-0.10304314;-0.28107768;-0.32128197;-0.28116232;-0.1938929;-0.14767188;-0.016012492;
-0.15535432;-0.31040758;-0.28245538;-0.23715383;-0.13309997;-0.074669302;-0.053288281;-0.18086463;-0.31334585;-0.30687755;
-0.21375257;-0.093675077;-0.023500385;-0.049819648;-0.2264263;-0.30906409;-0.24353391;-0.10955638;0.050429165;0.13695973;
       };
      };
      float_Data @[5] {
       name="dWt_fun";
       desc="delta-weight computed from the learning rule function";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [140] -0.011333333;-0.022666667;-0.034000002;-0.045333333;-0.056666669;-0.068000004;-0.079333335;-0.090666667;-0.102;-0.11333334;
-0.022666667;-0.045333333;-0.068000004;-0.090666667;-0.11333334;-0.13600001;-0.15866667;-0.18133333;-0.204;-0.22666667;
-0.045333333;-0.090666667;-0.13600001;-0.18133333;-0.22666667;-0.27200001;-0.31733334;-0.336;-0.32800001;-0.31999999;
-0.068000004;-0.13600001;-0.204;-0.27200001;-0.34;-0.32800001;-0.31600001;-0.30399999;-0.292;-0.28;
-0.11333334;-0.22666667;-0.34;-0.31999999;-0.30000001;-0.28;-0.25999999;-0.23999999;-0.22;-0.2;
-0.18133333;-0.336;-0.30399999;-0.27200001;-0.23999999;-0.208;-0.176;-0.14399999;-0.112;-0.079999998;
-0.22666667;-0.31999999;-0.28;-0.23999999;-0.2;-0.16;-0.12;-0.079999998;-0.039999999;0;
-0.011333333;-0.022666667;-0.045333333;-0.068000004;-0.11333334;-0.18133333;-0.22666667;-0.022666667;-0.045333333;-0.090666667;
-0.13600001;-0.22666667;-0.336;-0.31999999;-0.034000002;-0.068000004;-0.13600001;-0.204;-0.34;-0.30399999;
-0.28;-0.045333333;-0.090666667;-0.18133333;-0.27200001;-0.31999999;-0.27200001;-0.23999999;-0.056666669;-0.11333334;
-0.22666667;-0.34;-0.30000001;-0.23999999;-0.2;-0.068000004;-0.13600001;-0.27200001;-0.32800001;-0.28;
-0.208;-0.16;-0.079333335;-0.15866667;-0.31733334;-0.31600001;-0.25999999;-0.176;-0.12;-0.090666667;
-0.18133333;-0.336;-0.30399999;-0.23999999;-0.14399999;-0.079999998;-0.102;-0.204;-0.32800001;-0.292;
-0.22;-0.112;-0.039999999;-0.11333334;-0.22666667;-0.31999999;-0.28;-0.2;-0.079999998;0;
       };
      };
      float_Data @[6] {
       name="regress_line";
       desc="dWt = 0.686151 * dWt_fun + -0.096684; r = 0.894612; r^2 = 0.800331";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [140] -0.10446034;-0.11223672;-0.1200131;-0.12778947;-0.13556585;-0.14334223;-0.15111861;-0.15889497;-0.16667134;-0.17444772;
-0.11223672;-0.12778947;-0.14334223;-0.15889497;-0.17444772;-0.19000047;-0.20555323;-0.22110596;-0.23665872;-0.25221148;
-0.12778947;-0.15889497;-0.19000047;-0.22110596;-0.25221148;-0.28331697;-0.31442249;-0.3272306;-0.32174143;-0.3162522;
-0.14334223;-0.19000047;-0.23665872;-0.28331697;-0.32997522;-0.32174143;-0.31350762;-0.3052738;-0.29703999;-0.28880617;
-0.17444772;-0.25221148;-0.32997522;-0.3162522;-0.30252919;-0.28880617;-0.27508315;-0.26136014;-0.24763712;-0.23391411;
-0.22110596;-0.3272306;-0.3052738;-0.28331697;-0.26136014;-0.23940334;-0.21744651;-0.19548967;-0.17353286;-0.15157603;
-0.25221148;-0.3162522;-0.28880617;-0.26136014;-0.23391411;-0.20646808;-0.17902206;-0.15157603;-0.12413;-0.096683972;
-0.10446034;-0.11223672;-0.12778947;-0.14334223;-0.17444772;-0.22110596;-0.25221148;-0.11223672;-0.12778947;-0.15889497;
-0.19000047;-0.25221148;-0.3272306;-0.3162522;-0.1200131;-0.14334223;-0.19000047;-0.23665872;-0.32997522;-0.3052738;
-0.28880617;-0.12778947;-0.15889497;-0.22110596;-0.28331697;-0.3162522;-0.28331697;-0.26136014;-0.13556585;-0.17444772;
-0.25221148;-0.32997522;-0.30252919;-0.26136014;-0.23391411;-0.14334223;-0.19000047;-0.28331697;-0.32174143;-0.28880617;
-0.23940334;-0.20646808;-0.15111861;-0.20555323;-0.31442249;-0.31350762;-0.27508315;-0.21744651;-0.17902206;-0.15889497;
-0.22110596;-0.3272306;-0.3052738;-0.26136014;-0.19548967;-0.15157603;-0.16667134;-0.23665872;-0.32174143;-0.29703999;
-0.24763712;-0.17353286;-0.12413;-0.17444772;-0.25221148;-0.3162522;-0.28880617;-0.23391411;-0.15157603;-0.096683972;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[3] {
     name="URawActSRAll";
     desc="all data, then copied to URawActdWt for graphing";
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="SActHz";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [700] 100;100;100;100;100;100;100;100;100;100;
10;10;10;10;10;10;10;10;10;10;
20;20;20;20;20;20;20;20;20;20;
30;30;30;30;30;30;30;30;30;30;
40;40;40;40;40;40;40;40;40;40;
50;50;50;50;50;50;50;50;50;50;
60;60;60;60;60;60;60;60;60;60;
70;70;70;70;70;70;70;70;70;70;
80;80;80;80;80;80;80;80;80;80;
90;90;90;90;90;90;90;90;90;90;
100;100;100;100;100;100;100;100;100;100;
10;10;10;10;10;10;10;10;10;10;
20;20;20;20;20;20;20;20;20;20;
30;30;30;30;30;30;30;30;30;30;
40;40;40;40;40;40;40;40;40;40;
50;50;50;50;50;50;50;50;50;50;
60;60;60;60;60;60;60;60;60;60;
70;70;70;70;70;70;70;70;70;70;
80;80;80;80;80;80;80;80;80;80;
90;90;90;90;90;90;90;90;90;90;
100;100;100;100;100;100;100;100;100;100;
10;10;10;10;10;10;10;10;10;10;
20;20;20;20;20;20;20;20;20;20;
30;30;30;30;30;30;30;30;30;30;
40;40;40;40;40;40;40;40;40;40;
50;50;50;50;50;50;50;50;50;50;
60;60;60;60;60;60;60;60;60;60;
70;70;70;70;70;70;70;70;70;70;
80;80;80;80;80;80;80;80;80;80;
90;90;90;90;90;90;90;90;90;90;
100;100;100;100;100;100;100;100;100;100;
10;10;10;10;10;10;10;10;10;10;
20;20;20;20;20;20;20;20;20;20;
30;30;30;30;30;30;30;30;30;30;
40;40;40;40;40;40;40;40;40;40;
50;50;50;50;50;50;50;50;50;50;
60;60;60;60;60;60;60;60;60;60;
70;70;70;70;70;70;70;70;70;70;
80;80;80;80;80;80;80;80;80;80;
90;90;90;90;90;90;90;90;90;90;
100;100;100;100;100;100;100;100;100;100;
10;10;10;10;10;10;10;10;10;10;
20;20;20;20;20;20;20;20;20;20;
30;30;30;30;30;30;30;30;30;30;
40;40;40;40;40;40;40;40;40;40;
50;50;50;50;50;50;50;50;50;50;
60;60;60;60;60;60;60;60;60;60;
70;70;70;70;70;70;70;70;70;70;
80;80;80;80;80;80;80;80;80;80;
90;90;90;90;90;90;90;90;90;90;
100;100;100;100;100;100;100;100;100;100;
10;10;10;10;10;10;10;10;10;10;
20;20;20;20;20;20;20;20;20;20;
30;30;30;30;30;30;30;30;30;30;
40;40;40;40;40;40;40;40;40;40;
50;50;50;50;50;50;50;50;50;50;
60;60;60;60;60;60;60;60;60;60;
70;70;70;70;70;70;70;70;70;70;
80;80;80;80;80;80;80;80;80;80;
90;90;90;90;90;90;90;90;90;90;
100;100;100;100;100;100;100;100;100;100;
10;10;10;10;10;10;10;10;10;10;
20;20;20;20;20;20;20;20;20;20;
30;30;30;30;30;30;30;30;30;30;
40;40;40;40;40;40;40;40;40;40;
50;50;50;50;50;50;50;50;50;50;
60;60;60;60;60;60;60;60;60;60;
70;70;70;70;70;70;70;70;70;70;
80;80;80;80;80;80;80;80;80;80;
90;90;90;90;90;90;90;90;90;90;
       };
      };
      float_Data @[1] {
       name="RActHz";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [700] 100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
100;10;20;30;40;50;60;70;80;90;
       };
      };
      float_Data @[2] {
       name="SRAvg";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [700] 1;0.1;0.2;0.30000001;0.40000001;0.5;0.60000002;0.69999999;0.80000001;0.89999998;
0.1;0.0099999998;0.02;0.029999999;0.039999999;0.050000001;0.059999999;0.07;0.079999998;0.090000004;
0.2;0.02;0.039999999;0.059999999;0.079999998;0.1;0.12;0.14;0.16;0.18000001;
0.30000001;0.029999999;0.059999999;0.090000004;0.12;0.15000001;0.18000001;0.20999999;0.23999999;0.27000001;
0.40000001;0.039999999;0.079999998;0.12;0.16;0.2;0.23999999;0.28;0.31999999;0.36000001;
0.5;0.050000001;0.1;0.15000001;0.2;0.25;0.30000001;0.34999999;0.40000001;0.44999999;
0.60000002;0.059999999;0.12;0.18000001;0.23999999;0.30000001;0.36000001;0.41999999;0.47999999;0.54000002;
0.69999999;0.07;0.14;0.20999999;0.28;0.34999999;0.41999999;0.49000001;0.56;0.63;
0.80000001;0.079999998;0.16;0.23999999;0.31999999;0.40000001;0.47999999;0.56;0.63999999;0.72000003;
0.89999998;0.090000004;0.18000001;0.27000001;0.36000001;0.44999999;0.54000002;0.63;0.72000003;0.81;
0.1;0.0099999998;0.02;0.029999999;0.039999999;0.050000001;0.059999999;0.07;0.079999998;0.090000004;
0.0099999998;0.001;0.0020000001;0.003;0.0040000002;0.0049999999;0.0060000001;0.0070000002;0.0080000004;0.0089999996;
0.02;0.0020000001;0.0040000002;0.0060000001;0.0080000004;0.0099999998;0.012;0.014;0.016000001;0.017999999;
0.029999999;0.003;0.0060000001;0.0089999996;0.012;0.015;0.017999999;0.021;0.024;0.027000001;
0.039999999;0.0040000002;0.0080000004;0.012;0.016000001;0.02;0.024;0.028000001;0.032000002;0.035999998;
0.050000001;0.0049999999;0.0099999998;0.015;0.02;0.025;0.029999999;0.035;0.039999999;0.045000002;
0.059999999;0.0060000001;0.012;0.017999999;0.024;0.029999999;0.035999998;0.041999999;0.048;0.054000001;
0.07;0.0070000002;0.014;0.021;0.028000001;0.035;0.041999999;0.048999999;0.056000002;0.063000001;
0.079999998;0.0080000004;0.016000001;0.024;0.032000002;0.039999999;0.048;0.056000002;0.064000003;0.071999997;
0.090000004;0.0089999996;0.017999999;0.027000001;0.035999998;0.045000002;0.054000001;0.063000001;0.071999997;0.081;
0.2;0.02;0.039999999;0.059999999;0.079999998;0.1;0.12;0.14;0.16;0.18000001;
0.02;0.0020000001;0.0040000002;0.0060000001;0.0080000004;0.0099999998;0.012;0.014;0.016000001;0.017999999;
0.039999999;0.0040000002;0.0080000004;0.012;0.016000001;0.02;0.024;0.028000001;0.032000002;0.035999998;
0.059999999;0.0060000001;0.012;0.017999999;0.024;0.029999999;0.035999998;0.041999999;0.048;0.054000001;
0.079999998;0.0080000004;0.016000001;0.024;0.032000002;0.039999999;0.048;0.056000002;0.064000003;0.071999997;
0.1;0.0099999998;0.02;0.029999999;0.039999999;0.050000001;0.059999999;0.07;0.079999998;0.090000004;
0.12;0.012;0.024;0.035999998;0.048;0.059999999;0.071999997;0.083999999;0.096000001;0.108;
0.14;0.014;0.028000001;0.041999999;0.056000002;0.07;0.083999999;0.097999997;0.112;0.126;
0.16;0.016000001;0.032000002;0.048;0.064000003;0.079999998;0.096000001;0.112;0.12800001;0.14399999;
0.18000001;0.017999999;0.035999998;0.054000001;0.071999997;0.090000004;0.108;0.126;0.14399999;0.162;
0.30000001;0.029999999;0.059999999;0.090000004;0.12;0.15000001;0.18000001;0.20999999;0.23999999;0.27000001;
0.029999999;0.003;0.0060000001;0.0089999996;0.012;0.015;0.017999999;0.021;0.024;0.027000001;
0.059999999;0.0060000001;0.012;0.017999999;0.024;0.029999999;0.035999998;0.041999999;0.048;0.054000001;
0.090000004;0.0089999996;0.017999999;0.027000001;0.035999998;0.045000002;0.054000001;0.063000001;0.071999997;0.081;
0.12;0.012;0.024;0.035999998;0.048;0.059999999;0.071999997;0.083999999;0.096000001;0.108;
0.15000001;0.015;0.029999999;0.045000002;0.059999999;0.075000003;0.090000004;0.105;0.12;0.13500001;
0.18000001;0.017999999;0.035999998;0.054000001;0.071999997;0.090000004;0.108;0.126;0.14399999;0.162;
0.20999999;0.021;0.041999999;0.063000001;0.083999999;0.105;0.126;0.147;0.168;0.189;
0.23999999;0.024;0.048;0.071999997;0.096000001;0.12;0.14399999;0.168;0.192;0.21600001;
0.27000001;0.027000001;0.054000001;0.081;0.108;0.13500001;0.162;0.189;0.21600001;0.243;
0.5;0.050000001;0.1;0.15000001;0.2;0.25;0.30000001;0.34999999;0.40000001;0.44999999;
0.050000001;0.0049999999;0.0099999998;0.015;0.02;0.025;0.029999999;0.035;0.039999999;0.045000002;
0.1;0.0099999998;0.02;0.029999999;0.039999999;0.050000001;0.059999999;0.07;0.079999998;0.090000004;
0.15000001;0.015;0.029999999;0.045000002;0.059999999;0.075000003;0.090000004;0.105;0.12;0.13500001;
0.2;0.02;0.039999999;0.059999999;0.079999998;0.1;0.12;0.14;0.16;0.18000001;
0.25;0.025;0.050000001;0.075000003;0.1;0.125;0.15000001;0.175;0.2;0.22499999;
0.30000001;0.029999999;0.059999999;0.090000004;0.12;0.15000001;0.18000001;0.20999999;0.23999999;0.27000001;
0.34999999;0.035;0.07;0.105;0.14;0.175;0.20999999;0.245;0.28;0.315;
0.40000001;0.039999999;0.079999998;0.12;0.16;0.2;0.23999999;0.28;0.31999999;0.36000001;
0.44999999;0.045000002;0.090000004;0.13500001;0.18000001;0.22499999;0.27000001;0.315;0.36000001;0.405;
0.050000001;0.0049999999;0.0099999998;0.015;0.02;0.025;0.029999999;0.035;0.039999999;0.045000002;
0.0049999999;0.00050000002;0.001;0.0015;0.0020000001;0.0024999999;0.003;0.0035000001;0.0040000002;0.0044999998;
0.0099999998;0.001;0.0020000001;0.003;0.0040000002;0.0049999999;0.0060000001;0.0070000002;0.0080000004;0.0089999996;
0.015;0.0015;0.003;0.0044999998;0.0060000001;0.0074999998;0.0089999996;0.0105;0.012;0.0135;
0.02;0.0020000001;0.0040000002;0.0060000001;0.0080000004;0.0099999998;0.012;0.014;0.016000001;0.017999999;
0.025;0.0024999999;0.0049999999;0.0074999998;0.0099999998;0.0125;0.015;0.0175;0.02;0.022500001;
0.029999999;0.003;0.0060000001;0.0089999996;0.012;0.015;0.017999999;0.021;0.024;0.027000001;
0.035;0.0035000001;0.0070000002;0.0105;0.014;0.0175;0.021;0.024499999;0.028000001;0.031500001;
0.039999999;0.0040000002;0.0080000004;0.012;0.016000001;0.02;0.024;0.028000001;0.032000002;0.035999998;
0.045000002;0.0044999998;0.0089999996;0.0135;0.017999999;0.022500001;0.027000001;0.031500001;0.035999998;0.0405;
0.80000001;0.079999998;0.16;0.23999999;0.31999999;0.40000001;0.47999999;0.56;0.63999999;0.72000003;
0.079999998;0.0080000004;0.016000001;0.024;0.032000002;0.039999999;0.048;0.056000002;0.064000003;0.071999997;
0.16;0.016000001;0.032000002;0.048;0.064000003;0.079999998;0.096000001;0.112;0.12800001;0.14399999;
0.23999999;0.024;0.048;0.071999997;0.096000001;0.12;0.14399999;0.168;0.192;0.21600001;
0.31999999;0.032000002;0.064000003;0.096000001;0.12800001;0.16;0.192;0.22400001;0.25600001;0.28799999;
0.40000001;0.039999999;0.079999998;0.12;0.16;0.2;0.23999999;0.28;0.31999999;0.36000001;
0.47999999;0.048;0.096000001;0.14399999;0.192;0.23999999;0.28799999;0.336;0.384;0.43200001;
0.56;0.056000002;0.112;0.168;0.22400001;0.28;0.336;0.39199999;0.44800001;0.50400001;
0.63999999;0.064000003;0.12800001;0.192;0.25600001;0.31999999;0.384;0.44800001;0.51200002;0.57599998;
0.72000003;0.071999997;0.14399999;0.21600001;0.28799999;0.36000001;0.43200001;0.50400001;0.57599998;0.648;
       };
      };
      float_Data @[3] {
       name="DurMsec";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [700] 1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
1000;1000;1000;1000;1000;1000;1000;1000;1000;1000;
100;100;100;100;100;100;100;100;100;100;
100;100;100;100;100;100;100;100;100;100;
100;100;100;100;100;100;100;100;100;100;
100;100;100;100;100;100;100;100;100;100;
100;100;100;100;100;100;100;100;100;100;
100;100;100;100;100;100;100;100;100;100;
100;100;100;100;100;100;100;100;100;100;
100;100;100;100;100;100;100;100;100;100;
100;100;100;100;100;100;100;100;100;100;
100;100;100;100;100;100;100;100;100;100;
200;200;200;200;200;200;200;200;200;200;
200;200;200;200;200;200;200;200;200;200;
200;200;200;200;200;200;200;200;200;200;
200;200;200;200;200;200;200;200;200;200;
200;200;200;200;200;200;200;200;200;200;
200;200;200;200;200;200;200;200;200;200;
200;200;200;200;200;200;200;200;200;200;
200;200;200;200;200;200;200;200;200;200;
200;200;200;200;200;200;200;200;200;200;
200;200;200;200;200;200;200;200;200;200;
300;300;300;300;300;300;300;300;300;300;
300;300;300;300;300;300;300;300;300;300;
300;300;300;300;300;300;300;300;300;300;
300;300;300;300;300;300;300;300;300;300;
300;300;300;300;300;300;300;300;300;300;
300;300;300;300;300;300;300;300;300;300;
300;300;300;300;300;300;300;300;300;300;
300;300;300;300;300;300;300;300;300;300;
300;300;300;300;300;300;300;300;300;300;
300;300;300;300;300;300;300;300;300;300;
500;500;500;500;500;500;500;500;500;500;
500;500;500;500;500;500;500;500;500;500;
500;500;500;500;500;500;500;500;500;500;
500;500;500;500;500;500;500;500;500;500;
500;500;500;500;500;500;500;500;500;500;
500;500;500;500;500;500;500;500;500;500;
500;500;500;500;500;500;500;500;500;500;
500;500;500;500;500;500;500;500;500;500;
500;500;500;500;500;500;500;500;500;500;
500;500;500;500;500;500;500;500;500;500;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
50;50;50;50;50;50;50;50;50;50;
800;800;800;800;800;800;800;800;800;800;
800;800;800;800;800;800;800;800;800;800;
800;800;800;800;800;800;800;800;800;800;
800;800;800;800;800;800;800;800;800;800;
800;800;800;800;800;800;800;800;800;800;
800;800;800;800;800;800;800;800;800;800;
800;800;800;800;800;800;800;800;800;800;
800;800;800;800;800;800;800;800;800;800;
800;800;800;800;800;800;800;800;800;800;
800;800;800;800;800;800;800;800;800;800;
       };
      };
      float_Data @[4] {
       name="dWt";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [700] 0.44269246;-0.29832727;-0.23457462;-0.175641;-0.099546492;0.00032204209;0.057066619;0.13096124;0.22338384;0.28712386;
0.019204436;-0.3328684;-0.33312136;-0.33223516;-0.29947037;-0.29228812;-0.25822753;-0.23122543;-0.17994088;-0.13370031;
0.13695973;-0.33277816;-0.29899806;-0.30109543;-0.30140239;-0.21834129;-0.19547361;-0.14767188;-0.074669302;-0.023500385;
0.20191389;-0.3279826;-0.29530042;-0.22548932;-0.21770555;-0.19303793;-0.17769784;-0.095746696;-0.018741431;0.037584364;
0.25886625;-0.32404608;-0.27527195;-0.22448915;-0.13507527;-0.11388499;-0.10128051;-0.041946113;0.032463491;0.097774565;
0.26739496;-0.31925708;-0.28103179;-0.2187286;-0.14647931;-0.04986614;-0.015443744;0.0059618335;0.075553954;0.14223069;
0.32424134;-0.31853873;-0.2685017;-0.19606501;-0.13896507;-0.059960783;0.031330526;0.06819433;0.1323604;0.175152;
0.34705848;-0.31446248;-0.26110774;-0.20268744;-0.13170558;-0.049815476;0.023916421;0.12155813;0.16975492;0.23067898;
0.39240807;-0.30948895;-0.2557326;-0.192756;-0.12461203;-0.042158544;0.036093891;0.1085822;0.224801;0.25277609;
0.40364188;-0.30565935;-0.25022143;-0.18971473;-0.12169892;-0.037516177;0.042169631;0.11445409;0.20493871;0.29036564;
-0.14325339;-0.26780063;-0.26780063;-0.2979694;-0.31564695;-0.30909437;-0.28999251;-0.25627202;-0.22451824;-0.19248456;
-0.15176874;-8.0408478e-05;-8.0408478e-05;-0.0047920365;-0.010922851;-0.019455614;-0.030720534;-0.045177877;-0.068253815;-0.094299614;
-0.2264263;-0.19419914;-0.19419914;-0.036607802;-0.063925326;-0.12184197;-0.1005128;-0.10304314;-0.15535432;-0.18086463;
-0.27039343;-0.20735627;-0.20735627;-0.29808944;-0.24035805;-0.17269403;-0.18495554;-0.19728762;-0.21911544;-0.23654276;
-0.30539387;-0.22144967;-0.22144967;-0.29143637;-0.31178421;-0.31276959;-0.24608678;-0.26585394;-0.24936634;-0.28230685;
-0.31155235;-0.23288888;-0.23288888;-0.28109258;-0.31349427;-0.30282921;-0.30359536;-0.31131417;-0.30291933;-0.30983466;
-0.29855865;-0.2420339;-0.2420339;-0.28728515;-0.31334895;-0.30868548;-0.28538507;-0.2847262;-0.295178;-0.30340832;
-0.27499837;-0.24917048;-0.24917048;-0.28679901;-0.31372982;-0.30932814;-0.29059178;-0.2607705;-0.25994653;-0.23884159;
-0.18577403;-0.25624472;-0.25624472;-0.29211098;-0.31518489;-0.3109296;-0.29011279;-0.26215678;-0.22993463;-0.21958178;
-0.17218655;-0.25758058;-0.25758058;-0.29139012;-0.31338888;-0.31141847;-0.28963763;-0.26306301;-0.23425812;-0.19679302;
-0.0061457772;-0.29540271;-0.31950337;-0.32166344;-0.30327803;-0.26296419;-0.22767693;-0.17614883;-0.13008541;-0.1032874;
-0.30459541;-0.19049042;-0.12057799;-0.121342;-0.12272614;-0.15498024;-0.19453877;-0.1792168;-0.2431404;-0.26041073;
-0.30906409;-0.21781427;-0.29293782;-0.17724794;-0.19073969;-0.26502508;-0.25589389;-0.28107768;-0.31040758;-0.31334585;
-0.28778487;-0.23546439;-0.27839941;-0.31877488;-0.30974776;-0.29192072;-0.29882091;-0.31177467;-0.3158955;-0.31657654;
-0.24990243;-0.25002307;-0.2934472;-0.32023007;-0.30063397;-0.30545777;-0.31976765;-0.31312293;-0.30658561;-0.29839736;
-0.23558885;-0.26182789;-0.29780096;-0.32046241;-0.30944699;-0.26914626;-0.26239794;-0.28222674;-0.28091377;-0.26855201;
-0.1797567;-0.27099377;-0.30812496;-0.32230109;-0.31112951;-0.27855819;-0.233262;-0.21988624;-0.21878427;-0.2368874;
-0.14546663;-0.27541083;-0.30895501;-0.32183713;-0.31073934;-0.27513903;-0.23843676;-0.18652362;-0.17532045;-0.15785176;
-0.060909331;-0.28245789;-0.31166822;-0.32211691;-0.30843121;-0.274553;-0.23423201;-0.18956679;-0.13573915;-0.13401324;
-0.044771254;-0.28810757;-0.31406301;-0.32264024;-0.31066543;-0.27556556;-0.23261935;-0.18702215;-0.14092296;-0.1068576;
0.094307363;-0.32025009;-0.3239786;-0.30785996;-0.27090377;-0.2153278;-0.17346758;-0.12172037;-0.015237274;-0.020767631;
-0.30723041;-0.24060708;-0.17634267;-0.19188088;-0.21394116;-0.24500948;-0.28593391;-0.28035158;-0.32405597;-0.3185057;
-0.24353391;-0.25926501;-0.31411558;-0.25171381;-0.25596625;-0.3150956;-0.31156379;-0.32128197;-0.28245538;-0.30687755;
-0.20285696;-0.2775932;-0.3090362;-0.31624943;-0.32393903;-0.32330257;-0.32249898;-0.31581408;-0.24083644;-0.27438313;
-0.15334183;-0.28876525;-0.31957215;-0.319251;-0.27752846;-0.27903897;-0.30503982;-0.28674012;-0.2078256;-0.23619109;
-0.13770074;-0.29811698;-0.32103914;-0.32147866;-0.28791159;-0.23243505;-0.21899289;-0.24241322;-0.17241257;-0.19388586;
-0.076646507;-0.30622298;-0.32552582;-0.31704348;-0.28615886;-0.24176103;-0.18462962;-0.17300111;-0.10850281;-0.1607731;
-0.041242063;-0.30736417;-0.32531255;-0.31743783;-0.28593189;-0.23655528;-0.18883437;-0.13635737;-0.065573752;-0.084472835;
0.03579241;-0.3120932;-0.32569772;-0.31424409;-0.28296119;-0.23494667;-0.18360275;-0.14073569;-0.021411361;-0.060818493;
0.051627338;-0.31541413;-0.32579833;-0.31362396;-0.28179806;-0.23407346;-0.18090576;-0.13783628;-0.02979988;-0.027308287;
0.23385519;-0.32835168;-0.30232483;-0.26577169;-0.2109434;-0.13834721;-0.086968243;-0.027428569;0.044779956;0.090850532;
-0.20613116;-0.29657274;-0.25331312;-0.26925713;-0.30586499;-0.32019776;-0.32244962;-0.32281154;-0.30523759;-0.28795582;
-0.10955638;-0.30736166;-0.32626182;-0.31649047;-0.32123512;-0.31447989;-0.31368834;-0.28116232;-0.23715383;-0.21375257;
-0.055526316;-0.32085127;-0.32918721;-0.29297835;-0.30265659;-0.30103964;-0.28823298;-0.24289995;-0.19759601;-0.17003196;
0.0033110958;-0.3242138;-0.32500142;-0.29541355;-0.22983032;-0.22349554;-0.23507518;-0.19768459;-0.15744942;-0.11767107;
0.01730424;-0.32759744;-0.32570738;-0.29461557;-0.24073344;-0.16878718;-0.14305252;-0.14776701;-0.11396676;-0.074236572;
0.081220448;-0.32868046;-0.31963581;-0.28219312;-0.23604721;-0.17766625;-0.10513717;-0.084184468;-0.050411522;-0.038619578;
0.11401623;-0.329449;-0.31770414;-0.2851724;-0.23256844;-0.17024297;-0.11005634;-0.038654983;-0.0083264727;0.031189738;
0.17673653;-0.32980341;-0.31446797;-0.27851266;-0.22657186;-0.16648787;-0.10207242;-0.046843708;0.042376935;0.055355132;
0.19056362;-0.32991844;-0.31250566;-0.27581209;-0.22815377;-0.16406471;-0.097689331;-0.042042673;0.028478919;0.091221035;
-0.24295241;-0.24180144;-0.24180144;-0.24180144;-0.24180144;-0.29991657;-0.30409771;-0.28379542;-0.28485948;-0.23481017;
-0.049819648;-8.0408478e-05;-8.0408478e-05;-8.0408478e-05;-8.0408478e-05;-0.0031498093;-0.0038557667;-0.014287891;-0.016012492;-0.053288281;
-0.049819648;-8.0408478e-05;-8.0408478e-05;-8.0408478e-05;-8.0408478e-05;-0.0031498093;-0.0038557667;-0.014287891;-0.016012492;-0.053288281;
-0.049819648;-8.0408478e-05;-8.0408478e-05;-8.0408478e-05;-8.0408478e-05;-0.0031498093;-0.0038557667;-0.014287891;-0.016012492;-0.053288281;
-0.096277058;-0.20182687;-0.20182687;-0.20182687;-0.20182687;-0.26549786;-0.048668444;-0.14409488;-0.048561156;-0.1604293;
-0.13116425;-0.19767708;-0.19767708;-0.19767708;-0.19767708;-0.29637116;-0.28453642;-0.23116881;-0.13583452;-0.2417137;
-0.24046403;-0.21897334;-0.21897334;-0.21897334;-0.21897334;-0.29802769;-0.30145627;-0.29321009;-0.28549713;-0.30210334;
-0.28399438;-0.21922201;-0.21922201;-0.21922201;-0.21922201;-0.29761773;-0.30143315;-0.28321403;-0.30100578;-0.27114779;
-0.27560502;-0.23033828;-0.23033828;-0.23033828;-0.23033828;-0.29884118;-0.30319363;-0.28434855;-0.28886539;-0.2505582;
-0.26338452;-0.23256713;-0.23256713;-0.23256713;-0.23256713;-0.29735452;-0.30336016;-0.28489286;-0.2866208;-0.23648065;
0.37252611;-0.31278652;-0.26028806;-0.20883793;-0.13972539;-0.049828947;0.0045786481;0.077036083;0.16238922;0.21652418;
-0.062728107;-0.32889909;-0.3235628;-0.31722265;-0.32283872;-0.31650192;-0.2938835;-0.27360064;-0.22660369;-0.19221443;
0.050429165;-0.3321144;-0.31368846;-0.32290095;-0.32177991;-0.25692838;-0.24524492;-0.1938929;-0.13309997;-0.093675077;
0.11294717;-0.33198792;-0.31248945;-0.25126952;-0.25134331;-0.23534542;-0.22094041;-0.14849406;-0.082461894;-0.039561212;
0.17269236;-0.33136338;-0.29755932;-0.25054806;-0.16959637;-0.15375751;-0.15217477;-0.0950225;-0.036004484;0.018832264;
0.18301362;-0.32878023;-0.30123633;-0.24767536;-0.18079096;-0.092962801;-0.064475;-0.04711467;0.0093935113;0.063474596;
0.2432465;-0.32811922;-0.29118782;-0.22786933;-0.17339116;-0.1017763;-0.020206155;0.017747579;0.069826066;0.098247468;
0.26917309;-0.3251608;-0.28391677;-0.23292202;-0.1678676;-0.092997372;-0.02650434;0.066758335;0.10873741;0.15916294;
0.31996292;-0.32120425;-0.27840191;-0.22438747;-0.16033429;-0.087040126;-0.015602889;0.055784643;0.16296715;0.18180293;
0.33161944;-0.31906313;-0.27516443;-0.22166568;-0.16021758;-0.083347857;-0.010343732;0.061167538;0.14462692;0.21935648;
       };
      };
      float_Data @[5] {
       name="dWt_fun";
       desc="delta-weight computed from the learning rule function";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [700] 0.80000001;-0.2;0;0.1;0.2;0.30000001;0.40000001;0.5;0.60000002;0.69999999;
-0.2;-0.11333334;-0.22666667;-0.34;-0.31999999;-0.30000001;-0.28;-0.25999999;-0.23999999;-0.22;
0;-0.22666667;-0.31999999;-0.28;-0.23999999;-0.2;-0.16;-0.12;-0.079999998;-0.039999999;
0.1;-0.34;-0.28;-0.22;-0.16;-0.1;-0.039999999;0.0099999998;0.039999999;0.07;
0.2;-0.31999999;-0.23999999;-0.16;-0.079999998;0;0.039999999;0.079999998;0.12;0.16;
0.30000001;-0.30000001;-0.2;-0.1;0;0.050000001;0.1;0.15000001;0.2;0.25;
0.40000001;-0.28;-0.16;-0.039999999;0.039999999;0.1;0.16;0.22;0.28;0.34;
0.5;-0.25999999;-0.12;0.0099999998;0.079999998;0.15000001;0.22;0.28999999;0.36000001;0.43000001;
0.60000002;-0.23999999;-0.079999998;0.039999999;0.12;0.2;0.28;0.36000001;0.44;0.51999998;
0.69999999;-0.22;-0.039999999;0.07;0.16;0.25;0.34;0.43000001;0.51999998;0.61000001;
-0.2;-0.11333334;-0.22666667;-0.34;-0.31999999;-0.30000001;-0.28;-0.25999999;-0.23999999;-0.22;
-0.11333334;-0.011333333;-0.022666667;-0.034000002;-0.045333333;-0.056666669;-0.068000004;-0.079333335;-0.090666667;-0.102;
-0.22666667;-0.022666667;-0.045333333;-0.068000004;-0.090666667;-0.11333334;-0.13600001;-0.15866667;-0.18133333;-0.204;
-0.34;-0.034000002;-0.068000004;-0.102;-0.13600001;-0.17;-0.204;-0.23800001;-0.27200001;-0.30599999;
-0.31999999;-0.045333333;-0.090666667;-0.13600001;-0.18133333;-0.22666667;-0.27200001;-0.31733334;-0.336;-0.32800001;
-0.30000001;-0.056666669;-0.11333334;-0.17;-0.22666667;-0.28333333;-0.34;-0.33000001;-0.31999999;-0.31;
-0.28;-0.068000004;-0.13600001;-0.204;-0.27200001;-0.34;-0.32800001;-0.31600001;-0.30399999;-0.292;
-0.25999999;-0.079333335;-0.15866667;-0.23800001;-0.31733334;-0.33000001;-0.31600001;-0.30199999;-0.28799999;-0.27399999;
-0.23999999;-0.090666667;-0.18133333;-0.27200001;-0.336;-0.31999999;-0.30399999;-0.28799999;-0.27200001;-0.25600001;
-0.22;-0.102;-0.204;-0.30599999;-0.32800001;-0.31;-0.292;-0.27399999;-0.25600001;-0.23800001;
0;-0.22666667;-0.31999999;-0.28;-0.23999999;-0.2;-0.16;-0.12;-0.079999998;-0.039999999;
-0.22666667;-0.022666667;-0.045333333;-0.068000004;-0.090666667;-0.11333334;-0.13600001;-0.15866667;-0.18133333;-0.204;
-0.31999999;-0.045333333;-0.090666667;-0.13600001;-0.18133333;-0.22666667;-0.27200001;-0.31733334;-0.336;-0.32800001;
-0.28;-0.068000004;-0.13600001;-0.204;-0.27200001;-0.34;-0.32800001;-0.31600001;-0.30399999;-0.292;
-0.23999999;-0.090666667;-0.18133333;-0.27200001;-0.336;-0.31999999;-0.30399999;-0.28799999;-0.27200001;-0.25600001;
-0.2;-0.11333334;-0.22666667;-0.34;-0.31999999;-0.30000001;-0.28;-0.25999999;-0.23999999;-0.22;
-0.16;-0.13600001;-0.27200001;-0.32800001;-0.30399999;-0.28;-0.25600001;-0.23199999;-0.208;-0.184;
-0.12;-0.15866667;-0.31733334;-0.31600001;-0.28799999;-0.25999999;-0.23199999;-0.204;-0.176;-0.148;
-0.079999998;-0.18133333;-0.336;-0.30399999;-0.27200001;-0.23999999;-0.208;-0.176;-0.14399999;-0.112;
-0.039999999;-0.204;-0.32800001;-0.292;-0.25600001;-0.22;-0.184;-0.148;-0.112;-0.075999998;
0.1;-0.34;-0.28;-0.22;-0.16;-0.1;-0.039999999;0.0099999998;0.039999999;0.07;
-0.34;-0.034000002;-0.068000004;-0.102;-0.13600001;-0.17;-0.204;-0.23800001;-0.27200001;-0.30599999;
-0.28;-0.068000004;-0.13600001;-0.204;-0.27200001;-0.34;-0.32800001;-0.31600001;-0.30399999;-0.292;
-0.22;-0.102;-0.204;-0.30599999;-0.32800001;-0.31;-0.292;-0.27399999;-0.25600001;-0.23800001;
-0.16;-0.13600001;-0.27200001;-0.32800001;-0.30399999;-0.28;-0.25600001;-0.23199999;-0.208;-0.184;
-0.1;-0.17;-0.34;-0.31;-0.28;-0.25;-0.22;-0.19;-0.16;-0.13;
-0.039999999;-0.204;-0.32800001;-0.292;-0.25600001;-0.22;-0.184;-0.148;-0.112;-0.075999998;
0.0099999998;-0.23800001;-0.31600001;-0.27399999;-0.23199999;-0.19;-0.148;-0.106;-0.064000003;-0.022;
0.039999999;-0.27200001;-0.30399999;-0.25600001;-0.208;-0.16;-0.112;-0.064000003;-0.016000001;0.016000001;
0.07;-0.30599999;-0.292;-0.23800001;-0.184;-0.13;-0.075999998;-0.022;0.016000001;0.043000001;
0.30000001;-0.30000001;-0.2;-0.1;0;0.050000001;0.1;0.15000001;0.2;0.25;
-0.30000001;-0.056666669;-0.11333334;-0.17;-0.22666667;-0.28333333;-0.34;-0.33000001;-0.31999999;-0.31;
-0.2;-0.11333334;-0.22666667;-0.34;-0.31999999;-0.30000001;-0.28;-0.25999999;-0.23999999;-0.22;
-0.1;-0.17;-0.34;-0.31;-0.28;-0.25;-0.22;-0.19;-0.16;-0.13;
0;-0.22666667;-0.31999999;-0.28;-0.23999999;-0.2;-0.16;-0.12;-0.079999998;-0.039999999;
0.050000001;-0.28333333;-0.30000001;-0.25;-0.2;-0.15000001;-0.1;-0.050000001;0;0.025;
0.1;-0.34;-0.28;-0.22;-0.16;-0.1;-0.039999999;0.0099999998;0.039999999;0.07;
0.15000001;-0.33000001;-0.25999999;-0.19;-0.12;-0.050000001;0.0099999998;0.045000002;0.079999998;0.115;
0.2;-0.31999999;-0.23999999;-0.16;-0.079999998;0;0.039999999;0.079999998;0.12;0.16;
0.25;-0.31;-0.22;-0.13;-0.039999999;0.025;0.07;0.115;0.16;0.205;
-0.30000001;-0.056666669;-0.11333334;-0.17;-0.22666667;-0.28333333;-0.34;-0.33000001;-0.31999999;-0.31;
-0.056666669;-0.0056666667;-0.011333333;-0.017000001;-0.022666667;-0.028333334;-0.034000002;-0.039666668;-0.045333333;-0.050999999;
-0.11333334;-0.011333333;-0.022666667;-0.034000002;-0.045333333;-0.056666669;-0.068000004;-0.079333335;-0.090666667;-0.102;
-0.17;-0.017000001;-0.034000002;-0.050999999;-0.068000004;-0.085000001;-0.102;-0.119;-0.13600001;-0.153;
-0.22666667;-0.022666667;-0.045333333;-0.068000004;-0.090666667;-0.11333334;-0.13600001;-0.15866667;-0.18133333;-0.204;
-0.28333333;-0.028333334;-0.056666669;-0.085000001;-0.11333334;-0.14166667;-0.17;-0.19833334;-0.22666667;-0.255;
-0.34;-0.034000002;-0.068000004;-0.102;-0.13600001;-0.17;-0.204;-0.23800001;-0.27200001;-0.30599999;
-0.33000001;-0.039666668;-0.079333335;-0.119;-0.15866667;-0.19833334;-0.23800001;-0.27766666;-0.31733334;-0.33700001;
-0.31999999;-0.045333333;-0.090666667;-0.13600001;-0.18133333;-0.22666667;-0.27200001;-0.31733334;-0.336;-0.32800001;
-0.31;-0.050999999;-0.102;-0.153;-0.204;-0.255;-0.30599999;-0.33700001;-0.32800001;-0.31900001;
0.60000002;-0.23999999;-0.079999998;0.039999999;0.12;0.2;0.28;0.36000001;0.44;0.51999998;
-0.23999999;-0.090666667;-0.18133333;-0.27200001;-0.336;-0.31999999;-0.30399999;-0.28799999;-0.27200001;-0.25600001;
-0.079999998;-0.18133333;-0.336;-0.30399999;-0.27200001;-0.23999999;-0.208;-0.176;-0.14399999;-0.112;
0.039999999;-0.27200001;-0.30399999;-0.25600001;-0.208;-0.16;-0.112;-0.064000003;-0.016000001;0.016000001;
0.12;-0.336;-0.27200001;-0.208;-0.14399999;-0.079999998;-0.016000001;0.024;0.056000002;0.088;
0.2;-0.31999999;-0.23999999;-0.16;-0.079999998;0;0.039999999;0.079999998;0.12;0.16;
0.28;-0.30399999;-0.208;-0.112;-0.016000001;0.039999999;0.088;0.13600001;0.184;0.23199999;
0.36000001;-0.28799999;-0.176;-0.064000003;0.024;0.079999998;0.13600001;0.192;0.248;0.30399999;
0.44;-0.27200001;-0.14399999;-0.016000001;0.056000002;0.12;0.184;0.248;0.31200001;0.37599999;
0.51999998;-0.25600001;-0.112;0.016000001;0.088;0.16;0.23199999;0.30399999;0.37599999;0.44800001;
       };
      };
      float_Data @[6] {
       name="regress_line";
       desc="dWt = 0.686151 * dWt_fun + -0.096684; r = 0.894612; r^2 = 0.800331";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [700] 0.45223659;-0.23391411;-0.096683972;-0.0280689;0.040546171;0.10916125;0.17777631;0.24639139;0.31500646;0.38362151;
-0.23391411;-0.17444772;-0.25221148;-0.32997522;-0.3162522;-0.30252919;-0.28880617;-0.27508315;-0.26136014;-0.24763712;
-0.096683972;-0.25221148;-0.3162522;-0.28880617;-0.26136014;-0.23391411;-0.20646808;-0.17902206;-0.15157603;-0.12413;
-0.0280689;-0.32997522;-0.28880617;-0.24763712;-0.20646808;-0.16529904;-0.12413;-0.089822464;-0.069237947;-0.04865342;
0.040546171;-0.3162522;-0.26136014;-0.20646808;-0.15157603;-0.096683972;-0.069237947;-0.041791916;-0.014345884;0.01310014;
0.10916125;-0.30252919;-0.23391411;-0.16529904;-0.096683972;-0.062376436;-0.0280689;0.0062386394;0.040546171;0.074853711;
0.17777631;-0.28880617;-0.20646808;-0.12413;-0.069237947;-0.0280689;0.01310014;0.054269187;0.095438235;0.13660729;
0.24639139;-0.27508315;-0.17902206;-0.089822464;-0.041791916;0.0062386394;0.054269187;0.10229973;0.15033031;0.19836083;
0.31500646;-0.26136014;-0.15157603;-0.069237947;-0.014345884;0.040546171;0.095438235;0.15033031;0.20522234;0.2601144;
0.38362151;-0.24763712;-0.12413;-0.04865342;0.01310014;0.074853711;0.13660729;0.19836083;0.2601144;0.32186797;
-0.23391411;-0.17444772;-0.25221148;-0.32997522;-0.3162522;-0.30252919;-0.28880617;-0.27508315;-0.26136014;-0.24763712;
-0.17444772;-0.10446034;-0.11223672;-0.1200131;-0.12778947;-0.13556585;-0.14334223;-0.15111861;-0.15889497;-0.16667134;
-0.25221148;-0.11223672;-0.12778947;-0.14334223;-0.15889497;-0.17444772;-0.19000047;-0.20555323;-0.22110596;-0.23665872;
-0.32997522;-0.1200131;-0.14334223;-0.16667134;-0.19000047;-0.2133296;-0.23665872;-0.25998786;-0.28331697;-0.30664608;
-0.3162522;-0.12778947;-0.15889497;-0.19000047;-0.22110596;-0.25221148;-0.28331697;-0.31442249;-0.3272306;-0.32174143;
-0.30252919;-0.13556585;-0.17444772;-0.2133296;-0.25221148;-0.29109335;-0.32997522;-0.32311371;-0.3162522;-0.30939069;
-0.28880617;-0.14334223;-0.19000047;-0.23665872;-0.28331697;-0.32997522;-0.32174143;-0.31350762;-0.3052738;-0.29703999;
-0.27508315;-0.15111861;-0.20555323;-0.25998786;-0.31442249;-0.32311371;-0.31350762;-0.30390149;-0.29429537;-0.28468928;
-0.26136014;-0.15889497;-0.22110596;-0.28331697;-0.3272306;-0.3162522;-0.3052738;-0.29429537;-0.28331697;-0.27233857;
-0.24763712;-0.16667134;-0.23665872;-0.30664608;-0.32174143;-0.30939069;-0.29703999;-0.28468928;-0.27233857;-0.25998786;
-0.096683972;-0.25221148;-0.3162522;-0.28880617;-0.26136014;-0.23391411;-0.20646808;-0.17902206;-0.15157603;-0.12413;
-0.25221148;-0.11223672;-0.12778947;-0.14334223;-0.15889497;-0.17444772;-0.19000047;-0.20555323;-0.22110596;-0.23665872;
-0.3162522;-0.12778947;-0.15889497;-0.19000047;-0.22110596;-0.25221148;-0.28331697;-0.31442249;-0.3272306;-0.32174143;
-0.28880617;-0.14334223;-0.19000047;-0.23665872;-0.28331697;-0.32997522;-0.32174143;-0.31350762;-0.3052738;-0.29703999;
-0.26136014;-0.15889497;-0.22110596;-0.28331697;-0.3272306;-0.3162522;-0.3052738;-0.29429537;-0.28331697;-0.27233857;
-0.23391411;-0.17444772;-0.25221148;-0.32997522;-0.3162522;-0.30252919;-0.28880617;-0.27508315;-0.26136014;-0.24763712;
-0.20646808;-0.19000047;-0.28331697;-0.32174143;-0.3052738;-0.28880617;-0.27233857;-0.25587094;-0.23940334;-0.22293571;
-0.17902206;-0.20555323;-0.31442249;-0.31350762;-0.29429537;-0.27508315;-0.25587094;-0.23665872;-0.21744651;-0.19823429;
-0.15157603;-0.22110596;-0.3272306;-0.3052738;-0.28331697;-0.26136014;-0.23940334;-0.21744651;-0.19548967;-0.17353286;
-0.12413;-0.23665872;-0.32174143;-0.29703999;-0.27233857;-0.24763712;-0.22293571;-0.19823429;-0.17353286;-0.14883143;
-0.0280689;-0.32997522;-0.28880617;-0.24763712;-0.20646808;-0.16529904;-0.12413;-0.089822464;-0.069237947;-0.04865342;
-0.32997522;-0.1200131;-0.14334223;-0.16667134;-0.19000047;-0.2133296;-0.23665872;-0.25998786;-0.28331697;-0.30664608;
-0.28880617;-0.14334223;-0.19000047;-0.23665872;-0.28331697;-0.32997522;-0.32174143;-0.31350762;-0.3052738;-0.29703999;
-0.24763712;-0.16667134;-0.23665872;-0.30664608;-0.32174143;-0.30939069;-0.29703999;-0.28468928;-0.27233857;-0.25998786;
-0.20646808;-0.19000047;-0.28331697;-0.32174143;-0.3052738;-0.28880617;-0.27233857;-0.25587094;-0.23940334;-0.22293571;
-0.16529904;-0.2133296;-0.32997522;-0.30939069;-0.28880617;-0.26822165;-0.24763712;-0.2270526;-0.20646808;-0.18588357;
-0.12413;-0.23665872;-0.32174143;-0.29703999;-0.27233857;-0.24763712;-0.22293571;-0.19823429;-0.17353286;-0.14883143;
-0.089822464;-0.25998786;-0.31350762;-0.28468928;-0.25587094;-0.2270526;-0.19823429;-0.16941595;-0.14059761;-0.11177929;
-0.069237947;-0.28331697;-0.3052738;-0.27233857;-0.23940334;-0.20646808;-0.17353286;-0.14059761;-0.10766238;-0.085705563;
-0.04865342;-0.30664608;-0.29703999;-0.25998786;-0.22293571;-0.18588357;-0.14883143;-0.11177929;-0.085705563;-0.067179486;
0.10916125;-0.30252919;-0.23391411;-0.16529904;-0.096683972;-0.062376436;-0.0280689;0.0062386394;0.040546171;0.074853711;
-0.30252919;-0.13556585;-0.17444772;-0.2133296;-0.25221148;-0.29109335;-0.32997522;-0.32311371;-0.3162522;-0.30939069;
-0.23391411;-0.17444772;-0.25221148;-0.32997522;-0.3162522;-0.30252919;-0.28880617;-0.27508315;-0.26136014;-0.24763712;
-0.16529904;-0.2133296;-0.32997522;-0.30939069;-0.28880617;-0.26822165;-0.24763712;-0.2270526;-0.20646808;-0.18588357;
-0.096683972;-0.25221148;-0.3162522;-0.28880617;-0.26136014;-0.23391411;-0.20646808;-0.17902206;-0.15157603;-0.12413;
-0.062376436;-0.29109335;-0.30252919;-0.26822165;-0.23391411;-0.19960658;-0.16529904;-0.1309915;-0.096683972;-0.079530202;
-0.0280689;-0.32997522;-0.28880617;-0.24763712;-0.20646808;-0.16529904;-0.12413;-0.089822464;-0.069237947;-0.04865342;
0.0062386394;-0.32311371;-0.27508315;-0.2270526;-0.17902206;-0.1309915;-0.089822464;-0.065807186;-0.041791916;-0.017776638;
0.040546171;-0.3162522;-0.26136014;-0.20646808;-0.15157603;-0.096683972;-0.069237947;-0.041791916;-0.014345884;0.01310014;
0.074853711;-0.30939069;-0.24763712;-0.18588357;-0.12413;-0.079530202;-0.04865342;-0.017776638;0.01310014;0.043976925;
-0.30252919;-0.13556585;-0.17444772;-0.2133296;-0.25221148;-0.29109335;-0.32997522;-0.32311371;-0.3162522;-0.30939069;
-0.13556585;-0.10057216;-0.10446034;-0.10834853;-0.11223672;-0.11612491;-0.1200131;-0.12390129;-0.12778947;-0.13167766;
-0.17444772;-0.10446034;-0.11223672;-0.1200131;-0.12778947;-0.13556585;-0.14334223;-0.15111861;-0.15889497;-0.16667134;
-0.2133296;-0.10834853;-0.1200131;-0.13167766;-0.14334223;-0.15500678;-0.16667134;-0.17833591;-0.19000047;-0.20166503;
-0.25221148;-0.11223672;-0.12778947;-0.14334223;-0.15889497;-0.17444772;-0.19000047;-0.20555323;-0.22110596;-0.23665872;
-0.29109335;-0.11612491;-0.13556585;-0.15500678;-0.17444772;-0.19388866;-0.2133296;-0.23277053;-0.25221148;-0.2716524;
-0.32997522;-0.1200131;-0.14334223;-0.16667134;-0.19000047;-0.2133296;-0.23665872;-0.25998786;-0.28331697;-0.30664608;
-0.32311371;-0.12390129;-0.15111861;-0.17833591;-0.20555323;-0.23277053;-0.25998786;-0.28720516;-0.31442249;-0.32791677;
-0.3162522;-0.12778947;-0.15889497;-0.19000047;-0.22110596;-0.25221148;-0.28331697;-0.31442249;-0.3272306;-0.32174143;
-0.30939069;-0.13167766;-0.16667134;-0.20166503;-0.23665872;-0.2716524;-0.30664608;-0.32791677;-0.32174143;-0.31556606;
0.31500646;-0.26136014;-0.15157603;-0.069237947;-0.014345884;0.040546171;0.095438235;0.15033031;0.20522234;0.2601144;
-0.26136014;-0.15889497;-0.22110596;-0.28331697;-0.3272306;-0.3162522;-0.3052738;-0.29429537;-0.28331697;-0.27233857;
-0.15157603;-0.22110596;-0.3272306;-0.3052738;-0.28331697;-0.26136014;-0.23940334;-0.21744651;-0.19548967;-0.17353286;
-0.069237947;-0.28331697;-0.3052738;-0.27233857;-0.23940334;-0.20646808;-0.17353286;-0.14059761;-0.10766238;-0.085705563;
-0.014345884;-0.3272306;-0.28331697;-0.23940334;-0.19548967;-0.15157603;-0.10766238;-0.080216356;-0.058259528;-0.036302708;
0.040546171;-0.3162522;-0.26136014;-0.20646808;-0.15157603;-0.096683972;-0.069237947;-0.041791916;-0.014345884;0.01310014;
0.095438235;-0.3052738;-0.23940334;-0.17353286;-0.10766238;-0.069237947;-0.036302708;-0.0033674687;0.029567756;0.062502988;
0.15033031;-0.29429537;-0.21744651;-0.14059761;-0.080216356;-0.041791916;-0.0033674687;0.035056971;0.073481403;0.11190585;
0.20522234;-0.28331697;-0.19548967;-0.10766238;-0.058259528;-0.014345884;0.029567756;0.073481403;0.11739507;0.16130868;
0.2601144;-0.27233857;-0.17353286;-0.085705563;-0.036302708;0.01310014;0.062502988;0.11190585;0.16130868;0.21071157;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[4] {
     name="ParamSearch";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="theta_P";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1800] 0.2;0.2;0.2;0.20999999;0.19;0.19;0.25;0.20999999;0.25999999;0.20999999;
0.2;0.25999999;0.25;0.19;0.19;0.2;0.25;0.25999999;0.27000001;0.23999999;
0.27000001;0.20999999;0.23999999;0.25;0.19;0.25999999;0.20999999;0.22;0.22;0.23999999;
0.27000001;0.23999999;0.27000001;0.25999999;0.18000001;0.19;0.18000001;0.2;0.2;0.28;
0.25;0.18000001;0.20999999;0.22;0.23;0.22;0.28;0.23;0.18000001;0.28;
0.25;0.23;0.19;0.23999999;0.27000001;0.18000001;0.25999999;0.28;0.23999999;0.22;
0.23;0.18000001;0.2;0.27000001;0.20999999;0.23;0.25999999;0.28999999;0.20999999;0.19;
0.22;0.23;0.28999999;0.28;0.23;0.28999999;0.25;0.19;0.22;0.23;
0.23999999;0.2;0.27000001;0.25;0.17;0.22;0.28;0.18000001;0.18000001;0.22;
0.17;0.17;0.22;0.25999999;0.23;0.28999999;0.23;0.23;0.28999999;0.23;
0.2;0.17;0.22;0.17;0.20999999;0.22;0.23999999;0.19;0.23999999;0.25;
0.18000001;0.17;0.28;0.27000001;0.22;0.22;0.20999999;0.19;0.27000001;0.22;
0.23;0.23;0.17;0.28999999;0.28;0.18000001;0.25999999;0.23999999;0.20999999;0.25999999;
0.23999999;0.20999999;0.23;0.2;0.17;0.28999999;0.23999999;0.20999999;0.20999999;0.20999999;
0.2;0.22;0.18000001;0.23999999;0.19;0.22;0.23999999;0.23;0.25;0.28;
0.25;0.27000001;0.23;0.28999999;0.17;0.23;0.16;0.22;0.16;0.20999999;
0.17;0.16;0.20999999;0.23999999;0.25999999;0.16;0.23999999;0.16;0.2;0.18000001;
0.20999999;0.22;0.23999999;0.18000001;0.22;0.20999999;0.19;0.16;0.19;0.23999999;
0.28;0.23;0.16;0.2;0.25;0.23;0.17;0.28999999;0.27000001;0.20999999;
0.2;0.23;0.25;0.2;0.25;0.22;0.23999999;0.22;0.17;0.20999999;
0.25999999;0.2;0.25;0.16;0.23999999;0.16;0.2;0.20999999;0.22;0.2;
0.18000001;0.25;0.20999999;0.2;0.17;0.23;0.19;0.25;0.28;0.23999999;
0.28999999;0.23;0.25;0.27000001;0.2;0.16;0.23;0.23999999;0.2;0.22;
0.25999999;0.20999999;0.18000001;0.16;0.15000001;0.22;0.25;0.15000001;0.18000001;0.25;
0.2;0.17;0.15000001;0.17;0.15000001;0.16;0.20999999;0.2;0.20999999;0.19;
0.19;0.23;0.15000001;0.28;0.28999999;0.22;0.19;0.19;0.23999999;0.19;
0.23;0.25999999;0.25;0.27000001;0.15000001;0.2;0.23999999;0.23;0.22;0.25999999;
0.23999999;0.19;0.25999999;0.15000001;0.20999999;0.22;0.19;0.20999999;0.25999999;0.25;
0.16;0.22;0.2;0.25999999;0.15000001;0.16;0.2;0.19;0.15000001;0.28999999;
0.20999999;0.25999999;0.28;0.25;0.23999999;0.17;0.17;0.19;0.16;0.27000001;
0.25;0.23;0.23999999;0.23;0.16;0.17;0.16;0.2;0.25999999;0.17;
0.20999999;0.15000001;0.19;0.15000001;0.16;0.16;0.25;0.2;0.22;0.17;
0.17;0.25999999;0.2;0.22;0.18000001;0.18000001;0.18000001;0.20999999;0.17;0.16;
0.18000001;0.18000001;0.16;0.15000001;0.15000001;0.17;0.15000001;0.15000001;0.28999999;0.28;
0.15000001;0.25999999;0.18000001;0.20999999;0.19;0.18000001;0.23999999;0.18000001;0.16;0.19;
0.27000001;0.15000001;0.25999999;0.16;0.25;0.23;0.18000001;0.27000001;0.18000001;0.27000001;
0.23999999;0.15000001;0.23;0.20999999;0.17;0.15000001;0.2;0.18000001;0.14;0.14;
0.17;0.16;0.25;0.14;0.19;0.14;0.27000001;0.25999999;0.19;0.19;
0.15000001;0.18000001;0.22;0.15000001;0.22;0.27000001;0.18000001;0.16;0.14;0.19;
0.18000001;0.19;0.14;0.19;0.18000001;0.28999999;0.17;0.25999999;0.28;0.15000001;
0.14;0.27000001;0.14;0.15000001;0.19;0.14;0.18000001;0.23999999;0.27000001;0.14;
0.16;0.17;0.19;0.14;0.25;0.23;0.18000001;0.14;0.2;0.16;
0.20999999;0.14;0.23999999;0.18000001;0.23;0.14;0.2;0.25;0.15000001;0.25999999;
0.14;0.14;0.19;0.17;0.27000001;0.22;0.17;0.19;0.22;0.19;
0.14;0.18000001;0.27000001;0.18000001;0.15000001;0.16;0.18000001;0.14;0.28999999;0.2;
0.19;0.2;0.14;0.25999999;0.28;0.18000001;0.2;0.27000001;0.2;0.23999999;
0.16;0.25;0.23;0.19;0.2;0.17;0.20999999;0.17;0.18000001;0.28;
0.17;0.17;0.23999999;0.14;0.23;0.25999999;0.2;0.18000001;0.14;0.28;
0.25;0.19;0.17;0.18000001;0.28;0.2;0.22;0.27000001;0.17;0.15000001;
0.13;0.28999999;0.13;0.13;0.28;0.15000001;0.17;0.19;0.19;0.13;
0.25999999;0.18000001;0.28;0.2;0.27000001;0.17;0.14;0.13;0.2;0.28;
0.20999999;0.18000001;0.17;0.16;0.19;0.18000001;0.13;0.2;0.13;0.13;
0.14;0.19;0.13;0.13;0.23999999;0.23;0.27000001;0.17;0.25;0.20999999;
0.20999999;0.28;0.13;0.2;0.19;0.28999999;0.13;0.18000001;0.17;0.28;
0.15000001;0.16;0.13;0.20999999;0.17;0.20999999;0.14;0.13;0.17;0.25999999;
0.13;0.18000001;0.2;0.18000001;0.19;0.13;0.20999999;0.13;0.19;0.2;
0.28;0.20999999;0.18000001;0.15000001;0.17;0.2;0.19;0.13;0.27000001;0.14;
0.28999999;0.23999999;0.25;0.28999999;0.28999999;0.17;0.16;0.20999999;0.14;0.13;
0.16;0.16;0.28999999;0.18000001;0.25999999;0.15000001;0.16;0.28999999;0.13;0.17;
0.17;0.2;0.16;0.12;0.28;0.20999999;0.19;0.16;0.19;0.12;
0.18000001;0.20999999;0.12;0.28999999;0.27000001;0.22;0.23999999;0.22;0.13;0.16;
0.16;0.12;0.25;0.22;0.14;0.19;0.13;0.18000001;0.17;0.22;
0.14;0.2;0.16;0.17;0.12;0.2;0.25999999;0.16;0.22;0.20999999;
0.18000001;0.28;0.19;0.28999999;0.15000001;0.16;0.16;0.12;0.15000001;0.13;
0.20999999;0.22;0.27000001;0.14;0.17;0.14;0.22;0.16;0.25;0.13;
0.18000001;0.14;0.15000001;0.14;0.15000001;0.15000001;0.12;0.12;0.12;0.15000001;
0.2;0.14;0.12;0.12;0.20999999;0.15000001;0.17;0.28999999;0.25999999;0.12;
0.13;0.15000001;0.12;0.14;0.14;0.13;0.28;0.16;0.12;0.15000001;
0.14;0.16;0.16;0.15000001;0.22;0.12;0.16;0.13;0.12;0.13;
0.16;0.16;0.17;0.14;0.22;0.27000001;0.17;0.13;0.15000001;0.16;
0.23;0.15000001;0.16;0.12;0.15000001;0.15000001;0.25;0.23;0.13;0.2;
0.2;0.19;0.20999999;0.23;0.15000001;0.13;0.28999999;0.14;0.15000001;0.16;
0.16;0.16;0.12;0.15000001;0.25999999;0.22;0.11;0.23;0.20999999;0.28;
0.12;0.23;0.15000001;0.16;0.15000001;0.18000001;0.15000001;0.11;0.17;0.13;
0.16;0.15000001;0.16;0.17;0.17;0.14;0.13;0.16;0.17;0.27000001;
0.14;0.11;0.15000001;0.17;0.12;0.16;0.20999999;0.2;0.23;0.17;
0.12;0.12;0.16;0.13;0.15000001;0.28999999;0.12;0.23;0.11;0.22;
0.22;0.13;0.17;0.14;0.15000001;0.25999999;0.17;0.17;0.15000001;0.14;
0.28;0.16;0.12;0.11;0.13;0.23;0.17;0.17;0.12;0.16;
0.27000001;0.12;0.12;0.20999999;0.15000001;0.15000001;0.13;0.11;0.22;0.28999999;
0.15000001;0.15000001;0.16;0.17;0.23999999;0.14;0.18000001;0.18000001;0.12;0.16;
0.25999999;0.23999999;0.23;0.13;0.18000001;0.23999999;0.17;0.14;0.28;0.18000001;
0.23;0.11;0.16;0.12;0.11;0.13;0.16;0.15000001;0.11;0.11;
0.18000001;0.23999999;0.11;0.11;0.17;0.18000001;0.12;0.12;0.14;0.27000001;
0.11;0.14;0.23999999;0.14;0.20999999;0.15000001;0.14;0.22;0.11;0.18000001;
0.13;0.14;0.11;0.28999999;0.14;0.18000001;0.14;0.23999999;0.15000001;0.17;
0.11;0.15000001;0.14;0.16;0.17;0.23;0.13;0.12;0.11;0.28;
0.12;0.14;0.14;0.18000001;0.11;0.18000001;0.11;0.11;0.27000001;0.23999999;
0.12;0.23999999;0.20999999;0.13;0.15000001;0.22;0.12;0.15000001;0.11;0.14;
0.19;0.13;0.28999999;0.19;0.14;0.14;0.19;0.14;0.1;0.15000001;
0.18000001;0.23;0.11;0.17;0.19;0.19;0.28;0.1;0.16;0.11;
0.11;0.14;0.15000001;0.12;0.18000001;0.23999999;0.25;0.25;0.12;0.27000001;
0.15000001;0.1;0.19;0.18000001;0.11;0.13;0.19;0.13;0.14;0.25;
0.22;0.12;0.25;0.11;0.28999999;0.14;0.1;0.23;0.19;0.15000001;
0.11;0.14;0.28;0.11;0.18000001;0.12;0.25;0.23999999;0.19;0.1;
0.17;0.25;0.11;0.14;0.18000001;0.19;0.13;0.12;0.13;0.13;
0.28999999;0.16;0.14;0.13;0.22;0.13;0.28999999;0.13;0.1;0.28999999;
0.14;0.28999999;0.23;0.2;0.13;0.13;0.25;0.11;0.2;0.18000001;
0.12;0.11;0.11;0.28;0.2;0.28999999;0.28999999;0.12;0.14;0.19;
0.2;0.23999999;0.13;0.19;0.13;0.28;0.1;0.1;0.1;0.1;
0.13;0.28;0.2;0.14;0.1;0.28;0.1;0.15000001;0.28999999;0.1;
0.13;0.11;0.2;0.28;0.22;0.1;0.25;0.28;0.28999999;0.2;
0.14;0.13;0.17;0.11;0.1;0.14;0.19;0.13;0.23;0.1;
0.12;0.11;0.18000001;0.27000001;0.1;0.25999999;0.28;0.28999999;0.25999999;0.27000001;
0.13;0.27000001;0.12;0.28;0.23999999;0.25999999;0.16;0.1;0.2;0.12;
0.1;0.27000001;0.11;0.2;0.27000001;0.25999999;0.19;0.1;0.13;0.13;
0.28999999;0.25;0.19;0.1;0.28;0.25999999;0.28999999;0.25999999;0.14;0.27000001;
0.25999999;0.11;0.25999999;0.1;0.23;0.2;0.11;0.13;0.15000001;0.1;
0.12;0.13;0.25999999;0.13;0.23999999;0.1;0.11;0.25999999;0.28999999;0.28;
0.20999999;0.20999999;0.25999999;0.27000001;0.1;0.12;0.19;0.2;0.13;0.20999999;
0.25;0.20999999;0.25;0.25999999;0.18000001;0.28999999;0.17;0.1;0.2;0.25;
0.13;0.25;0.12;0.20999999;0.28999999;0.12;0.12;0.28;0.11;0.23;
0.1;0.27000001;0.12;0.1;0.12;0.19;0.25;0.11;0.16;0.25;
0.20999999;0.11;0.25999999;0.25999999;0.12;0.12;0.23999999;0.12;0.1;0.19;
0.20999999;0.13;0.14;0.2;0.12;0.25;0.28999999;0.12;0.13;0.25;
0.23999999;0.28999999;0.13;0.28;0.1;0.27000001;0.27000001;0.23999999;0.23999999;0.1;
0.27000001;0.25999999;0.27000001;0.12;0.2;0.20999999;0.15000001;0.1;0.23;0.11;
0.20999999;0.12;0.23999999;0.23999999;0.25999999;0.25;0.11;0.27000001;0.12;0.28999999;
0.23999999;0.1;0.2;0.28;0.27000001;0.11;0.12;0.12;0.25999999;0.23999999;
0.25;0.23;0.12;0.1;0.20999999;0.12;0.25;0.1;0.23;0.23;
0.27000001;0.28999999;0.11;0.22;0.22;0.1;0.28;0.25999999;0.27000001;0.23999999;
0.23;0.20999999;0.13;0.23;0.22;0.14;0.2;0.25999999;0.12;0.22;
0.23999999;0.25;0.12;0.20999999;0.11;0.22;0.1;0.23;0.1;0.28999999;
0.27000001;0.25;0.11;0.1;0.23999999;0.28;0.12;0.12;0.22;0.27000001;
0.22;0.22;0.25999999;0.22;0.11;0.25999999;0.2;0.22;0.25;0.23;
0.22;0.11;0.11;0.22;0.20999999;0.28999999;0.11;0.11;0.12;0.23999999;
0.12;0.28;0.23999999;0.28;0.28;0.1;0.11;0.1;0.11;0.27000001;
0.27000001;0.1;0.25999999;0.25;0.22;0.11;0.13;0.22;0.22;0.28;
0.23;0.11;0.25;0.28999999;0.20999999;0.2;0.11;0.20999999;0.25999999;0.11;
0.11;0.12;0.28;0.20999999;0.20999999;0.23999999;0.11;0.27000001;0.1;0.22;
0.20999999;0.11;0.23999999;0.28;0.25999999;0.22;0.27000001;0.1;0.20999999;0.23;
0.28999999;0.1;0.25;0.23;0.23;0.11;0.25;0.11;0.28;0.23;
0.23999999;0.27000001;0.22;0.20999999;0.23;0.20999999;0.25999999;0.28;0.1;0.25999999;
0.11;0.11;0.28999999;0.2;0.23;0.23;0.2;0.22;0.11;0.25;
0.2;0.28;0.27000001;0.2;0.12;0.20999999;0.1;0.23;0.27000001;0.11;
0.22;0.1;0.23999999;0.25;0.2;0.23;0.25999999;0.28;0.20999999;0.1;
0.23;0.28;0.11;0.25999999;0.28999999;0.22;0.25;0.11;0.20999999;0.2;
0.27000001;0.28999999;0.11;0.22;0.23;0.23999999;0.27000001;0.25999999;0.19;0.19;
0.1;0.1;0.25;0.1;0.1;0.23;0.19;0.19;0.1;0.2;
0.28999999;0.1;0.25;0.1;0.28;0.20999999;0.1;0.20999999;0.27000001;0.22;
0.1;0.1;0.25999999;0.19;0.22;0.23;0.23999999;0.25999999;0.23999999;0.1;
0.1;0.23999999;0.27000001;0.2;0.23999999;0.28999999;0.23;0.11;0.25;0.19;
0.1;0.25;0.20999999;0.1;0.23999999;0.1;0.20999999;0.28;0.23999999;0.25999999;
0.18000001;0.22;0.22;0.18000001;0.1;0.23999999;0.23;0.18000001;0.25999999;0.18000001;
0.2;0.19;0.1;0.25;0.23;0.28999999;0.1;0.20999999;0.23999999;0.27000001;
0.18000001;0.23999999;0.22;0.1;0.1;0.1;0.22;0.28;0.19;0.23;
0.2;0.25;0.25999999;0.18000001;0.23;0.23999999;0.1;0.20999999;0.28999999;0.17;
0.17;0.17;0.23999999;0.27000001;0.22;0.19;0.17;0.18000001;0.1;0.2;
0.22;0.23;0.23;0.28;0.23999999;0.25999999;0.20999999;0.17;0.25;0.23999999;
0.28999999;0.25;0.25;0.22;0.18000001;0.19;0.27000001;0.2;0.17;0.25;
0.23;0.22;0.23999999;0.23;0.16;0.16;0.20999999;0.28;0.16;0.25999999;
0.18000001;0.22;0.25;0.19;0.17;0.28999999;0.16;0.23;0.2;0.27000001;
0.16;0.20999999;0.23999999;0.22;0.23;0.25;0.18000001;0.17;0.22;0.28;
0.19;0.16;0.2;0.28999999;0.15000001;0.15000001;0.27000001;0.20999999;0.15000001;0.17;
0.23999999;0.22;0.25;0.18000001;0.23;0.16;0.15000001;0.19;0.25999999;0.28;
0.25999999;0.2;0.28999999;0.20999999;0.15000001;0.25999999;0.27000001;0.17;0.16;0.18000001;
0.25;0.23999999;0.19;0.23;0.14;0.15000001;0.25999999;0.28;0.14;0.2;
0.20999999;0.14;0.17;0.16;0.27000001;0.28999999;0.18000001;0.15000001;0.14;0.25;
0.19;0.25999999;0.23999999;0.23;0.2;0.28;0.14;0.16;0.17;0.15000001;
0.18000001;0.28999999;0.13;0.19;0.25999999;0.13;0.25;0.2;0.14;0.23999999;
0.23;0.27000001;0.28;0.13;0.16;0.17;0.15000001;0.27000001;0.18000001;0.13;
0.14;0.19;0.28999999;0.25999999;0.25;0.27000001;0.23999999;0.28;0.13;0.16;
0.15000001;0.17;0.12;0.14;0.18000001;0.19;0.12;0.28999999;0.13;0.27000001;
0.25999999;0.12;0.25;0.28;0.15000001;0.16;0.23999999;0.14;0.17;0.18000001;
0.13;0.12;0.27000001;0.28999999;0.25999999;0.11;0.15000001;0.12;0.14;0.16;
0.25;0.17;0.23999999;0.13;0.18000001;0.11;0.28;0.28999999;0.27000001;0.12;
0.11;0.28;0.14;0.15000001;0.25999999;0.16;0.13;0.17;0.23999999;0.25;
0.11;0.12;0.28999999;0.28;0.1;0.27000001;0.14;0.11;0.13;0.15000001;
0.16;0.17;0.1;0.25999999;0.12;0.25;0.28999999;0.28;0.11;0.1;
0.13;0.14;0.27000001;0.15000001;0.16;0.12;0.1;0.25999999;0.11;0.25;
0.28;0.13;0.28999999;0.14;0.1;0.15000001;0.16;0.12;0.27000001;0.11;
0.25999999;0.25;0.28999999;0.1;0.28;0.13;0.14;0.12;0.15000001;0.11;
0.27000001;0.1;0.28999999;0.25;0.25999999;0.13;0.12;0.14;0.11;0.15000001;
0.28;0.1;0.27000001;0.28999999;0.25999999;0.13;0.11;0.12;0.14;0.1;
0.28;0.27000001;0.28999999;0.11;0.13;0.25999999;0.12;0.14;0.1;0.28;
0.11;0.13;0.1;0.27000001;0.12;0.28999999;0.25999999;0.28;0.11;0.1;
0.13;0.12;0.25999999;0.27000001;0.28999999;0.11;0.1;0.28;0.12;0.27000001;
0.28999999;0.1;0.11;0.12;0.28;0.27000001;0.1;0.28999999;0.11;0.28;
0.27000001;0.1;0.11;0.28999999;0.27000001;0.28;0.1;0.28999999;0.28;0.1;
0.28999999;0.28;0.28999999;0.28;0.28;0.28999999;0.28999999;0.28999999;0.28999999;0.28999999;
       };
      };
      float_Data @[1] {
       name="Drev";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1800] 0.029999999;0.029999999;0.029999999;0.029999999;0.029999999;0.029999999;0.02;0.029999999;0.02;0.029999999;
0.029999999;0.02;0.02;0.029999999;0.029999999;0.029999999;0.02;0.02;0.02;0.02;
0.02;0.029999999;0.02;0.02;0.029999999;0.02;0.029999999;0.029999999;0.029999999;0.02;
0.02;0.02;0.02;0.02;0.029999999;0.029999999;0.029999999;0.029999999;0.029999999;0.02;
0.02;0.029999999;0.029999999;0.029999999;0.02;0.029999999;0.02;0.02;0.029999999;0.02;
0.02;0.02;0.029999999;0.02;0.02;0.029999999;0.02;0.02;0.02;0.029999999;
0.02;0.029999999;0.029999999;0.02;0.029999999;0.02;0.02;0.02;0.029999999;0.029999999;
0.029999999;0.029999999;0.02;0.02;0.029999999;0.02;0.02;0.029999999;0.02;0.029999999;
0.02;0.029999999;0.02;0.02;0.029999999;0.02;0.02;0.029999999;0.029999999;0.02;
0.029999999;0.029999999;0.029999999;0.02;0.02;0.02;0.029999999;0.02;0.02;0.029999999;
0.029999999;0.029999999;0.02;0.029999999;0.029999999;0.02;0.02;0.029999999;0.02;0.02;
0.029999999;0.029999999;0.02;0.02;0.029999999;0.02;0.029999999;0.029999999;0.02;0.029999999;
0.02;0.029999999;0.029999999;0.02;0.02;0.029999999;0.02;0.029999999;0.02;0.02;
0.029999999;0.02;0.029999999;0.029999999;0.029999999;0.02;0.029999999;0.029999999;0.02;0.02;
0.029999999;0.02;0.029999999;0.029999999;0.029999999;0.02;0.02;0.02;0.02;0.02;
0.02;0.02;0.029999999;0.02;0.029999999;0.02;0.029999999;0.029999999;0.029999999;0.02;
0.029999999;0.029999999;0.02;0.029999999;0.02;0.029999999;0.029999999;0.029999999;0.029999999;0.029999999;
0.029999999;0.02;0.02;0.029999999;0.029999999;0.02;0.029999999;0.029999999;0.029999999;0.02;
0.02;0.029999999;0.029999999;0.02;0.02;0.029999999;0.029999999;0.02;0.02;0.029999999;
0.02;0.02;0.029999999;0.02;0.029999999;0.029999999;0.029999999;0.02;0.029999999;0.02;
0.02;0.02;0.029999999;0.029999999;0.029999999;0.029999999;0.02;0.02;0.02;0.029999999;
0.029999999;0.029999999;0.029999999;0.029999999;0.029999999;0.02;0.029999999;0.029999999;0.02;0.02;
0.02;0.029999999;0.02;0.02;0.02;0.029999999;0.02;0.029999999;0.02;0.029999999;
0.02;0.02;0.029999999;0.029999999;0.029999999;0.02;0.029999999;0.029999999;0.029999999;0.029999999;
0.029999999;0.029999999;0.029999999;0.029999999;0.029999999;0.029999999;0.02;0.02;0.029999999;0.02;
0.029999999;0.029999999;0.029999999;0.02;0.02;0.029999999;0.029999999;0.02;0.02;0.02;
0.029999999;0.029999999;0.02;0.02;0.029999999;0.02;0.029999999;0.02;0.02;0.029999999;
0.029999999;0.02;0.029999999;0.029999999;0.02;0.029999999;0.02;0.029999999;0.02;0.029999999;
0.029999999;0.02;0.02;0.029999999;0.029999999;0.029999999;0.029999999;0.02;0.029999999;0.02;
0.029999999;0.029999999;0.02;0.029999999;0.02;0.039999999;0.039999999;0.02;0.039999999;0.02;
0.02;0.02;0.029999999;0.029999999;0.039999999;0.039999999;0.039999999;0.029999999;0.029999999;0.039999999;
0.02;0.029999999;0.02;0.029999999;0.039999999;0.039999999;0.029999999;0.02;0.029999999;0.039999999;
0.029999999;0.02;0.02;0.02;0.039999999;0.039999999;0.029999999;0.02;0.039999999;0.039999999;
0.039999999;0.039999999;0.039999999;0.039999999;0.039999999;0.039999999;0.039999999;0.029999999;0.02;0.02;
0.039999999;0.029999999;0.02;0.029999999;0.02;0.039999999;0.02;0.02;0.029999999;0.02;
0.02;0.039999999;0.029999999;0.039999999;0.02;0.02;0.039999999;0.029999999;0.02;0.029999999;
0.029999999;0.039999999;0.029999999;0.02;0.039999999;0.029999999;0.02;0.02;0.029999999;0.029999999;
0.039999999;0.039999999;0.029999999;0.029999999;0.029999999;0.029999999;0.029999999;0.02;0.039999999;0.039999999;
0.039999999;0.039999999;0.029999999;0.039999999;0.02;0.029999999;0.02;0.039999999;0.029999999;0.039999999;
0.02;0.039999999;0.029999999;0.02;0.039999999;0.02;0.039999999;0.029999999;0.02;0.039999999;
0.029999999;0.029999999;0.039999999;0.039999999;0.039999999;0.039999999;0.039999999;0.02;0.02;0.039999999;
0.039999999;0.039999999;0.039999999;0.029999999;0.02;0.02;0.02;0.039999999;0.02;0.039999999;
0.02;0.039999999;0.029999999;0.02;0.029999999;0.029999999;0.02;0.029999999;0.029999999;0.02;
0.039999999;0.039999999;0.02;0.029999999;0.029999999;0.02;0.039999999;0.039999999;0.029999999;0.02;
0.029999999;0.039999999;0.029999999;0.039999999;0.039999999;0.029999999;0.02;0.029999999;0.02;0.039999999;
0.039999999;0.039999999;0.039999999;0.029999999;0.02;0.029999999;0.039999999;0.02;0.039999999;0.02;
0.039999999;0.02;0.02;0.039999999;0.02;0.039999999;0.02;0.039999999;0.02;0.029999999;
0.02;0.02;0.029999999;0.039999999;0.029999999;0.02;0.039999999;0.039999999;0.029999999;0.029999999;
0.029999999;0.02;0.02;0.02;0.029999999;0.039999999;0.02;0.029999999;0.02;0.039999999;
0.039999999;0.02;0.039999999;0.039999999;0.02;0.029999999;0.02;0.039999999;0.039999999;0.039999999;
0.029999999;0.039999999;0.029999999;0.039999999;0.02;0.02;0.039999999;0.039999999;0.02;0.029999999;
0.02;0.039999999;0.02;0.039999999;0.02;0.02;0.029999999;0.039999999;0.029999999;0.039999999;
0.029999999;0.02;0.029999999;0.029999999;0.029999999;0.029999999;0.029999999;0.039999999;0.029999999;0.039999999;
0.039999999;0.029999999;0.029999999;0.039999999;0.039999999;0.02;0.029999999;0.02;0.02;0.02;
0.039999999;0.029999999;0.039999999;0.039999999;0.02;0.039999999;0.039999999;0.029999999;0.029999999;0.029999999;
0.029999999;0.039999999;0.02;0.02;0.039999999;0.029999999;0.039999999;0.039999999;0.02;0.039999999;
0.029999999;0.039999999;0.039999999;0.029999999;0.02;0.039999999;0.039999999;0.029999999;0.029999999;0.029999999;
0.02;0.029999999;0.029999999;0.029999999;0.029999999;0.02;0.039999999;0.039999999;0.039999999;0.039999999;
0.02;0.02;0.029999999;0.02;0.029999999;0.039999999;0.02;0.029999999;0.029999999;0.02;
0.039999999;0.039999999;0.02;0.039999999;0.029999999;0.039999999;0.02;0.02;0.039999999;0.039999999;
0.02;0.039999999;0.039999999;0.029999999;0.029999999;0.039999999;0.029999999;0.039999999;0.039999999;0.02;
0.02;0.039999999;0.029999999;0.039999999;0.029999999;0.039999999;0.029999999;0.02;0.02;0.039999999;
0.039999999;0.039999999;0.029999999;0.02;0.039999999;0.039999999;0.029999999;0.02;0.039999999;0.039999999;
0.039999999;0.029999999;0.039999999;0.029999999;0.029999999;0.02;0.039999999;0.039999999;0.039999999;0.039999999;
0.039999999;0.039999999;0.029999999;0.050000001;0.02;0.050000001;0.039999999;0.02;0.029999999;0.029999999;
0.02;0.050000001;0.050000001;0.050000001;0.050000001;0.050000001;0.029999999;0.029999999;0.039999999;0.050000001;
0.039999999;0.050000001;0.029999999;0.029999999;0.039999999;0.050000001;0.039999999;0.029999999;0.029999999;0.029999999;
0.050000001;0.050000001;0.029999999;0.050000001;0.039999999;0.050000001;0.029999999;0.02;0.029999999;0.050000001;
0.029999999;0.02;0.050000001;0.050000001;0.039999999;0.029999999;0.050000001;0.050000001;0.039999999;0.039999999;
0.050000001;0.050000001;0.02;0.050000001;0.039999999;0.029999999;0.02;0.050000001;0.02;0.050000001;
0.039999999;0.050000001;0.050000001;0.029999999;0.02;0.02;0.029999999;0.039999999;0.029999999;0.039999999;
0.039999999;0.039999999;0.039999999;0.039999999;0.02;0.050000001;0.029999999;0.050000001;0.02;0.050000001;
0.02;0.050000001;0.039999999;0.039999999;0.029999999;0.039999999;0.039999999;0.039999999;0.039999999;0.029999999;
0.029999999;0.039999999;0.050000001;0.039999999;0.02;0.039999999;0.029999999;0.039999999;0.02;0.050000001;
0.050000001;0.02;0.02;0.050000001;0.050000001;0.050000001;0.039999999;0.050000001;0.050000001;0.029999999;
0.039999999;0.039999999;0.02;0.050000001;0.050000001;0.02;0.039999999;0.039999999;0.039999999;0.050000001;
0.039999999;0.029999999;0.050000001;0.050000001;0.050000001;0.029999999;0.050000001;0.039999999;0.039999999;0.039999999;
0.039999999;0.029999999;0.050000001;0.029999999;0.02;0.029999999;0.050000001;0.039999999;0.02;0.050000001;
0.029999999;0.050000001;0.050000001;0.039999999;0.050000001;0.039999999;0.050000001;0.050000001;0.029999999;0.02;
0.029999999;0.050000001;0.039999999;0.039999999;0.050000001;0.02;0.039999999;0.039999999;0.039999999;0.029999999;
0.039999999;0.02;0.02;0.050000001;0.039999999;0.050000001;0.050000001;0.050000001;0.050000001;0.050000001;
0.029999999;0.039999999;0.039999999;0.050000001;0.050000001;0.039999999;0.050000001;0.039999999;0.029999999;0.050000001;
0.039999999;0.039999999;0.02;0.029999999;0.029999999;0.029999999;0.039999999;0.02;0.029999999;0.029999999;
0.050000001;0.039999999;0.029999999;0.029999999;0.050000001;0.050000001;0.050000001;0.039999999;0.02;0.029999999;
0.029999999;0.02;0.039999999;0.02;0.039999999;0.050000001;0.02;0.039999999;0.029999999;0.050000001;
0.050000001;0.029999999;0.039999999;0.029999999;0.050000001;0.050000001;0.02;0.039999999;0.02;0.050000001;
0.050000001;0.02;0.02;0.050000001;0.050000001;0.039999999;0.039999999;0.050000001;0.029999999;0.029999999;
0.029999999;0.02;0.02;0.050000001;0.050000001;0.050000001;0.029999999;0.039999999;0.029999999;0.039999999;
0.039999999;0.039999999;0.039999999;0.050000001;0.02;0.039999999;0.050000001;0.050000001;0.050000001;0.02;
0.050000001;0.029999999;0.029999999;0.050000001;0.02;0.039999999;0.050000001;0.050000001;0.039999999;0.039999999;
0.050000001;0.039999999;0.029999999;0.050000001;0.050000001;0.050000001;0.029999999;0.039999999;0.050000001;0.039999999;
0.050000001;0.02;0.02;0.029999999;0.050000001;0.039999999;0.039999999;0.039999999;0.050000001;0.029999999;
0.02;0.039999999;0.050000001;0.050000001;0.029999999;0.039999999;0.050000001;0.050000001;0.02;0.039999999;
0.039999999;0.039999999;0.039999999;0.050000001;0.029999999;0.02;0.039999999;0.039999999;0.050000001;0.050000001;
0.039999999;0.050000001;0.029999999;0.029999999;0.050000001;0.050000001;0.039999999;0.039999999;0.050000001;0.039999999;
0.050000001;0.039999999;0.050000001;0.02;0.050000001;0.050000001;0.029999999;0.029999999;0.02;0.02;
0.0099999998;0.050000001;0.02;0.02;0.039999999;0.02;0.0099999998;0.050000001;0.039999999;0.0099999998;
0.039999999;0.029999999;0.039999999;0.050000001;0.02;0.02;0.039999999;0.039999999;0.050000001;0.050000001;
0.039999999;0.050000001;0.029999999;0.029999999;0.050000001;0.0099999998;0.0099999998;0.050000001;0.02;0.050000001;
0.050000001;0.039999999;0.039999999;0.050000001;0.02;0.0099999998;0.029999999;0.039999999;0.029999999;0.029999999;
0.02;0.0099999998;0.050000001;0.050000001;0.029999999;0.0099999998;0.050000001;0.050000001;0.0099999998;0.029999999;
0.02;0.050000001;0.050000001;0.0099999998;0.039999999;0.029999999;0.039999999;0.0099999998;0.029999999;0.050000001;
0.02;0.02;0.050000001;0.029999999;0.039999999;0.02;0.050000001;0.050000001;0.039999999;0.050000001;
0.029999999;0.039999999;0.050000001;0.0099999998;0.029999999;0.039999999;0.029999999;0.0099999998;0.039999999;0.0099999998;
0.02;0.0099999998;0.050000001;0.0099999998;0.039999999;0.039999999;0.050000001;0.029999999;0.050000001;0.039999999;
0.050000001;0.0099999998;0.050000001;0.050000001;0.0099999998;0.039999999;0.050000001;0.039999999;0.02;0.02;
0.0099999998;0.039999999;0.050000001;0.029999999;0.0099999998;0.039999999;0.029999999;0.0099999998;0.050000001;0.0099999998;
0.0099999998;0.029999999;0.0099999998;0.050000001;0.039999999;0.050000001;0.039999999;0.039999999;0.050000001;0.029999999;
0.050000001;0.02;0.0099999998;0.050000001;0.039999999;0.039999999;0.050000001;0.0099999998;0.0099999998;0.0099999998;
0.050000001;0.050000001;0.039999999;0.0099999998;0.050000001;0.029999999;0.050000001;0.050000001;0.02;0.050000001;
0.039999999;0.050000001;0.0099999998;0.0099999998;0.050000001;0.029999999;0.050000001;0.029999999;0.050000001;0.0099999998;
0.02;0.0099999998;0.039999999;0.050000001;0.0099999998;0.02;0.02;0.0099999998;0.029999999;0.039999999;
0.039999999;0.0099999998;0.02;0.050000001;0.02;0.050000001;0.0099999998;0.050000001;0.050000001;0.0099999998;
0.050000001;0.039999999;0.039999999;0.0099999998;0.02;0.02;0.039999999;0.050000001;0.029999999;0.050000001;
0.050000001;0.02;0.050000001;0.050000001;0.02;0.0099999998;0.029999999;0.02;0.02;0.039999999;
0.0099999998;0.0099999998;0.050000001;0.0099999998;0.050000001;0.039999999;0.0099999998;0.0099999998;0.0099999998;0.039999999;
0.039999999;0.0099999998;0.039999999;0.02;0.050000001;0.050000001;0.050000001;0.029999999;0.039999999;0.050000001;
0.050000001;0.02;0.0099999998;0.0099999998;0.039999999;0.0099999998;0.029999999;0.039999999;0.02;0.0099999998;
0.039999999;0.050000001;0.050000001;0.0099999998;0.0099999998;0.039999999;0.039999999;0.050000001;0.0099999998;0.0099999998;
0.039999999;0.0099999998;0.02;0.039999999;0.050000001;0.02;0.0099999998;0.029999999;0.0099999998;0.0099999998;
0.039999999;0.0099999998;0.050000001;0.050000001;0.050000001;0.050000001;0.0099999998;0.039999999;0.0099999998;0.0099999998;
0.0099999998;0.050000001;0.050000001;0.0099999998;0.050000001;0.050000001;0.050000001;0.0099999998;0.02;0.050000001;
0.039999999;0.0099999998;0.02;0.050000001;0.029999999;0.050000001;0.029999999;0.0099999998;0.039999999;0.0099999998;
0.039999999;0.039999999;0.039999999;0.050000001;0.0099999998;0.0099999998;0.050000001;0.02;0.0099999998;0.0099999998;
0.050000001;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.039999999;0.050000001;0.050000001;0.0099999998;0.0099999998;
0.0099999998;0.02;0.02;0.0099999998;0.050000001;0.0099999998;0.02;0.02;0.02;0.039999999;
0.02;0.039999999;0.0099999998;0.0099999998;0.039999999;0.029999999;0.02;0.050000001;0.02;0.039999999;
0.0099999998;0.039999999;0.0099999998;0.039999999;0.050000001;0.02;0.050000001;0.050000001;0.0099999998;0.039999999;
0.0099999998;0.02;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.02;0.0099999998;0.039999999;0.050000001;
0.039999999;0.050000001;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.02;0.0099999998;0.050000001;0.0099999998;
0.0099999998;0.02;0.039999999;0.039999999;0.0099999998;0.050000001;0.039999999;0.029999999;0.0099999998;0.0099999998;
0.0099999998;0.039999999;0.0099999998;0.050000001;0.050000001;0.02;0.039999999;0.02;0.0099999998;0.050000001;
0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.050000001;0.039999999;0.039999999;0.050000001;0.0099999998;
0.02;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.050000001;0.02;0.0099999998;
0.0099999998;0.0099999998;0.039999999;0.0099999998;0.050000001;0.0099999998;0.029999999;0.050000001;0.0099999998;0.02;
0.0099999998;0.039999999;0.0099999998;0.039999999;0.0099999998;0.050000001;0.0099999998;0.039999999;0.050000001;0.050000001;
0.0099999998;0.0099999998;0.02;0.039999999;0.039999999;0.050000001;0.0099999998;0.02;0.0099999998;0.0099999998;
0.0099999998;0.039999999;0.050000001;0.0099999998;0.050000001;0.0099999998;0.039999999;0.0099999998;0.0099999998;0.0099999998;
0.02;0.02;0.039999999;0.02;0.02;0.0099999998;0.0099999998;0.0099999998;0.039999999;0.0099999998;
0.039999999;0.02;0.0099999998;0.050000001;0.039999999;0.050000001;0.02;0.0099999998;0.0099999998;0.050000001;
0.02;0.02;0.039999999;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.050000001;0.02;
0.02;0.050000001;0.039999999;0.0099999998;0.050000001;0.039999999;0.0099999998;0.050000001;0.0099999998;0.0099999998;
0.02;0.039999999;0.0099999998;0.02;0.050000001;0.050000001;0.050000001;0.039999999;0.050000001;0.0099999998;
0.0099999998;0.050000001;0.0099999998;0.0099999998;0.02;0.0099999998;0.050000001;0.0099999998;0.039999999;0.0099999998;
0.0099999998;0.0099999998;0.02;0.0099999998;0.0099999998;0.039999999;0.02;0.0099999998;0.050000001;0.039999999;
0.0099999998;0.0099999998;0.0099999998;0.050000001;0.02;0.02;0.050000001;0.039999999;0.0099999998;0.050000001;
0.0099999998;0.0099999998;0.039999999;0.0099999998;0.0099999998;0.050000001;0.02;0.0099999998;0.039999999;0.0099999998;
0.0099999998;0.0099999998;0.0099999998;0.039999999;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.0099999998;
0.050000001;0.050000001;0.0099999998;0.039999999;0.050000001;0.039999999;0.0099999998;0.0099999998;0.050000001;0.0099999998;
0.039999999;0.050000001;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.039999999;0.0099999998;0.0099999998;0.050000001;
0.0099999998;0.050000001;0.050000001;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.039999999;0.0099999998;0.039999999;
0.0099999998;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.039999999;0.0099999998;0.0099999998;0.0099999998;0.039999999;
0.0099999998;0.0099999998;0.050000001;0.050000001;0.050000001;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.039999999;
0.0099999998;0.0099999998;0.0099999998;0.039999999;0.0099999998;0.0099999998;0.039999999;0.0099999998;0.0099999998;0.0099999998;
0.050000001;0.0099999998;0.050000001;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.039999999;
0.050000001;0.0099999998;0.039999999;0.0099999998;0.0099999998;0.050000001;0.039999999;0.0099999998;0.0099999998;0.0099999998;
0.050000001;0.050000001;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.050000001;0.039999999;0.0099999998;0.0099999998;
0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.039999999;0.039999999;0.0099999998;0.0099999998;0.0099999998;0.050000001;
0.0099999998;0.050000001;0.050000001;0.050000001;0.0099999998;0.039999999;0.0099999998;0.0099999998;0.0099999998;0.0099999998;
0.0099999998;0.039999999;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.050000001;
0.050000001;0.050000001;0.039999999;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.0099999998;
0.0099999998;0.0099999998;0.039999999;0.050000001;0.050000001;0.050000001;0.050000001;0.039999999;0.0099999998;0.0099999998;
0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.039999999;0.0099999998;0.050000001;
0.050000001;0.0099999998;0.050000001;0.039999999;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.0099999998;
0.0099999998;0.0099999998;0.050000001;0.039999999;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.0099999998;
0.050000001;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.039999999;0.050000001;0.0099999998;
0.0099999998;0.050000001;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.050000001;
0.0099999998;0.0099999998;0.039999999;0.050000001;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.0099999998;
0.0099999998;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.050000001;0.039999999;0.050000001;0.0099999998;0.0099999998;
0.0099999998;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.050000001;
0.050000001;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.0099999998;
0.050000001;0.050000001;0.050000001;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.0099999998;
0.050000001;0.0099999998;0.050000001;0.050000001;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.0099999998;
0.050000001;0.0099999998;0.050000001;0.050000001;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.0099999998;0.0099999998;
0.050000001;0.050000001;0.050000001;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.0099999998;0.0099999998;0.050000001;
0.0099999998;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.050000001;0.050000001;0.050000001;0.0099999998;0.0099999998;
0.0099999998;0.0099999998;0.050000001;0.050000001;0.050000001;0.0099999998;0.0099999998;0.050000001;0.0099999998;0.050000001;
0.050000001;0.0099999998;0.0099999998;0.0099999998;0.050000001;0.050000001;0.0099999998;0.050000001;0.0099999998;0.050000001;
0.050000001;0.0099999998;0.0099999998;0.050000001;0.050000001;0.050000001;0.0099999998;0.050000001;0.050000001;0.0099999998;
0.050000001;0.050000001;0.050000001;0.050000001;0.050000001;0.050000001;0.050000001;0.050000001;0.050000001;0.050000001;
       };
      };
      float_Data @[2] {
       name="Dmult";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1800] 1.9;1.8;2;1.8;1.9;2;1.6;1.9;1.6;1.7;
1.7;1.5;1.7;2.0999999;1.8;2.0999999;1.5;1.7;1.5;1.6;
1.6;2;1.7;1.8;2.2;1.4;1.6;1.7;1.8;1.5;
1.7;1.8;1.4;1.8;2;1.7;2.0999999;2.2;1.6;1.5;
1.4;1.9;2.0999999;1.9;1.7;1.6;1.6;1.6;2.2;1.4;
1.9;1.8;2.3;1.9;1.8;1.8;1.9;1.7;1.4;2;
1.5;2.3;2.3;1.3;1.5;1.9;1.3;1.5;2.2;1.6;
1.5;1.7;1.4;1.3;1.6;1.6;2;2.4000001;1.7;1.8;
2;1.5;1.9;1.3;2.0999999;1.8;1.8;1.7;2.4000001;1.6;
2.2;2;2.0999999;2;2;1.3;1.5;1.4;1.7;1.9;
2.4000001;2.3;1.9;1.9;2.3;1.5;1.3;2.5;2.0999999;2.0999999;
2.5;2.4000001;1.9;2;1.4;2;1.4;1.5;1.2;2.2;
2.0999999;2;1.8;1.8;1.2;1.6;2.0999999;1.6;1.7;1.2;
1.7;1.8;1.4;2.5;2.5;1.2;1.5;2.4000001;1.6;1.9;
1.4;1.4;2.5999999;1.8;2.5999999;2.0999999;2.2;1.3;1.2;2;
2.2;2.0999999;2.0999999;1.9;1.7;2.2;2.2;2.3;2.0999999;2;
2.5999999;2.3;1.5;1.4;2.2;2;1.9;2.4000001;2.5999999;2.7;
2.5;2.2;1.2;1.5;1.3;2.0999999;2.7;1.9;1.4;2.3;
2.0999999;1.3;2.5;1.8;2.3;2.2;2.7;2;2.2;1.3;
1.7;2.3;1.6;1.9;1.5;2.4000001;2;1.3;1.6;1.4;
2.3;1.6;1.7;2.5999999;1.3;1.8;2;2.2;2.3;2.7;
2.8;1.4;2.5999999;1.3;2.8;1.2;2.8;1.8;2.2;2.4000001;
2.0999999;2.3;2.4000001;2.3;1.5;2.7;2.4000001;2.0999999;2.0999999;2.5;
2.4000001;2.3;1.4;1.7;2.3;2.4000001;1.3;2.2;2.9000001;1.9;
2.8;2.9000001;2.4000001;1.5;2.0999999;2.8;1.3;2.2;2.7;1.8;
2.9000001;1.2;2.5;2.3;2.2;1.2;1.3;1.9;2.5;1.7;
2.4000001;1.5;2.5;2.4000001;2;1.4;2.2;2.5;1.2;1.6;
1.2;2;1.4;2.5999999;2.4000001;2.5999999;1.6;1.2;2.5;2;
2.9000001;2.5;2.3;1.7;1.9;1.6;2.9000001;2.0999999;2.7;2.3;
2.8;1.3;2.4000001;1.2;2.5999999;2.2;2.0999999;1.5;2.3;2.5;
2.5999999;2.5999999;2.3;2.5;2.2;2.3;2.4000001;1.2;1.8;2;
2.5;2.8;2.2;1.8;2.0999999;2.5;2.0999999;2.4000001;2.7;2.4000001;
1.4;2.5999999;1.3;2.5999999;2;2.0999999;1.3;1.2;1.9;2.5999999;
2.2;1.9;2;2.4000001;2.5;2.5;2.3;2.9000001;2.4000001;2.5;
2.5999999;1.9;1.8;2.9000001;2.3;2.3;2.7;1.9;1.5;1.4;
2.5999999;2.2;1.2;2.7;2.7;2.7;1.8;1.5;1.7;1.4;
2.4000001;2.7;2.5999999;2.5999999;1.8;1.7;2.5;2;2.4000001;2.3;
2.5999999;1.9;2.2;2.5;1.2;2.2;1.6;2.7;1.9;2;
2.0999999;2.4000001;2.8;2.8;2.7;1.3;1.6;2.8;2.5999999;1.8;
2.0999999;2.0999999;2.0999999;2.4000001;1.7;2.5;2.7;2;2.5999999;2.9000001;
2.7;1.7;2.5999999;2;2.2;2.5;2.5;2.8;2.7;2.7;
1.8;1.7;1.7;2;2.8;2.8;2.2;2.4000001;2.5999999;2.9000001;
2.7;2.8;2.5;1.5;2.7;2.8;1.2;2.3;1.6;2.8;
2.3;2.9000001;1.3;1.3;1.2;2.8;2.8;2.3;2.9000001;2.5;
1.9;1.6;1.8;2.5999999;1.9;1.4;2.3;2.9000001;2.5999999;1.8;
1.6;1.9;2.2;2.0999999;2.7;1.2;1.7;2.8;2;2.9000001;
1.7;2.9000001;2.9000001;2.4000001;2.7;1.6;2.8;2.9000001;1.4;1.4;
1.9;1.8;2.5999999;2.0999999;2.8;2.9000001;2.0999999;2.7;1.8;1.5;
2.4000001;2.5999999;2;2.4000001;1.3;1.6;2.9000001;1.9;1.7;1.8;
2.8;2.7;2.7;2.9000001;2.8;1.5;2.0999999;1.5;2.5;2.5999999;
2.2;1.5;1.6;2.2;2.9000001;1.6;2;2.5;2.8;1.2;
2.9000001;2.8;2.2;1.6;1.2;2.5;2.5;1.5;2.4000001;2.4000001;
1.7;2.7;2.5999999;2.3;2.7;2.9000001;2;1.5;2.5;1.8;
1.7;1.7;2.7;2.3;2.5999999;2.8;2.2;1.3;1.5;2.9000001;
1.7;1.3;2.3;1.9;2.3;1.6;1.9;2.8;1.2;2.3;
2.0999999;2.9000001;2.9000001;2.5999999;1.4;2.9000001;2;2.2;2.8;2.4000001;
1.8;1.5;1.4;1.4;2.4000001;1.4;2.7;2;2.0999999;1.6;
2.9000001;2.8;2.5999999;1.4;1.3;1.4;1.5;2.0999999;1.8;2.0999999;
1.9;1.8;1.5;2.7;2.4000001;1.6;2;1.2;1.9;2.5;
1.4;2.5;1.7;2.9000001;1.9;1.4;2.9000001;2.0999999;2.8;2.8;
1.2;2.2;2.7;1.6;2.2;1.7;2.9000001;1.6;2;1.6;
2.2;2.5999999;2.7;1.8;1.5;1.3;1.8;2.8;2.5999999;1.5;
1.7;1.3;1.2;1.3;2.5;2.5999999;2.5;2.3;1.9;2.3;
1.3;2;2.9000001;1.7;1.3;1.5;1.4;2.4000001;1.5;1.9;
1.3;1.4;2.3;2.7;2.7;2.8;2;2.4000001;2.8;1.7;
2.9000001;2.5999999;2.5;2.9000001;2.5999999;2.4000001;2.5;2.5999999;2.3;2.7;
2.7;2.5;2.7;2.4000001;2.4000001;2.3;1.3;1.8;2.5999999;2.8;
2.9000001;2.8;2.3;2.4000001;1.6;2.8;2.0999999;1.4;2.9000001;2.2;
1.4;2.5;2.3;2.9000001;2.0999999;2.2;2.4000001;2.7;2.2;1.8;
2.2;2.5;2.8;2.3;1.3;2.4000001;1.2;2.5999999;1.9;2.0999999;
1.6;2.0999999;2.5999999;2.0999999;2;1.8;2.9000001;1.5;1.6;1.2;
2.8;1.2;2.5;1.7;2.0999999;2.5;1.9;2.2;1.7;2.7;
2.5999999;2;2.0999999;1.4;2.7;2.2;2.9000001;1.4;1.2;2.2;
2;1.8;2;1.3;2.2;1.2;1.2;2.8;2.9000001;2.4000001;
2.8;1.6;1.3;2.2;2.0999999;2.0999999;1.7;1.9;2.3;2.5;
1.5;2.7;2.3;2;2.9000001;2.7;2.5999999;2.9000001;1.9;2.4000001;
2;1.9;2.9000001;2.3;1.9;2;2.8;1.3;2.5999999;1.2;
2.3;1.5;1.9;1.3;1.5;2.8;2.5;1.2;2.4000001;2;
2.3;1.8;2.7;2.5;2.2;2;1.8;2.5999999;1.8;2.8;
2.5999999;2.5999999;1.9;2.7;1.8;2.5;1.6;2.4000001;2.4000001;2.0999999;
1.3;1.4;1.2;2.7;1.5;1.9;2;2.0999999;2.5;1.7;
2.9000001;1.6;1.2;2.0999999;1.9;1.4;1.7;1.4;2.4000001;2.2;
2.0999999;2.3;2.9000001;1.7;2.7;1.4;1.2;2.5999999;2.5999999;2.8;
1.8;1.7;2.5;2.9000001;2.8;2.3;2.4000001;1.8;1.9;2.7;
2.4000001;2;1.3;1.8;2.8;1.7;2.0999999;2.5;2.3;1.7;
2;1.2;2.2;2.2;1.8;2.4000001;1.7;1.8;1.3;1.6;
2.9000001;2.7;2.2;1.6;2.9000001;2.2;1.5;2.3;2.2;2.5;
1.6;1.6;2.3;2.5;2.8;1.6;2.0999999;2.0999999;2.8;1.2;
1.7;1.9;2.9000001;1.9;2.8;2.5999999;2.2;1.6;2.7;2.4000001;
1.9;1.3;2.3;1.8;1.5;1.3;2;1.7;2.9000001;1.2;
2.5999999;2.3;2;1.5;1.7;2.0999999;2.5999999;2.8;1.5;2;
2.5999999;2.5;1.2;1.5;1.5;2;1.4;1.5;2.0999999;2.9000001;
2.9000001;2.7;2.2;2.7;1.9;1.4;1.6;1.8;1.4;1.3;
2.7;1.6;1.6;2.5;2.4000001;2.5999999;2.5999999;2.4000001;2.3;1.5;
1.9;1.6;2.7;1.8;2.8;2;1.7;2.0999999;1.5;2.5;
1.4;1.2;2.4000001;2.7;1.4;2.4000001;1.2;1.4;1.9;2;
1.4;1.4;1.3;1.8;2.8;2.0999999;1.3;1.7;2.4000001;1.5;
1.2;2.5;2.5;1.8;2.2;1.7;1.8;1.8;1.7;2.9000001;
1.5;2.3;1.7;2.8;1.9;1.6;1.2;1.9;2.8;2.5;
1.6;2.2;1.3;1.4;2.3;1.4;2.8;2.3;2.9000001;2.7;
1.6;1.3;2;1.5;2.5999999;1.5;2.9000001;1.4;1.7;2.5;
2.4000001;2.2;1.5;1.6;2.9000001;2.4000001;1.9;1.2;2.5999999;2.0999999;
2.9000001;1.5;1.3;1.6;2.2;1.2;2.5999999;1.6;2.5999999;2.8;
1.3;1.7;1.3;1.4;2.3;1.4;2.9000001;1.8;1.3;1.3;
2.5;1.5;1.8;1.7;2.3;1.5;1.3;2.2;2.2;1.4;
2.7;1.6;2.0999999;1.4;1.2;1.2;1.3;2.0999999;1.4;2.5999999;
1.9;2;2.7;2.0999999;1.8;1.6;2.7;1.4;1.4;1.7;
1.3;1.5;1.5;2.5999999;2.7;2.3;1.6;1.2;1.3;2;
1.7;2.7;1.6;1.5;2.4000001;2;2;1.2;2;1.9;
1.7;1.6;1.7;1.8;2.5;1.2;2.8;1.3;1.3;1.8;
2.0999999;1.5;1.4;1.7;1.2;2.8;1.2;1.9;2.4000001;1.3;
2.8;1.5;1.3;1.9;2.0999999;1.9;2;2;1.4;2.8;
1.9;1.9;1.8;2.4000001;2.0999999;1.2;1.6;1.9;1.2;1.2;
1.4;1.5;1.8;1.8;2.2;1.7;2.5;1.6;1.8;2.9000001;
2;2.9000001;1.3;2.5;2.3;1.7;2.9000001;1.6;1.2;2.2;
1.4;2.2;1.4;2.0999999;2.3;1.3;2;1.3;1.5;1.8;
1.4;1.9;1.2;2.4000001;1.2;1.3;1.2;1.7;2.9000001;1.8;
2.0999999;1.5;1.6;1.2;1.9;1.8;1.3;1.5;2.5;2.3;
2.5999999;2.2;2.5999999;2.2;2.0999999;1.4;1.2;1.5;2;1.7;
2.3;1.4;1.4;1.7;2.2;2.5999999;1.9;1.6;1.3;1.5;
1.6;2.4000001;1.7;1.6;1.5;2.0999999;2.3;2;2.2;1.8;
1.2;1.2;1.3;1.6;1.7;1.2;2.7;2.0999999;2.7;1.4;
2.7;2;1.3;2.3;1.2;1.8;1.5;1.7;1.6;2.5;
1.7;2.4000001;1.3;2;1.9;2.4000001;1.4;2.8;1.4;2.3;
1.3;1.3;2.2;1.5;1.6;2.0999999;2.8;1.9;2.0999999;1.8;
1.2;2;1.9;1.6;2.4000001;2.5999999;2.0999999;1.8;1.2;2.8;
2.9000001;1.2;2;2.5;1.3;1.4;2.2;1.9;1.7;1.8;
2.4000001;1.5;2.3;2.5;1.2;2.3;1.2;2;1.7;1.4;
1.9;1.6;2.2;2.7;1.4;2.9000001;2.4000001;1.3;2.2;1.5;
1.2;1.3;2.5999999;1.5;2.5;2.0999999;1.5;2.5;1.8;1.8;
1.2;2.5;2.9000001;1.5;2.4000001;2.0999999;1.9;1.3;1.6;2;
2.8;1.4;2.3;1.5;1.4;1.4;2.5999999;2.5999999;2.7;1.6;
2.2;2.5999999;1.9;1.7;1.3;2.5999999;2.3;1.6;1.7;2.5;
2.7;1.4;2.9000001;1.4;2.0999999;1.7;1.3;2.2;1.3;2.4000001;
1.5;2.8;2;1.2;1.2;1.8;1.2;1.2;2.7;2.8;
2;1.3;2.3;2.7;1.6;1.8;2.5999999;1.7;2.7;1.6;
2.2;2.9000001;1.2;2.4000001;1.2;2.3;2.5;2.9000001;1.9;1.7;
2.8;1.3;1.3;2.0999999;1.9;2.4000001;2.0999999;2.7;1.3;1.4;
1.9;2;2.8;1.8;2.0999999;2.3;1.5;1.2;1.2;1.8;
1.4;1.7;2.5999999;1.5;1.8;2.8;2.2;2;2.9000001;2.4000001;
1.6;2.3;2.5;1.6;2.2;2;2.5;2.8;1.4;2.4000001;
1.5;1.3;2.2;1.9;1.5;1.5;2.4000001;1.2;2.7;1.7;
2.5;2.9000001;2.0999999;1.4;1.2;1.4;2.9000001;1.9;1.6;2.9000001;
1.3;2.5;2.3;1.4;2.5999999;2.5999999;2.0999999;1.2;2.5999999;1.5;
2;1.8;1.3;2.8;2.5;1.6;2.7;2.2;1.7;2.3;
1.6;2.7;2.4000001;1.3;2.8;1.2;2.5999999;2;1.9;2.2;
2.0999999;2.9000001;2.7;1.7;2.5999999;1.8;2.9000001;2.3;1.7;1.3;
1.4;1.2;2.8;2.4000001;2.5;2;1.5;1.8;1.2;2.2;
2.7;2.3;2.7;2.0999999;1.9;2.8;2.4000001;1.6;1.3;2.9000001;
1.8;1.4;1.2;2.5999999;1.9;2.0999999;2.5;2.3;1.7;1.5;
2.8;2.8;2;2.4000001;1.3;1.2;2.5;2.2;1.4;2.9000001;
2;2.7;1.6;2.2;1.8;1.9;1.5;2.9000001;2.4000001;2.5999999;
1.6;2.5999999;2.0999999;2.9000001;2.5;1.7;2.0999999;1.9;2.8;2.3;
2.3;1.7;2.5;2;1.2;1.3;2.7;2.7;1.4;2;
2.2;2.9000001;1.8;2.2;2.5999999;1.8;1.5;2.4000001;1.2;2.4000001;
1.3;2.5999999;2.0999999;2.8;1.6;1.4;2.8;2.0999999;1.9;2.3;
1.9;2.3;2.5;2.7;1.2;1.7;1.5;2.5;1.3;2.7;
2.9000001;1.4;2.2;2;2.9000001;2.2;2.4000001;1.8;1.5;2;
2.5999999;1.6;2.4000001;2.8;2.8;2.5999999;1.6;2.0999999;2.3;1.9;
2.5;2.3;1.2;2.7;1.7;1.3;2.0999999;2.9000001;1.7;2.5;
2.9000001;1.2;2.7;1.4;2.2;2.4000001;2;1.3;2.5999999;1.5;
1.8;2.8;2.4000001;1.8;2.2;1.4;2.5999999;2.8;1.6;2.3;
2.0999999;2.5;1.2;1.9;2.7;2.9000001;1.3;2.5;1.7;1.5;
1.9;1.4;2.3;2.9000001;2.2;2.4000001;2.7;2;2.5999999;2.8;
1.8;1.5;1.6;2.5999999;2;1.2;2.3;1.6;2.0999999;2.5;
2.4000001;2.7;2.8;1.9;2.9000001;1.3;1.2;2.7;1.7;1.7;
1.4;1.3;2.2;2.4000001;2.0999999;2.5999999;2;2.8;2.9000001;2.5;
1.5;1.8;2.8;1.4;1.2;1.8;2.3;1.6;2.0999999;2.5;
2.7;2.9000001;1.3;2.2;1.9;2.5999999;2.9000001;1.5;1.7;1.4;
2.2;2.4000001;1.9;2.5999999;2.8;2;1.5;2.3;1.8;2.7;
1.6;2.3;1.2;2.5;1.6;2.7;2.9000001;2.0999999;2;1.9;
2.4000001;2.8;1.3;1.7;1.7;2.4000001;2.5999999;2.2;2.8;2;
2.0999999;1.8;1.4;2.9000001;2.5;2.5;2.3;2.7;2.0999999;2.9000001;
1.8;1.9;2.2;1.5;2.5999999;2.5999999;2.2;2.4000001;2.8;2;
1.9;2.3;1.6;2.3;2.7;2.7;2.5;2.9000001;2.0999999;2;
2.4000001;2.8;2.2;2.4000001;2.5999999;1.7;2.8;2.0999999;2.5;2.3;
2.9000001;2.7;2.9000001;2.5;1.8;2.5999999;2.4000001;2.2;2.8;2.5999999;
1.9;2.5;2.7;2.9000001;2.3;2.7;2.5999999;2;2.8;2.4000001;
2.8;2.7;2.9000001;2.0999999;2.9000001;2.5;2.8;2.2;2.5999999;2.9000001;
2.3;2.7;2.4000001;2.8;2.9000001;2.5;2.5999999;2.7;2.8;2.9000001;
       };
      };
      float_Data @[3] {
       name="r_val";
       desc="regression value";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [1800] 0.89476371;0.89469552;0.89461219;0.89453322;0.89450628;0.89450556;0.89444399;0.89444315;0.89443356;0.89437413;
0.89436942;0.89435053;0.89433867;0.89431077;0.89428037;0.89427477;0.89426231;0.89424235;0.89417368;0.89415705;
0.89415503;0.89414334;0.894135;0.89400256;0.89394832;0.89392197;0.89391708;0.89389688;0.89389038;0.89387876;
0.89387649;0.89387238;0.89386082;0.89383399;0.89383292;0.89379489;0.89377743;0.89377713;0.89374012;0.89372742;
0.89372271;0.8936882;0.89366663;0.89364457;0.89362538;0.89361668;0.89360929;0.89355433;0.89354783;0.89352703;
0.893484;0.89344621;0.893444;0.89341491;0.89339352;0.89331633;0.89325553;0.89324611;0.89323252;0.89320111;
0.89317489;0.89316899;0.89314651;0.89312559;0.893112;0.89306158;0.89306134;0.89305782;0.89304185;0.89300472;
0.89299488;0.89297545;0.8929655;0.89292252;0.89287359;0.89285332;0.89281923;0.89281589;0.89280546;0.8928023;
0.89279991;0.89275962;0.89275169;0.89273691;0.89271671;0.89270324;0.89269364;0.89268154;0.89265847;0.89264679;
0.89263183;0.89262688;0.89259332;0.89254153;0.89251018;0.89248443;0.89244115;0.89242291;0.89241719;0.89240324;
0.89240229;0.89239132;0.89238846;0.89233375;0.89229447;0.8921743;0.89213312;0.89208424;0.8920598;0.89203984;
0.89203686;0.89201349;0.89199811;0.89199167;0.8919636;0.89189827;0.89189345;0.89186609;0.89185715;0.89185023;
0.89182484;0.89182025;0.89181423;0.89180821;0.8917973;0.89174926;0.89172554;0.89171845;0.89166319;0.89165431;
0.89164048;0.89163846;0.89160532;0.891563;0.89151853;0.8914991;0.89147842;0.89144605;0.89142376;0.89139086;
0.89136654;0.89132726;0.89131665;0.89130098;0.89126444;0.8912636;0.89122057;0.89121521;0.89120013;0.89119065;
0.89117271;0.89113486;0.89108616;0.89106703;0.89103734;0.89103121;0.89102507;0.8909964;0.8909812;0.89096022;
0.89091909;0.89091063;0.89086616;0.89084387;0.89082891;0.89076018;0.89074957;0.89065731;0.89064664;0.89051569;
0.89051187;0.89051187;0.89047623;0.89047259;0.89044321;0.8903774;0.89036947;0.89034021;0.89032495;0.89030427;
0.89030123;0.89028394;0.89027971;0.89023536;0.89023536;0.89023101;0.89022762;0.89022642;0.89020908;0.89018899;
0.89018661;0.8901515;0.8901093;0.89005792;0.89005762;0.89005083;0.89002949;0.89002109;0.88996893;0.88992822;
0.88987285;0.88986677;0.88985962;0.88979226;0.88973171;0.88969737;0.88969016;0.8896699;0.8896665;0.88966411;
0.88964176;0.88962799;0.88950884;0.88949627;0.88945884;0.88945502;0.88941109;0.88936591;0.88935232;0.88932729;
0.88931477;0.8892746;0.8892467;0.88923234;0.88922948;0.8892079;0.88920414;0.88917214;0.88916171;0.88903362;
0.88887209;0.88885754;0.88880569;0.88880336;0.88874662;0.88874418;0.88873494;0.88873112;0.88870829;0.88867939;
0.88862711;0.8886227;0.88862085;0.88857216;0.88856101;0.88854051;0.88853884;0.88850129;0.88845265;0.88842618;
0.88840312;0.88837856;0.88836867;0.88835943;0.88835227;0.8883431;0.88831961;0.88831741;0.88830566;0.88830537;
0.88824207;0.88823354;0.88822049;0.88821989;0.8882165;0.88821167;0.88820565;0.88820356;0.88816714;0.88809872;
0.88803405;0.88801324;0.88801163;0.88800514;0.88796157;0.88795811;0.88791561;0.88791347;0.88784152;0.88783914;
0.88779646;0.8877629;0.88772917;0.88768125;0.88768005;0.88763112;0.88754815;0.88754368;0.88754004;0.88735324;
0.88734937;0.88734317;0.8873384;0.88726532;0.88725215;0.88725013;0.8872245;0.88720983;0.8871969;0.88718128;
0.88716614;0.88716346;0.88715476;0.88714796;0.88713676;0.88711548;0.88710797;0.88706958;0.88704079;0.88701242;
0.88699925;0.88698548;0.88693553;0.88692921;0.88691378;0.8868866;0.88687837;0.88686579;0.88683701;0.88683373;
0.88680393;0.88679069;0.88675195;0.88673306;0.88671166;0.88670725;0.88669586;0.8866089;0.88659447;0.88654643;
0.88652104;0.88651204;0.88650697;0.8864736;0.8864432;0.88642472;0.88636953;0.88635105;0.88633239;0.88629937;
0.8862915;0.88622308;0.8862229;0.88621479;0.88620985;0.8861751;0.88617384;0.88617295;0.88614488;0.88613337;
0.88613021;0.88611978;0.88611323;0.88609856;0.88609624;0.88609409;0.88607913;0.88605928;0.88604212;0.8860417;
0.88603777;0.88603044;0.88600695;0.88598251;0.88594669;0.88594157;0.88592815;0.88592702;0.88591278;0.885912;
0.88590038;0.88589513;0.88582361;0.88578892;0.88578105;0.88577497;0.88574189;0.88572657;0.88572484;0.88570845;
0.88570821;0.8856914;0.88568181;0.88567001;0.88566852;0.88559639;0.88559484;0.88555485;0.88555145;0.88551152;
0.88551146;0.88549107;0.88548636;0.885387;0.88537914;0.88530046;0.88527596;0.88526875;0.88525158;0.88521934;
0.8852123;0.88516033;0.88513529;0.88512081;0.88510078;0.88509852;0.88508564;0.88508123;0.88507152;0.88506269;
0.88505924;0.88503927;0.88503265;0.88503033;0.88501489;0.88500321;0.88495106;0.88494152;0.88492906;0.88492656;
0.88492364;0.88488996;0.88487154;0.88483489;0.88482952;0.8847819;0.88476509;0.88469517;0.88469136;0.8846584;
0.88465625;0.88462394;0.88462335;0.88461804;0.88460779;0.88457799;0.88456511;0.88455755;0.88450044;0.88448155;
0.88439345;0.88438004;0.88437742;0.88437551;0.8843382;0.88431239;0.88426918;0.88426751;0.88426483;0.88426393;
0.88424861;0.88424683;0.884229;0.8842116;0.88420278;0.8840813;0.88401872;0.88401198;0.88400662;0.88397944;
0.88397521;0.88392949;0.88389933;0.88388687;0.88388187;0.88384199;0.88383269;0.88377577;0.88371623;0.88370132;
0.88368404;0.88367081;0.8836658;0.88364691;0.88362557;0.88358879;0.88357508;0.88357204;0.88355571;0.88352114;
0.88351506;0.8835088;0.88350308;0.88348287;0.8834787;0.88347149;0.88346773;0.88343656;0.88342899;0.8833431;
0.8832317;0.88323158;0.8832131;0.88315904;0.88315612;0.88315141;0.88315022;0.88311988;0.88310498;0.88309789;
0.88307482;0.88304281;0.88302505;0.88297909;0.88295829;0.88292617;0.8829006;0.88287675;0.88279605;0.88273621;
0.88271797;0.88269126;0.88265061;0.88261741;0.8826102;0.88260913;0.88257807;0.8825739;0.88257337;0.88254064;
0.88249791;0.88248086;0.88247305;0.88244766;0.88243717;0.88240588;0.8823756;0.88232267;0.88229489;0.88229471;
0.8822943;0.88229269;0.88226748;0.88224399;0.88222659;0.88220543;0.88219154;0.88218355;0.88212359;0.88211888;
0.88211495;0.88209069;0.88208431;0.88204318;0.88202405;0.88199735;0.88197291;0.88196999;0.88196379;0.88187897;
0.8817941;0.88174075;0.88168025;0.88166124;0.88159245;0.881589;0.88158113;0.881495;0.88140959;0.88138944;
0.88137567;0.88135362;0.88132393;0.88129306;0.88128728;0.88127095;0.88126743;0.88123876;0.88122785;0.88119942;
0.88119036;0.88119;0.88104874;0.88104099;0.88103026;0.88097453;0.88095504;0.88093847;0.88084996;0.88076472;
0.88073426;0.88067466;0.88067323;0.88065356;0.88064086;0.88063419;0.8805995;0.88052571;0.88051778;0.8804602;
0.88044327;0.88043588;0.88039231;0.88032722;0.88032341;0.88030338;0.88030213;0.88029468;0.88023859;0.88023669;
0.88016874;0.8801477;0.88005912;0.88001984;0.88001412;0.87996674;0.87993348;0.87992555;0.87988377;0.87985802;
0.8798399;0.87979048;0.87978494;0.87972432;0.87963909;0.87961566;0.87961417;0.8795954;0.87955302;0.87954545;
0.87951678;0.8794983;0.87943977;0.87943292;0.87942559;0.87939942;0.87937516;0.87925696;0.87924379;0.87922812;
0.87917602;0.87916684;0.87915206;0.8791492;0.87908214;0.87903446;0.8789587;0.87895405;0.87887561;0.87884057;
0.87877828;0.87876523;0.87875384;0.87858456;0.87857884;0.87857682;0.87856692;0.87856215;0.87851256;0.87850922;
0.87849438;0.87849122;0.87848848;0.87847692;0.878456;0.87839949;0.8783772;0.87837601;0.87837279;0.87831318;
0.87829119;0.87828988;0.87827706;0.87827337;0.87820584;0.87818104;0.87816447;0.87811768;0.87809181;0.87809032;
0.87807876;0.87806863;0.8780576;0.87797242;0.87795448;0.87794316;0.87793887;0.8778863;0.87782073;0.87781644;
0.87779051;0.87777001;0.87774104;0.87773198;0.87772578;0.87772089;0.87772024;0.87771916;0.87767398;0.87762332;
0.87761635;0.87756538;0.87754911;0.87753129;0.87750822;0.87746322;0.87744081;0.87740225;0.87734002;0.87732863;
0.87731099;0.87729758;0.87728983;0.87725246;0.87725025;0.87724143;0.87723893;0.87720037;0.87719238;0.87718892;
0.87712646;0.87712485;0.87709725;0.87709689;0.87699383;0.87698311;0.87696856;0.87695348;0.87692976;0.87690413;
0.87689388;0.87686443;0.87684846;0.87681866;0.87680095;0.87674952;0.87673193;0.87669915;0.87669778;0.87665898;
0.87664527;0.8766135;0.87661093;0.87659675;0.8765884;0.87654716;0.8764832;0.87647295;0.87647206;0.87645739;
0.87642044;0.87637752;0.87636638;0.87630546;0.87626994;0.8762331;0.8762207;0.87620461;0.87617821;0.87615633;
0.87614787;0.87613446;0.87605631;0.87605363;0.87605155;0.87594676;0.875916;0.87591356;0.87590992;0.87590772;
0.87589055;0.87588573;0.87584811;0.87581635;0.87574178;0.87573469;0.87572491;0.87572408;0.87571508;0.87568825;
0.87566167;0.87564182;0.87563777;0.87563169;0.87555462;0.87550992;0.87550461;0.87544149;0.8754096;0.87535739;
0.87534648;0.87533259;0.87531716;0.87520909;0.87505758;0.87502652;0.87500012;0.87498641;0.87496221;0.87493855;
0.87484318;0.87482631;0.87479204;0.87467921;0.87467319;0.87466282;0.87461978;0.87461299;0.87448633;0.87444127;
0.8744297;0.8744297;0.87442958;0.87436467;0.87435931;0.87431788;0.8743059;0.87424815;0.87424403;0.87422699;
0.87422252;0.87420142;0.87418562;0.87416977;0.87416214;0.87413955;0.87411457;0.87407511;0.87401515;0.8740105;
0.87399632;0.87392151;0.87387794;0.8738656;0.87384957;0.87384129;0.87383145;0.87382936;0.87382299;0.87379241;
0.87379205;0.87373412;0.87370849;0.87365693;0.87365037;0.87361628;0.87356752;0.87354499;0.87353581;0.87352604;
0.87349832;0.87348521;0.87345624;0.87340802;0.87339789;0.87339181;0.87327361;0.87323767;0.87318772;0.87316686;
0.8731432;0.87313223;0.87312782;0.87311327;0.87309819;0.87308031;0.87307781;0.87301785;0.87296456;0.8729592;
0.8729232;0.87292099;0.87291896;0.8728649;0.87285542;0.87284756;0.87280637;0.87279296;0.87276858;0.87267649;
0.87258357;0.87252522;0.87243724;0.87242287;0.87241834;0.87225753;0.87223405;0.87222946;0.87221843;0.87220889;
0.8721354;0.8720988;0.87208003;0.87197441;0.87194729;0.87193131;0.87191212;0.87188029;0.87184525;0.87184113;
0.87182957;0.8717714;0.87176239;0.87174004;0.87172383;0.87171501;0.87169546;0.87169147;0.87169075;0.87168717;
0.87165576;0.87160516;0.87157726;0.87150079;0.87139487;0.87136173;0.87133753;0.87131453;0.87122625;0.87122017;
0.87120211;0.8711462;0.87111658;0.87109727;0.87102848;0.87101853;0.87100953;0.87094313;0.8709237;0.87092042;
0.87091792;0.87087095;0.87085801;0.87079424;0.87078834;0.87076771;0.87075847;0.87065351;0.87064439;0.87063098;
0.87058192;0.87056231;0.87052035;0.87048256;0.87040269;0.87036216;0.87035924;0.87028801;0.87020332;0.8701182;
0.87009269;0.87008137;0.87000698;0.86986279;0.86984867;0.86981982;0.86981142;0.86980885;0.86979216;0.86977476;
0.86971426;0.86970395;0.86968631;0.86950058;0.86944544;0.86941862;0.86940807;0.86939901;0.86936629;0.86935067;
0.86929423;0.86928558;0.86925817;0.86921507;0.86919916;0.86918265;0.86917228;0.86917007;0.86911577;0.86910504;
0.8690511;0.86904478;0.86891335;0.86888951;0.86887944;0.86887884;0.86887455;0.86884367;0.86884254;0.86883241;
0.86881089;0.86880839;0.8687883;0.86868984;0.86868775;0.86867994;0.86864191;0.86859584;0.86856955;0.86852103;
0.86850357;0.86849862;0.86848712;0.86845523;0.86845356;0.86841935;0.86838716;0.86837643;0.86835259;0.86835206;
0.86833787;0.86829126;0.86826509;0.86825722;0.86824179;0.86822909;0.86810017;0.86808962;0.86807775;0.86805397;
0.867917;0.86784714;0.86782944;0.86779457;0.86779225;0.86778218;0.8677578;0.86774582;0.86769468;0.86765522;
0.86758125;0.86757231;0.86756063;0.867558;0.86755759;0.8675319;0.86752677;0.86751705;0.86749488;0.86749172;
0.86747259;0.86746615;0.86746413;0.86744064;0.86742318;0.8673954;0.86738861;0.86734354;0.86732572;0.86730212;
0.86728239;0.86725354;0.86724472;0.86717504;0.86710995;0.86704528;0.86701435;0.86697185;0.8668837;0.8668713;
0.86682874;0.86681676;0.86679643;0.86677355;0.86674315;0.86672676;0.86669457;0.86665225;0.86656016;0.86655688;
0.866512;0.86650032;0.86644852;0.86642075;0.866418;0.86636263;0.86636019;0.86632323;0.86620039;0.8661868;
0.86617905;0.86616093;0.86613756;0.86610883;0.86604667;0.865973;0.86595351;0.86595225;0.86577362;0.86576855;
0.86576045;0.86575526;0.86569589;0.86568302;0.86566514;0.86565864;0.86565721;0.86561263;0.86561155;0.86555707;
0.86544758;0.865426;0.86541951;0.86541247;0.86533231;0.86530209;0.86529887;0.86527944;0.86527419;0.86518544;
0.86513311;0.86507517;0.86507481;0.86505479;0.86504447;0.86504316;0.8650071;0.8650068;0.86494684;0.86493355;
0.86488259;0.86488253;0.86473256;0.86468053;0.86466026;0.86465192;0.86463892;0.86461943;0.8645885;0.86457646;
0.86457306;0.864528;0.86451226;0.86449373;0.86448652;0.86446446;0.86442912;0.86442196;0.86438721;0.8643648;
0.86433786;0.86429954;0.86427283;0.8642624;0.86420679;0.86420506;0.86417508;0.86413991;0.8641293;0.86408818;
0.86397159;0.86394632;0.86390036;0.86381835;0.86381078;0.8637712;0.86374909;0.86371547;0.86369246;0.86368406;
0.86368012;0.86367732;0.86365902;0.86363119;0.8635959;0.86359102;0.86356342;0.86354685;0.8634752;0.86339146;
0.86335975;0.86335647;0.86331743;0.86331004;0.86328292;0.8631531;0.86314827;0.86313349;0.8630935;0.86308926;
0.86308777;0.86302596;0.86300373;0.86298746;0.86296928;0.86295462;0.8628301;0.86273533;0.86271286;0.86267477;
0.86265707;0.86263323;0.86260635;0.86260599;0.86254191;0.86249971;0.86238915;0.86237329;0.86236417;0.86232322;
0.8621766;0.86212605;0.86211979;0.86210984;0.86205697;0.86203158;0.86201793;0.8620106;0.86200505;0.86191034;
0.86180377;0.86166346;0.86165398;0.86164629;0.86162871;0.86160511;0.86155874;0.86154836;0.86147904;0.86147887;
0.86146468;0.86145312;0.86143494;0.86142635;0.86134303;0.86133981;0.86132509;0.86130899;0.86127108;0.86123163;
0.86111897;0.86099136;0.86097795;0.86090434;0.86087632;0.86076957;0.86075395;0.86073065;0.86072505;0.86065125;
0.86063951;0.86062467;0.86054522;0.86050957;0.8605085;0.8605001;0.86045432;0.86044055;0.86043233;0.86039209;
0.86038733;0.86033481;0.86020899;0.86019683;0.86011416;0.86003864;0.85998559;0.85996974;0.85989511;0.8598668;
0.85982054;0.85972011;0.85971898;0.85969085;0.85964853;0.85964334;0.85959393;0.85958451;0.85957962;0.85957152;
0.85954571;0.85945976;0.85944188;0.85943776;0.85940754;0.8593592;0.85935414;0.85934436;0.85930204;0.85929769;
0.85928935;0.85923398;0.85908067;0.85904467;0.85901636;0.85900837;0.85900122;0.85898137;0.85897231;0.85888219;
0.85887378;0.85886204;0.85875332;0.85864556;0.85859734;0.85859728;0.85856616;0.85852849;0.85846549;0.85846543;
0.85842878;0.85838002;0.85837978;0.85833412;0.85830933;0.85830545;0.85825092;0.85818255;0.85810673;0.85808146;
0.85805267;0.858033;0.85802138;0.85799134;0.85793674;0.85783648;0.85782355;0.85781753;0.85780317;0.85777915;
0.85766131;0.85763061;0.85757822;0.85755366;0.85750622;0.85745603;0.85744905;0.85741901;0.85732841;0.85723323;
0.85711491;0.85707629;0.85705543;0.85705447;0.8570174;0.85689986;0.85684901;0.85682666;0.8567965;0.85678184;
0.85673022;0.85670173;0.85669106;0.85661298;0.85661036;0.85660809;0.85658288;0.85656339;0.85646415;0.85638189;
0.8563183;0.85629094;0.85625136;0.85615486;0.85613948;0.85613137;0.85612428;0.85599965;0.85597622;0.85597247;
0.8559255;0.85591072;0.85588866;0.85584688;0.85575682;0.8557294;0.85562932;0.8554557;0.85543662;0.85541028;
0.85538286;0.85526907;0.85525852;0.855205;0.85519022;0.85518456;0.85517514;0.85515213;0.85507041;0.85497749;
0.85488969;0.85482383;0.85482156;0.85471511;0.85464311;0.85463917;0.85461211;0.85448027;0.85446399;0.85444278;
0.85430133;0.85428023;0.85424596;0.85420817;0.85414934;0.85411638;0.85410732;0.8541019;0.85407203;0.85402167;
0.85401851;0.85398912;0.853966;0.85394508;0.85393327;0.85392863;0.85391605;0.85389936;0.85381478;0.8537209;
0.8536365;0.85358989;0.85354805;0.85350966;0.8534441;0.85338855;0.85337478;0.85334074;0.85321254;0.85317618;
0.85314184;0.85308498;0.85292667;0.85292608;0.85291106;0.85287958;0.85282338;0.85281998;0.85276139;0.85269612;
0.8526814;0.85265166;0.85264713;0.85249406;0.85243213;0.85240024;0.85238737;0.85230434;0.85225666;0.85221648;
0.85219884;0.85218978;0.85213071;0.85211378;0.85210961;0.85210639;0.85199708;0.85191864;0.85188723;0.85172433;
0.85171735;0.85170597;0.85168493;0.85156375;0.85151374;0.8515017;0.85146946;0.85132825;0.85131526;0.85121608;
0.85107929;0.85083997;0.85078502;0.85077268;0.85076487;0.85070372;0.85060567;0.85059917;0.85057378;0.85049736;
0.85042059;0.85037965;0.85023326;0.85022318;0.85019624;0.85014284;0.85000002;0.84996164;0.84994739;0.8497982;
0.84964508;0.84960783;0.84958035;0.84949237;0.84942019;0.84932745;0.84920061;0.84919131;0.84906173;0.8490538;
0.84898174;0.84890974;0.84887838;0.84884614;0.84878522;0.84858853;0.84856147;0.84851146;0.84849834;0.84833246;
0.84826839;0.84824848;0.84824377;0.84804672;0.8480171;0.84798914;0.84776932;0.84763849;0.84761649;0.84759015;
0.84756529;0.84732872;0.84727943;0.84725708;0.84724796;0.84716392;0.84713864;0.84706718;0.84700871;0.84695977;
0.84672511;0.84666884;0.84660345;0.84657878;0.84654903;0.84650683;0.84649438;0.84626311;0.84618145;0.84605402;
0.84574395;0.84570318;0.84565914;0.84565622;0.84555465;0.8453567;0.84534049;0.84534013;0.84529501;0.84527725;
0.84511405;0.84479499;0.84470218;0.84469151;0.84458023;0.8445403;0.84435505;0.84426075;0.84420329;0.84401345;
0.8439483;0.84392905;0.8439042;0.8438803;0.84381616;0.84367871;0.84360844;0.84360808;0.84350735;0.84348977;
0.84335887;0.84320498;0.842848;0.84282154;0.84279424;0.84272772;0.84267688;0.84259146;0.84242129;0.84236282;
0.84229159;0.8421728;0.84207493;0.84205288;0.841878;0.84178936;0.84171557;0.84171528;0.84170461;0.84170008;
0.84138817;0.84126067;0.84109282;0.84104621;0.84102482;0.84099507;0.8408004;0.84062344;0.84058166;0.84055728;
0.8405202;0.84040797;0.84034914;0.84027451;0.84019375;0.8399604;0.83969843;0.83957618;0.83953249;0.83932191;
0.83920723;0.83914554;0.83907282;0.83895403;0.83886886;0.83876204;0.83873111;0.83869159;0.83863795;0.83849382;
0.83849007;0.83827239;0.83823001;0.83821183;0.83802742;0.83792621;0.83790517;0.83772713;0.83758938;0.83744884;
0.83742487;0.83738625;0.83731246;0.83715206;0.83683938;0.83672994;0.83661836;0.8365289;0.83649814;0.83641404;
0.83639234;0.83628255;0.83613974;0.83608019;0.83595967;0.83581865;0.83567166;0.83550292;0.83538473;0.83538413;
0.83530396;0.83499175;0.83490127;0.83486271;0.83479977;0.83474988;0.83473241;0.83462507;0.83461416;0.83432245;
0.83412927;0.83412403;0.83377165;0.83372349;0.83335972;0.83314735;0.83314228;0.83308786;0.83307427;0.83304918;
0.83293515;0.83292848;0.83284706;0.83274984;0.83268434;0.83253908;0.83252579;0.83197737;0.83195955;0.83190244;
0.83174831;0.83158642;0.83144492;0.8314327;0.83134794;0.83131838;0.83126473;0.83123446;0.83096886;0.83095562;
0.83079571;0.83058709;0.83026963;0.83022994;0.83005661;0.83000112;0.8297506;0.82969534;0.82968783;0.82968152;
0.82956791;0.8295356;0.82929671;0.82929355;0.82915741;0.82897067;0.8286019;0.8285625;0.82846379;0.82838458;
0.82803351;0.82800126;0.82793903;0.82789862;0.82780457;0.82762498;0.82733333;0.827214;0.82711565;0.82699192;
0.82666355;0.82631403;0.8263036;0.82620847;0.82615554;0.82609445;0.82603353;0.82600701;0.82580817;0.82566231;
0.82512456;0.82502627;0.82498449;0.82486302;0.82459998;0.82453883;0.82438272;0.82431406;0.82427174;0.82411587;
0.82363331;0.82346809;0.82329094;0.82307935;0.82303774;0.82271898;0.82255656;0.82252997;0.82248962;0.82244104;
0.82242149;0.82197958;0.82143551;0.8213256;0.82096291;0.82086223;0.82079214;0.82074302;0.82065779;0.82040691;
0.82016885;0.81923449;0.81916797;0.81903189;0.81897706;0.81890893;0.81888467;0.81877387;0.81876111;0.8178727;
0.81721765;0.81706893;0.81704676;0.81704086;0.81698883;0.8168804;0.81687987;0.81555736;0.81535721;0.81527519;
0.81514621;0.8150593;0.81488186;0.81486768;0.81451005;0.81345868;0.81345028;0.81324077;0.81310809;0.81272006;
0.81209451;0.81158257;0.81152707;0.81113583;0.81093955;0.81060529;0.8096748;0.80966139;0.80956918;0.80866402;
0.80852836;0.80773383;0.80758941;0.80723286;0.80649137;0.80642128;0.80576301;0.80482292;0.8042205;0.80376887;
0.80244619;0.80206329;0.80011123;0.79995465;0.79789627;0.79782331;0.7955882;0.79340869;0.79128736;0.78922278;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[5] {
     name="URSRdWtFun";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="SRAvg";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [200] 0;0.0049999999;0.0099999998;0.015;0.02;0.025;0.029999999;0.035;0.039999999;0.045000002;
0.050000001;0.055;0.059999999;0.064999998;0.07;0.075000003;0.079999998;0.085000001;0.090000004;0.094999999;
0.1;0.105;0.11;0.115;0.12;0.125;0.13;0.13500001;0.14;0.145;
0.15000001;0.155;0.16;0.16500001;0.17;0.175;0.18000001;0.185;0.19;0.19499999;
0.2;0.205;0.20999999;0.215;0.22;0.22499999;0.23;0.235;0.23999999;0.245;
0.25;0.255;0.25999999;0.26499999;0.27000001;0.27500001;0.28;0.285;0.28999999;0.29499999;
0.30000001;0.30500001;0.31;0.315;0.31999999;0.32499999;0.33000001;0.33500001;0.34;0.345;
0.34999999;0.35499999;0.36000001;0.36500001;0.37;0.375;0.38;0.38499999;0.38999999;0.39500001;
0.40000001;0.405;0.41;0.41499999;0.41999999;0.42500001;0.43000001;0.435;0.44;0.44499999;
0.44999999;0.45500001;0.46000001;0.465;0.47;0.47499999;0.47999999;0.48500001;0.49000001;0.495;
0.5;0.505;0.50999999;0.51499999;0.51999998;0.52499998;0.52999997;0.53500003;0.54000002;0.54500002;
0.55000001;0.55500001;0.56;0.565;0.56999999;0.57499999;0.57999998;0.58499998;0.58999997;0.59500003;
0.60000002;0.60500002;0.61000001;0.61500001;0.62;0.625;0.63;0.63499999;0.63999999;0.64499998;
0.64999998;0.65499997;0.66000003;0.66500002;0.67000002;0.67500001;0.68000001;0.685;0.69;0.69499999;
0.69999999;0.70499998;0.70999998;0.71499997;0.72000003;0.72500002;0.73000002;0.73500001;0.74000001;0.745;
0.75;0.755;0.75999999;0.76499999;0.76999998;0.77499998;0.77999997;0.78500003;0.79000002;0.79500002;
0.80000001;0.80500001;0.81;0.815;0.81999999;0.82499999;0.82999998;0.83499998;0.83999997;0.84500003;
0.85000002;0.85500002;0.86000001;0.86500001;0.87;0.875;0.88;0.88499999;0.88999999;0.89499998;
0.89999998;0.90499997;0.91000003;0.91500002;0.92000002;0.92500001;0.93000001;0.935;0.94;0.94499999;
0.94999999;0.95499998;0.95999998;0.96499997;0.97000003;0.97500002;0.98000002;0.98500001;0.99000001;0.995;
       };
      };
      float_Data @[1] {
       name="dWt";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [200] -0;-0.056666669;-0.11333334;-0.17;-0.22666667;-0.28333333;-0.34;-0.33000001;-0.31999999;-0.31;
-0.30000001;-0.28999999;-0.28;-0.27000001;-0.25999999;-0.25;-0.23999999;-0.23;-0.22;-0.20999999;
-0.2;-0.19;-0.18000001;-0.17;-0.16;-0.15000001;-0.14;-0.13;-0.12;-0.11;
-0.1;-0.090000004;-0.079999998;-0.07;-0.059999999;-0.050000001;-0.039999999;-0.029999999;-0.02;-0.0099999998;
8.3266727e-17;0.0049999999;0.0099999998;0.015;0.02;0.025;0.029999999;0.035;0.039999999;0.045000002;
0.050000001;0.055;0.059999999;0.064999998;0.07;0.075000003;0.079999998;0.085000001;0.090000004;0.094999999;
0.1;0.105;0.11;0.115;0.12;0.125;0.13;0.13500001;0.14;0.145;
0.15000001;0.155;0.16;0.16500001;0.17;0.175;0.18000001;0.185;0.19;0.19499999;
0.2;0.205;0.20999999;0.215;0.22;0.22499999;0.23;0.235;0.23999999;0.245;
0.25;0.255;0.25999999;0.26499999;0.27000001;0.27500001;0.28;0.285;0.28999999;0.29499999;
0.30000001;0.30500001;0.31;0.315;0.31999999;0.32499999;0.33000001;0.33500001;0.34;0.345;
0.34999999;0.35499999;0.36000001;0.36500001;0.37;0.375;0.38;0.38499999;0.38999999;0.39500001;
0.40000001;0.405;0.41;0.41499999;0.41999999;0.42500001;0.43000001;0.435;0.44;0.44499999;
0.44999999;0.45500001;0.46000001;0.465;0.47;0.47499999;0.47999999;0.48500001;0.49000001;0.495;
0.5;0.505;0.50999999;0.51499999;0.51999998;0.52499998;0.52999997;0.53500003;0.54000002;0.54500002;
0.55000001;0.55500001;0.56;0.565;0.56999999;0.57499999;0.57999998;0.58499998;0.58999997;0.59500003;
0.60000002;0.60500002;0.61000001;0.61500001;0.62;0.625;0.63;0.63499999;0.63999999;0.64499998;
0.64999998;0.65499997;0.66000003;0.66500002;0.67000002;0.67500001;0.68000001;0.685;0.69;0.69499999;
0.69999999;0.70499998;0.70999998;0.71499997;0.72000003;0.72500002;0.73000002;0.73500001;0.74000001;0.745;
0.75;0.755;0.75999999;0.76499999;0.76999998;0.77499998;0.77999997;0.78500003;0.79000002;0.79500002;
       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
   };
   types {
    name=;
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="RunMode";
     desc=;
     enums {
      name=;
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="READ_DATA";
       value=0;
       desc=;
      };
      DynEnumItem @[1] {
       name="CMP_DWT";
       value=1;
       desc="recompute dwt function etc";
      };
      DynEnumItem @[2] {
       name="PARAM_SEARCH";
       value=2;
       desc="search parameter space";
      };
      DynEnumItem @[3] {
       name="JUST_GRAPH";
       value=3;
       desc="don't do anything except graph existing data";
      };
     };
     bits=0;
    };
    DynEnumType @[1] {
     name="GraphMode";
     desc=;
     enums {
      name=;
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="DUR_SLICE";
       value=0;
       desc=;
      };
      DynEnumItem @[1] {
       name="SEND_SLICE";
       value=1;
       desc=;
      };
     };
     bits=0;
    };
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="urakubo_sim_dir";
     var_type=T_String;
     string_val="/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act_sr";
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="path to where the urakubo sims live";
     init_from=NULL;
    };
    ProgVar @[1] {
     name="run_mode";
     var_type=T_DynEnum;
     dyn_enum_val {
      enum_type=.projects[0].programs[7].types[0]$271$;
      value=1;
     };
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="graph_mode";
     var_type=T_DynEnum;
     dyn_enum_val {
      enum_type=.projects[0].programs[7].types[1]$272$;
      value=1;
     };
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[3] {
     name="file_filter";
     var_type=T_String;
     string_val="Trapped_AMPAR.Co19";
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="text that fname must contain";
     init_from=NULL;
    };
    ProgVar @[4] {
     name="rep_off_filter";
     var_type=T_String;
     string_val="off1_rep1";
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="off and rep vals -- filter for files off5_rep3, off1_rep1";
     init_from=NULL;
    };
    ProgVar @[5] {
     name="Path";
     var_type=T_String;
     string_val="/home/oreilly/svn_sims/leabra/urakubo_ltp/DATA_raw_act_sr/dur800shz90rhz90_off1_rep1/Trapped_AMPAR.Co19";
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[6] {
     name="FName";
     var_type=T_String;
     string_val="Trapped_AMPAR.Co19";
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[7] {
     name="subdir";
     var_type=T_String;
     string_val="dur800shz90rhz90_off1_rep1";
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[8] {
     name="SActHz";
     var_type=T_Real;
     real_val=90;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[9] {
     name="RActHz";
     var_type=T_Real;
     real_val=90;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[10] {
     name="DurMsec";
     var_type=T_Real;
     real_val=800;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[11] {
     name="DurSelect";
     var_type=T_Real;
     real_val=800;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[12] {
     name="SActHzSelect";
     var_type=T_Real;
     real_val=20;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[13] {
     name="SRAvg";
     var_type=T_Real;
     real_val=1.000000000000001;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[14] {
     name="Hz_max";
     var_type=T_Real;
     real_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="max hz";
     init_from=NULL;
    };
    ProgVar @[15] {
     name="Dur_max";
     var_type=T_Real;
     real_val=1000;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="max dur msec";
     init_from=NULL;
    };
    ProgVar @[16] {
     name="theta_P";
     var_type=T_Real;
     real_val=0.2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=".25 is opt fit -- theta for decrease vs. increase, in normalized units";
     init_from=NULL;
    };
    ProgVar @[17] {
     name="Drev";
     var_type=T_Real;
     real_val=0.03;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=".02 is opt fit -- reversal point for decrease (point of maximal decrease)";
     init_from=NULL;
    };
    ProgVar @[18] {
     name="Drev_mult";
     var_type=T_Real;
     real_val=0.15;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=".08 is opt fit -- reversal point for decrease (point of maximal decrease)";
     init_from=NULL;
    };
    ProgVar @[19] {
     name="Dmult";
     var_type=T_Real;
     real_val=2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="1.5 -- multiplier for D vals";
     init_from=NULL;
    };
    ProgVar @[20] {
     name="r_val";
     var_type=T_Real;
     real_val=0.894612193107605;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="regression correlation val";
     init_from=NULL;
    };
    ProgVar @[21] {
     name="dWt";
     var_type=T_Real;
     real_val=0.7950000000000008;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[22] {
     name="dWt_fun";
     var_type=T_Real;
     real_val=0.17;
     objs_ptr=0;
     flags=NULL_CHECK|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[23] {
     name="init_wt";
     var_type=T_Real;
     real_val=1.7719;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="weight at eq before stim train";
     init_from=NULL;
    };
    ProgVar @[24] {
     name="time";
     var_type=T_Real;
     real_val=624.76416015625;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[25] {
     name="final_wt";
     var_type=T_Real;
     real_val=1.991256475448608;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[26] {
     name="UReadOne";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[7].objs[0]$273$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[27] {
     name="Files";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[7].objs[1]$274$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[28] {
     name="URawActSRdWt";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[7].objs[2]$275$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[29] {
     name="i";
     var_type=T_Int;
     int_val=700;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[30] {
     name="j";
     var_type=T_Int;
     int_val=2451;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[31] {
     name="URawActSRAll";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[7].objs[3]$276$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[32] {
     name="data_loop_order";
     var_type=T_HardEnum;
     int_val=0;
     hard_enum_type=DataLoop::Order;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[33] {
     name="data_loop_index";
     var_type=T_Int;
     int_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[34] {
     name="ParamSearch";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[7].objs[4]$277$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[35] {
     name="URSRdWtFun";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[7].objs[5]$278$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
    Function @[0] {
     desc="compute dWt_fun for all vals in table";
     flags=;
     name="ComputedWts";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      DataCalcLoop @[1] {
       desc=;
       flags=;
       src_data_var=.projects[0].programs[7].vars[31]$279$;
       dest_data_var=NULL;
       src_cols {
	name="src_cols";
	el_typ=DataOpEl;
	el_def=0;
	DataOpEl @[0] {
	 col_name="SActHz";
	};
	DataOpEl @[1] {
	 col_name="RActHz";
	};
	DataOpEl @[2] {
	 col_name="SRAvg";
	};
	DataOpEl @[3] {
	 col_name="DurMsec";
	};
	DataOpEl @[4] {
	 col_name="dWt";
	};
	DataOpEl @[5] {
	 col_name="dWt_fun";
	};
	DataOpEl @[6] {
	 col_name="regress_line";
	};
       };
       dest_cols {
	name="dest_cols";
	el_typ=DataOpEl;
	el_def=0;
       };
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[7].functions[0].fun_code[1].src_col_vars[2]$280$;
	 expr {
	  expr="(s_DurMsec / Dur_max) * (s_SActHz / Hz_max) * (s_RActHz/ Hz_max)";
	 };
	};
	IfElse @[1] {
	 desc=;
	 flags=;
	 cond {
	  expr="s_SRAvg > theta_P";
	 };
	 true_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc="piecewise linear (best fit)";
	   flags=;
	   result_var=.projects[0].programs[7].functions[0].fun_code[1].src_col_vars[5]$281$;
	   expr {
	    expr="s_SRAvg - theta_P";
	   };
	  };
	 };
	 false_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc="piecewise linear (best fit)";
	   flags=;
	   result_var=$281$;
	   expr {
	    expr="(s_SRAvg > Drev) ? Dmult * (s_SRAvg - theta_P) : (-Dmult * s_SRAvg * ((theta_P - Drev) / Drev))";
	   };
	  };
	 };
	};
	AssignExpr @[2] {
	 desc="quasi-bcm";
	 flags=OFF;
	 result_var=$281$;
	 expr {
	  expr="s_SRAvg > theta_P ? s_SRAvg - theta_P : Dmult * s_SRAvg * (s_SRAvg - theta_P)";
	 };
	};
	DataCalcSetSrcRow @[3] {
	 desc=;
	 flags=;
	 src_data_var=$279$;
	 dest_data_var=NULL;
	};
       };
       src_col_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="s_SActHz";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[1] {
	 name="s_RActHz";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[2] {
	 name="s_SRAvg";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[3] {
	 name="s_DurMsec";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[4] {
	 name="s_dWt";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[5] {
	 name="s_dWt_fun";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[6] {
	 name="s_regress_line";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
       dest_col_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      MathCall @[2] {
       desc=;
       flags=;
       result_var=.projects[0].programs[7].vars[20]$282$;
       object_type=taMath_float;
       method=taMath_float::vec_correl;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=const_float_Matrix_ptr;
	 type="const float_Matrix*";
	 name="vec";
	 required=0;
	 def_val=;
	 expr {
	  expr="URawActSRAll.data.dWt_fun.ar";
	 };
	};
	ProgArg @[1] {
	 arg_type=const_float_Matrix_ptr;
	 type="const float_Matrix*";
	 name="oth_vec";
	 required=0;
	 def_val=;
	 expr {
	  expr="URawActSRAll.data.dWt.ar";
	 };
	};
       };
      };
     };
    };
    Function @[1] {
     desc=;
     flags=;
     name="PlotdWtFun";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      ResetDataRows @[1] {
       desc=;
       flags=;
       data_var=.projects[0].programs[7].vars[35]$283$;
      };
      ForLoop @[2] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	IfElse @[0] {
	 desc=;
	 flags=;
	 cond {
	  expr="SRAvg > theta_P";
	 };
	 true_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc="piecewise linear (best fit)";
	   flags=;
	   result_var=.projects[0].programs[7].vars[21]$284$;
	   expr {
	    expr="SRAvg - theta_P";
	   };
	  };
	 };
	 false_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc="piecewise linear (best fit)";
	   flags=;
	   result_var=$284$;
	   expr {
	    expr="(SRAvg > theta_P * Drev_mult) ? (Dmult * (SRAvg - theta_P)) : (Dmult * (-SRAvg * (1.0 - Drev_mult) / Drev_mult))";
	   };
	  };
	 };
	};
	AddNewDataRow @[1] {
	 desc=;
	 flags=;
	 data_var=$283$;
	};
	DataVarProg @[2] {
	 desc=;
	 flags=;
	 data_var=$283$;
	 set_data=1;
	 row_spec=CUR_ROW;
	 row_var=NULL;
	 quiet=0;
	 var_1=.projects[0].programs[7].vars[13]$285$;
	 var_2=$284$;
	 var_3=NULL;
	 var_4=NULL;
	};
       };
       init {
	expr="SRAvg = 0";
       };
       test {
	expr="SRAvg <= 1.0";
       };
       iter {
	expr="SRAvg += 0.005";
       };
      };
      DoneWritingDataRow @[3] {
       desc=;
       flags=;
       data_var=$283$;
      };
     };
    };
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    FunctionCall @[0] {
     desc=;
     flags=;
     result_var=NULL;
     fun=.projects[0].programs[7].functions[1]$286$;
     fun_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
     };
    };
    If @[1] {
     desc=;
     flags=;
     cond {
      expr="run_mode == READ_DATA";
     };
     true_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      ResetDataRows @[0] {
       desc=;
       flags=;
       data_var=.projects[0].programs[7].vars[27]$287$;
      };
      ResetDataRows @[1] {
       desc=;
       flags=;
       data_var=$279$;
      };
      DataGenCall @[2] {
       desc=;
       flags=;
       result_var=NULL;
       object_type=taDataGen;
       method=taDataGen::GetDirFiles;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable_ptr;
	 type="DataTable*";
	 name="dest";
	 required=1;
	 def_val=;
	 expr {
	  expr="Files";
	 };
	};
	ProgArg @[1] {
	 arg_type=const_taString_ref;
	 type="const taString&";
	 name="dir_path";
	 required=1;
	 def_val=;
	 expr {
	  expr="urakubo_sim_dir";
	 };
	};
	ProgArg @[2] {
	 arg_type=const_taString_ref;
	 type="const taString&";
	 name="filter";
	 required=0;
	 def_val="\"\"";
	 expr {
	  expr="file_filter";
	 };
	};
	ProgArg @[3] {
	 arg_type=bool;
	 type="bool";
	 name="recursive";
	 required=0;
	 def_val="false";
	 expr {
	  expr="true";
	 };
	};
	ProgArg @[4] {
	 arg_type=const_taString_ref;
	 type="const taString&";
	 name="fname_col_nm";
	 required=0;
	 def_val="FileName";
	 expr {
	  expr="\"FName\"";
	 };
	};
	ProgArg @[5] {
	 arg_type=const_taString_ref;
	 type="const taString&";
	 name="path_col_nm";
	 required=0;
	 def_val="FilePath";
	 expr {
	  expr="\"Path\"";
	 };
	};
       };
      };
      ForLoop @[3] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	DataVarProg @[0] {
	 desc=;
	 flags=;
	 data_var=$287$;
	 set_data=0;
	 row_spec=ROW_NUM;
	 row_var=.projects[0].programs[7].vars[29]$288$;
	 quiet=0;
	 var_1=.projects[0].programs[7].vars[5]$289$;
	 var_2=.projects[0].programs[7].vars[6]$290$;
	 var_3=NULL;
	 var_4=NULL;
	};
	IfContinue @[1] {
	 desc=;
	 flags=;
	 cond {
	  expr="!Path.contains(rep_off_filter)";
	 };
	};
	MethodCall @[2] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 obj=.projects[0].programs[7].vars[26]$291$;
	 method=DataTable::LoadData;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=const_taString_ref;
	   type="const taString&";
	   name="fname";
	   required=1;
	   def_val=;
	   expr {
	    expr="Path ";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=DataTable::Delimiters;
	   type="DataTable::Delimiters";
	   name="delim";
	   required=0;
	   def_val="DataTable::TAB";
	   expr {
	    expr="DataTable::SPACE";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=bool;
	   type="bool";
	   name="quote_str";
	   required=0;
	   def_val="true";
	   expr {
	    expr="true";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=int;
	   type="int";
	   name="max_recs";
	   required=0;
	   def_val="-1";
	   expr {
	    expr="-1";
	   };
	  };
	  ProgArg @[4] {
	   arg_type=bool;
	   type="bool";
	   name="reset_first";
	   required=0;
	   def_val="false";
	   expr {
	    expr="true";
	   };
	  };
	 };
	};
	AssignExpr @[3] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[7].vars[7]$292$;
	 expr {
	  expr="Path.before(\"/\",-1).after(\"/\",-1)";
	 };
	};
	AssignExpr @[4] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[7].vars[8]$293$;
	 expr {
	  expr="subdir.after(\"shz\").before(\"rhz\")";
	 };
	};
	AssignExpr @[5] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[7].vars[9]$294$;
	 expr {
	  expr="subdir.after(\"rhz\").before(\"_\")";
	 };
	};
	AssignExpr @[6] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[7].vars[10]$295$;
	 expr {
	  expr="subdir.after(\"dur\").before(\"hz\")";
	 };
	};
	ForLoop @[7] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=;
	   result_var=.projects[0].programs[7].vars[24]$296$;
	   expr {
	    expr="UReadOne[0][j]";
	   };
	  };
	  If @[1] {
	   desc=;
	   flags=;
	   cond {
	    expr="time >= 620.0";
	   };
	   true_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    AssignExpr @[0] {
	     desc=;
	     flags=;
	     result_var=.projects[0].programs[7].vars[25]$297$;
	     expr {
	      expr="UReadOne[1][j]";
	     };
	    };
	    IfBreak @[1] {
	     desc=;
	     flags=;
	     cond {
	      expr="true";
	     };
	    };
	   };
	  };
	 };
	 init {
	  expr="j = 0";
	 };
	 test {
	  expr="j < UReadOne.rows";
	 };
	 iter {
	  expr="j++";
	 };
	};
	AssignExpr @[8] {
	 desc=;
	 flags=;
	 result_var=$284$;
	 expr {
	  expr="final_wt - init_wt";
	 };
	};
	AddNewDataRow @[9] {
	 desc=;
	 flags=;
	 data_var=$279$;
	};
	DataVarProg @[10] {
	 desc=;
	 flags=;
	 data_var=$279$;
	 set_data=1;
	 row_spec=CUR_ROW;
	 row_var=NULL;
	 quiet=0;
	 var_1=$293$;
	 var_2=$295$;
	 var_3=$294$;
	 var_4=$284$;
	};
	DoneWritingDataRow @[11] {
	 desc=;
	 flags=;
	 data_var=$279$;
	};
       };
       init {
	expr="i = 0";
       };
       test {
	expr="i < Files.rows";
       };
       iter {
	expr="i++";
       };
      };
     };
    };
    IfElse @[2] {
     desc=;
     flags=;
     cond {
      expr="run_mode == PARAM_SEARCH";
     };
     true_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      ResetDataRows @[0] {
       desc=;
       flags=;
       data_var=.projects[0].programs[7].vars[34]$298$;
      };
      ForLoop @[1] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  ForLoop @[0] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    AddNewDataRow @[0] {
	     desc=;
	     flags=;
	     data_var=$298$;
	    };
	    FunctionCall @[1] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=.projects[0].programs[7].functions[0]$299$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    DataVarProg @[2] {
	     desc=;
	     flags=;
	     data_var=$298$;
	     set_data=1;
	     row_spec=CUR_ROW;
	     row_var=NULL;
	     quiet=0;
	     var_1=.projects[0].programs[7].vars[16]$300$;
	     var_2=.projects[0].programs[7].vars[17]$301$;
	     var_3=$282$;
	     var_4=.projects[0].programs[7].vars[19]$302$;
	    };
	   };
	   init {
	    expr="Dmult = 1.2";
	   };
	   test {
	    expr="Dmult < 3";
	   };
	   iter {
	    expr="Dmult += .1";
	   };
	  };
	 };
	 init {
	  expr="Drev = .01";
	 };
	 test {
	  expr="Drev <= .05";
	 };
	 iter {
	  expr="Drev += .01";
	 };
	};
       };
       init {
	expr="theta_P = .1";
       };
       test {
	expr="theta_P <= .3";
       };
       iter {
	expr="theta_P += .01";
       };
      };
      MethodCall @[2] {
       desc=;
       flags=;
       result_var=NULL;
       obj=$298$;
       method=DataTable::Sort;
       meth_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=Variant;
	 type="Variant";
	 name="col1";
	 required=1;
	 def_val=;
	 expr {
	  expr="\"r_val\"";
	 };
	};
	ProgArg @[1] {
	 arg_type=bool;
	 type="bool";
	 name="ascending1";
	 required=0;
	 def_val="true";
	 expr {
	  expr="false";
	 };
	};
	ProgArg @[2] {
	 arg_type=Variant;
	 type="Variant";
	 name="col2";
	 required=0;
	 def_val="-1";
	 expr {
	  expr=;
	 };
	};
	ProgArg @[3] {
	 arg_type=bool;
	 type="bool";
	 name="ascending2";
	 required=0;
	 def_val="true";
	 expr {
	  expr=;
	 };
	};
	ProgArg @[4] {
	 arg_type=Variant;
	 type="Variant";
	 name="col3";
	 required=0;
	 def_val="-1";
	 expr {
	  expr=;
	 };
	};
	ProgArg @[5] {
	 arg_type=bool;
	 type="bool";
	 name="ascending3";
	 required=0;
	 def_val="true";
	 expr {
	  expr=;
	 };
	};
	ProgArg @[6] {
	 arg_type=Variant;
	 type="Variant";
	 name="col4";
	 required=0;
	 def_val="-1";
	 expr {
	  expr=;
	 };
	};
	ProgArg @[7] {
	 arg_type=bool;
	 type="bool";
	 name="ascending4";
	 required=0;
	 def_val="true";
	 expr {
	  expr=;
	 };
	};
	ProgArg @[8] {
	 arg_type=Variant;
	 type="Variant";
	 name="col5";
	 required=0;
	 def_val="-1";
	 expr {
	  expr=;
	 };
	};
	ProgArg @[9] {
	 arg_type=bool;
	 type="bool";
	 name="ascending5";
	 required=0;
	 def_val="true";
	 expr {
	  expr=;
	 };
	};
	ProgArg @[10] {
	 arg_type=Variant;
	 type="Variant";
	 name="col6";
	 required=0;
	 def_val="-1";
	 expr {
	  expr=;
	 };
	};
	ProgArg @[11] {
	 arg_type=bool;
	 type="bool";
	 name="ascending6";
	 required=0;
	 def_val="true";
	 expr {
	  expr=;
	 };
	};
       };
      };
     };
     false_code {
      name=;
      el_typ=ProgEl;
      el_def=0;
      If @[0] {
       desc="compute";
       flags=;
       cond {
	expr="run_mode != JUST_GRAPH";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	FunctionCall @[0] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=$299$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	DataAnalCall @[1] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 object_type=taDataAnal;
	 method=taDataAnal::RegressLinear;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=DataTable_ptr;
	   type="DataTable*";
	   name="src_data";
	   required=1;
	   def_val=;
	   expr {
	    expr="URawActSRAll";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=const_taString_ref;
	   type="const taString&";
	   name="x_data_col_nm";
	   required=1;
	   def_val=;
	   expr {
	    expr="\"dWt_fun\"";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=const_taString_ref;
	   type="const taString&";
	   name="y_data_col_nm";
	   required=1;
	   def_val=;
	   expr {
	    expr="\"dWt\"";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=bool;
	   type="bool";
	   name="render_line";
	   required=0;
	   def_val="true";
	   expr {
	    expr="true";
	   };
	  };
	 };
	};
       };
      };
     };
    };
    Switch @[3] {
     desc=;
     flags=;
     switch_var=.projects[0].programs[7].vars[2]$303$;
     cases {
      name=;
      el_typ=CaseBlock;
      el_def=0;
      CaseBlock @[0] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	DataSelectRowsProg @[0] {
	 desc=;
	 flags=;
	 src_data_var=$279$;
	 dest_data_var=.projects[0].programs[7].vars[28]$304$;
	 select_spec {
	  name="select_spec";
	  ops {
	   name=;
	   el_typ=DataSelectEl;
	   el_def=0;
	   DataSelectEl @[0] {
	    col_name="DurMsec";
	    on=1;
	    rel=EQUAL;
	    use_var=1;
	    cmp 6 0=800;
	    var=.projects[0].programs[7].vars[11]$305$;
	    enable_var=NULL;
	   };
	  };
	  comb_op=AND;
	 };
	};
	DataAnalCall @[1] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 object_type=taDataAnal;
	 method=taDataAnal::Matrix3DGraph;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=DataTable_ptr;
	   type="DataTable*";
	   name="data";
	   required=0;
	   def_val=;
	   expr {
	    expr="URawActSRdWt";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=const_taString_ref;
	   type="const taString&";
	   name="x_axis_col";
	   required=0;
	   def_val="\"\"";
	   expr {
	    expr="\"RActHz\"";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=const_taString_ref;
	   type="const taString&";
	   name="z_axis_col";
	   required=0;
	   def_val="\"\"";
	   expr {
	    expr="\"SActHz\"";
	   };
	  };
	 };
	};
       };
       case_val {
	expr="DUR_SLICE";
       };
      };
      CaseBlock @[1] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	DataSelectRowsProg @[0] {
	 desc=;
	 flags=;
	 src_data_var=$279$;
	 dest_data_var=$304$;
	 select_spec {
	  name="select_spec";
	  ops {
	   name=;
	   el_typ=DataSelectEl;
	   el_def=0;
	   DataSelectEl @[0] {
	    col_name="SActHz";
	    on=1;
	    rel=EQUAL;
	    use_var=1;
	    cmp 6 0=20;
	    var=.projects[0].programs[7].vars[12]$306$;
	    enable_var=NULL;
	   };
	  };
	  comb_op=AND;
	 };
	};
	DataAnalCall @[1] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 object_type=taDataAnal;
	 method=taDataAnal::Matrix3DGraph;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=DataTable_ptr;
	   type="DataTable*";
	   name="data";
	   required=0;
	   def_val=;
	   expr {
	    expr="URawActSRdWt";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=const_taString_ref;
	   type="const taString&";
	   name="x_axis_col";
	   required=0;
	   def_val="\"\"";
	   expr {
	    expr="\"DurMsec\"";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=const_taString_ref;
	   type="const taString&";
	   name="z_axis_col";
	   required=0;
	   def_val="\"\"";
	   expr {
	    expr="\"RActHz\"";
	   };
	  };
	 };
	};
       };
       case_val {
	expr="SEND_SLICE";
       };
      };
     };
    };
   };
  };
  Program @[8] {
   name="RubinEtAl05";
   tags=;
   desc="attempt to replicate with Ca simplifications the RubinGerkinBiChow05 model";
   flags=;
   objs {
    name=;
    el_typ=DataTable;
    el_def=0;
    DataTable @[0] {
     name="RubinEtAl_SimData";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="r_fire_off";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[1] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[2] {
       name="s_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[3] {
       name="s_ge";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[4] {
       name="r_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[5] {
       name="r_ge";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[6] {
       name="cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[7] {
       name="dcai";
       desc="change in cai";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[8] {
       name="P";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[9] {
       name="dP";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[10] {
       name="P_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[11] {
       name="V";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[12] {
       name="dV";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[13] {
       name="V_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[14] {
       name="A";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[15] {
       name="dA";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[16] {
       name="A_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[17] {
       name="B";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[18] {
       name="dB";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[19] {
       name="B_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[20] {
       name="D";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[21] {
       name="dD";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[22] {
       name="D_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[23] {
       name="W";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[24] {
       name="dW";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[25] {
       name="W_p_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[26] {
       name="W_d_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
      float_Data @[27] {
       name="W_tot";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
      };
     };
     data_flags=AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[1] {
     name="RubinEtAl_OffData";
     desc=;
     data {
      name="data";
      el_typ=DataColTp;
      el_def=0;
      float_Data @[0] {
       name="r_fire_off";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [41] -40;-38;-36;-34;-32;-30;-28;-26;-24;-22;
-20;-18;-16;-14;-12;-10;-8;-6;-4;-2;
-0;2;4;6;8;10;12;14;16;18;
20;22;24;26;28;30;32;34;36;38;
40;       };
      };
      float_Data @[1] {
       name="time";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [41] 199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;
199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;
199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;
199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;199.5;
199.5;       };
      };
      float_Data @[2] {
       name="W_tot";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [41] 0.014341081;0.014310498;-0.37508807;-0.90477717;-1.0838027;-1.2951831;-1.5547963;-1.9055513;-2.1992924;-2.2187479;
-2.2184839;-2.2175095;-2.216152;-2.2142708;-2.2115386;-2.2062182;-2.1537092;0.059329059;0.31759101;2.5066626;
4.3817916;4.398468;4.0860176;3.5703833;2.8904264;2.1436279;1.4567007;0.92090893;0.55745149;0.3352592;
0.20741282;0.13506076;0.093442552;0.068675317;0.053330809;0.043435518;0.036814295;0.032236401;0.028979914;0.026606128;
0.024839448;       };
      };
      float_Data @[3] {
       name="W";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [41] 0.00031900607;0.00031628925;-0.019214302;-0.044932906;-0.049119987;-0.053551774;-0.058500018;-0.064531393;-0.069135636;-0.069423534;
-0.069412842;-0.069389611;-0.069358289;-0.069316082;-0.069257051;-0.069152623;-0.068316661;0.0012908395;0.0066022119;0.0520298;
0.096754536;0.096701033;0.087999955;0.074942186;0.059149925;0.042993128;0.028867761;0.018176273;0.011019737;0.0066573718;
0.0041423002;0.0027139103;0.0018892379;0.0013967337;0.001090545;0.00089237763;0.00075924478;0.00066676259;0.00060059858;0.0005520276;
0.00051556074;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
    DataTable @[2] {
     name="RubinEqPlot";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="ca";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 0;0.1;0.2;0.30000001;0.40000001;0.5;0.60000002;0.69999999;0.80000001;0.89999998;
1;1.1;1.2;1.3;1.4;1.5;1.6;1.7;1.8;1.9;
2;2.0999999;2.2;2.3;2.4000001;2.5;2.5999999;2.7;2.8;2.9000001;
3;3.0999999;3.2;3.3;3.4000001;3.5;3.5999999;3.7;3.8;3.9000001;
4;4.0999999;4.1999998;4.3000002;4.4000001;4.5;4.5999999;4.6999998;4.8000002;4.9000001;
5;5.0999999;5.1999998;5.3000002;5.4000001;5.5;5.5999999;5.6999998;5.8000002;5.9000001;
6;6.0999999;6.1999998;6.3000002;6.4000001;6.5;6.5999999;6.6999998;6.8000002;6.9000001;
7;7.0999999;7.1999998;7.3000002;7.4000001;7.5;7.5999999;7.6999998;7.8000002;7.9000001;
8;8.1000004;8.1999998;8.3000002;8.3999996;8.5;8.6000004;8.6999998;8.8000002;8.8999996;
9;9.1000004;9.1999998;9.3000002;9.3999996;9.5;9.6000004;9.6999998;9.8000002;9.8999996;
10;       };
      };
      float_Data @[1] {
       name="p_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 0;3.9062484e-06;6.249961e-05;0.00031639624;0.00099990005;0.0024408104;0.0050599384;0.0093701184;0.015974442;0.025563391;
0.038910504;0.05686618;0.08034917;0.11033543;0.14784391;0.19391908;0.24960998;0.31594604;0.39390975;0.48440689;
0.58823532;0.70605314;0.83834839;0.98541081;1.1473088;1.3238721;1.5146823;1.7190721;1.9361342;2.1647389;
2.4035609;2.6511135;2.9057889;3.1658998;3.4297247;3.6955519;3.9617174;4.2266417;4.4888587;4.7470379;
5;5.2467256;5.4863591;5.718205;5.9417233;6.156517;6.3623219;6.5589924;6.7464862;6.9248514;
7.0942111;7.2547507;7.4067063;7.5503521;7.6859922;7.813951;7.934567;8.0481853;8.1551542;8.2558174;
8.3505154;8.43958;8.5233326;8.6020832;8.6761284;8.7457514;8.811223;8.8727989;8.9307213;8.985219;
9.0365076;9.0847883;9.1302528;9.1730795;9.2134352;9.2514753;9.2873487;9.3211899;9.3531275;9.3832827;
9.4117651;9.4386797;9.4641228;9.4881878;9.5109568;9.5325108;9.5529232;9.5722618;9.5905933;9.6079769;
9.6244678;9.6401205;9.6549835;9.6691017;9.6825199;9.6952763;9.7074108;9.7189569;9.729949;9.7404165;
9.7503901;       };
      };
      float_Data @[2] {
       name="a_act";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 0;0.0046082949;0.035714287;0.11111111;0.22857143;0.36656892;0.5;0.61359572;0.70329672;0.77142859;
0.82236844;0.86037493;0.8888889;0.91048485;0.92702705;0.93984962;0.94990724;0.95788652;0.96428573;0.96946996;
0.97370982;0.97720796;0.9801178;0.98255676;0.98461539;0.98636448;0.98785973;0.98914516;0.99025625;0.99122131;
0.99206346;0.99280167;0.99345136;0.99402541;0.99453443;0.99498737;0.99539173;0.99575382;0.99607903;0.99637187;
0.99663633;0.99687576;0.99709302;0.99729061;0.99747074;0.99763525;0.99778581;0.99792385;0.99805069;0.9981674;
0.99827498;0.99837434;0.99846619;0.99855125;0.99863017;0.99870342;0.99877155;0.99883503;0.99889416;0.99894941;
0.99900103;0.99904931;0.99909449;0.99913692;0.99917668;0.99921411;0.99924922;0.99928236;0.99931353;0.99934292;
0.99937063;0.99939686;0.99942166;0.99944508;0.99946725;0.99948823;0.9995082;0.9995271;0.99954504;0.99956208;
0.9995783;0.99959373;0.9996084;0.9996224;0.9996357;0.99964839;0.99966055;0.99967211;0.99968314;0.99969369;
0.99970376;0.99971342;0.99972266;0.99973154;0.99974;0.99974811;0.99975592;0.99976337;0.99977058;0.99977744;
0.99978405;       };
      };
      float_Data @[3] {
       name="x";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;       };
      };
      float_Data @[4] {
       name="V_x";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 4.2483541e-18;3.1391329e-17;2.3195227e-16;1.7139084e-15;1.2664166e-14;9.3576229e-14;6.9144002e-13;5.1090889e-12;3.7751344e-11;2.7894681e-10;
2.0611537e-09;1.5229979e-08;1.1253516e-07;8.3152804e-07;6.1441747e-06;4.5397868e-05;0.00033535014;0.0024726233;0.01798621;0.11920292;
0.5;0.88079709;0.98201376;0.99752736;0.99966466;0.99995458;0.99999386;0.99999917;0.99999988;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;       };
      };
      float_Data @[5] {
       name="D_x";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;3.7835059e-44;8.1940087e-40;1.8048513e-35;3.97545e-31;
8.7565109e-27;1.9287499e-22;4.2483541e-18;9.3576229e-14;2.0611537e-09;4.5397868e-05;0.5;0.99995458;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;       };
      };
      float_Data @[6] {
       name="B_x";
       col_flags=SAVE_ROWS|SAVE_DATA;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       ar {
	name=;
	      [101] 5.6999592e-12;8.4594898e-10;1.2554996e-07;1.8633196e-05;0.0027638932;0.37929091;4.6207089;4.9972363;4.9999814;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;5;5;5;5;5;5;5;5;5;
5;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     keygen 4 0=0;
    };
   };
   types {
    name=;
    el_typ=DynEnumType;
    el_def=0;
    DynEnumType @[0] {
     name="SimType";
     desc=;
     enums {
      name=;
      el_typ=DynEnumItem;
      el_def=0;
      DynEnumItem @[0] {
       name="PAIRS";
       value=0;
       desc="one pair of sender and receiver firing with timing firing offset (standard STDP data)";
      };
      DynEnumItem @[1] {
       name="TRIPLES";
       value=1;
       desc="triple firing data: pre-post-pre vs. post-pre-post -- all just at one offset";
      };
     };
     bits=0;
    };
   };
   args {
    name=;
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name=;
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="RubinEtAl_SimData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[8].objs[0]$307$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="sim_type";
     var_type=T_DynEnum;
     dyn_enum_val {
      enum_type=.projects[0].programs[8].types[0]$308$;
      value=0;
     };
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="r_fire_t_trg";
     var_type=T_Int;
     int_val=100;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="target recv firing time (actual time may be diff depending on protocol)";
     init_from=NULL;
    };
    ProgVar @[3] {
     name="s_fire_off_rng";
     var_type=T_Int;
     int_val=40;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="range around r_fire_t to vary s_fire_t";
     init_from=NULL;
    };
    ProgVar @[4] {
     name="s_fire_off_inc";
     var_type=T_Int;
     int_val=2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="increment in s_fire_off to explore";
     init_from=NULL;
    };
    ProgVar @[5] {
     name="s_act";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[6] {
     name="r_act";
     var_type=T_Real;
     real_val=0;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[7] {
     name="s_ge";
     var_type=T_Real;
     real_val=3.94762828364037e-05;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[8] {
     name="r_ge";
     var_type=T_Real;
     real_val=2.45395387072562e-41;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[9] {
     name="cai";
     var_type=T_Real;
     real_val=0.05917282429915791;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[10] {
     name="dcai";
     var_type=T_Real;
     real_val=7.89525656728074e-06;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[11] {
     name="s_cai";
     var_type=T_Real;
     real_val=0.02;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="how much does sender alone contribute to cai (.02 with std params fits best)";
     init_from=NULL;
    };
    ProgVar @[12] {
     name="r_cai";
     var_type=T_Real;
     real_val=0.03;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="how much does recv alone contribute to cai (.03 with std params fits best)";
     init_from=NULL;
    };
    ProgVar @[13] {
     name="sr_cai";
     var_type=T_Real;
     real_val=0.95;
     objs_ptr=0;
     flags=CTRL_PANEL|CTRL_READ_ONLY|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="1-s_cai-r_cai";
     init_from=NULL;
    };
    ProgVar @[14] {
     name="ca_gain";
     var_type=T_Real;
     real_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="overall gain on cai relative to ge conductance values (8 is best)";
     init_from=NULL;
    };
    ProgVar @[15] {
     name="cai_inc";
     var_type=T_Real;
     real_val=2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="time constant for increase in cai as function of sending and recv acts (2 is best)";
     init_from=NULL;
    };
    ProgVar @[16] {
     name="cai_dec";
     var_type=T_Real;
     real_val=0.065;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="time constant for decrease in cai (as function of cai level) (.065 is best)";
     init_from=NULL;
    };
    ProgVar @[17] {
     name="pHC";
     var_type=T_Real;
     real_val=4;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="4 uM";
     init_from=NULL;
    };
    ProgVar @[18] {
     name="pHN";
     var_type=T_Real;
     real_val=4;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="4 ";
     init_from=NULL;
    };
    ProgVar @[19] {
     name="P_dt";
     var_type=T_Real;
     real_val=500;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="500 ms";
     init_from=NULL;
    };
    ProgVar @[20] {
     name="P_c";
     var_type=T_Real;
     real_val=5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="5 drag of AP term on P";
     init_from=NULL;
    };
    ProgVar @[21] {
     name="aHC";
     var_type=T_Real;
     real_val=0.6;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=".6 uM";
     init_from=NULL;
    };
    ProgVar @[22] {
     name="aHN";
     var_type=T_Real;
     real_val=3;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="3 uM";
     init_from=NULL;
    };
    ProgVar @[23] {
     name="A_dt";
     var_type=T_Real;
     real_val=5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="5 ms";
     init_from=NULL;
    };
    ProgVar @[24] {
     name="V_alpha";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="Max V value (1 default)";
     init_from=NULL;
    };
    ProgVar @[25] {
     name="V_thr";
     var_type=T_Real;
     real_val=2;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="uM V threshold (2 def)";
     init_from=NULL;
    };
    ProgVar @[26] {
     name="V_sig";
     var_type=T_Real;
     real_val=-0.05;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-0.05 V gain on sigmoid";
     init_from=NULL;
    };
    ProgVar @[27] {
     name="V_dt";
     var_type=T_Real;
     real_val=10;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="10 ms";
     init_from=NULL;
    };
    ProgVar @[28] {
     name="D_alpha";
     var_type=T_Real;
     real_val=1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="1 max D val";
     init_from=NULL;
    };
    ProgVar @[29] {
     name="D_thr";
     var_type=T_Real;
     real_val=2.6;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="2.6";
     init_from=NULL;
    };
    ProgVar @[30] {
     name="D_sig";
     var_type=T_Real;
     real_val=-0.01;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-0.01";
     init_from=NULL;
    };
    ProgVar @[31] {
     name="D_dt";
     var_type=T_Real;
     real_val=250;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="250 ms";
     init_from=NULL;
    };
    ProgVar @[32] {
     name="D_c";
     var_type=T_Real;
     real_val=4;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="4 multipier for BV drag term on B";
     init_from=NULL;
    };
    ProgVar @[33] {
     name="B_alpha";
     var_type=T_Real;
     real_val=5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="5 max B val";
     init_from=NULL;
    };
    ProgVar @[34] {
     name="B_thr";
     var_type=T_Real;
     real_val=0.55;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="0.55";
     init_from=NULL;
    };
    ProgVar @[35] {
     name="B_sig";
     var_type=T_Real;
     real_val=-0.02;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-0.02";
     init_from=NULL;
    };
    ProgVar @[36] {
     name="B_dt";
     var_type=T_Real;
     real_val=40;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="40 ms";
     init_from=NULL;
    };
    ProgVar @[37] {
     name="W_dt";
     var_type=T_Real;
     real_val=500;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="500 ms";
     init_from=NULL;
    };
    ProgVar @[38] {
     name="dW_base_sub";
     var_type=T_Real;
     real_val=6.8e-05;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="6.8e-05 baseline dW value to subtract from W computation (sigmoid has non-zero values even when nothing is happening)";
     init_from=NULL;
    };
    ProgVar @[39] {
     name="W_p_thr";
     var_type=T_Real;
     real_val=0.3;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="0.3 threshold for P in contribution to W";
     init_from=NULL;
    };
    ProgVar @[40] {
     name="W_p_alpha";
     var_type=T_Real;
     real_val=0.8;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="0.8 gain on p contribution to W";
     init_from=NULL;
    };
    ProgVar @[41] {
     name="W_p_sig";
     var_type=T_Real;
     real_val=-0.1;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-0.1";
     init_from=NULL;
    };
    ProgVar @[42] {
     name="W_d_thr";
     var_type=T_Real;
     real_val=0.01;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="0.01 threshold on D contribution to W";
     init_from=NULL;
    };
    ProgVar @[43] {
     name="W_d_alpha";
     var_type=T_Real;
     real_val=0.6;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="0.6 gain of D contribution to W";
     init_from=NULL;
    };
    ProgVar @[44] {
     name="W_d_sig";
     var_type=T_Real;
     real_val=-0.002;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-0.002";
     init_from=NULL;
    };
    ProgVar @[45] {
     name="SendSpikeAlpha";
     var_type=T_Object;
     object_type=LeabraUnitSpec;
     object_val=$57$;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[46] {
     name="RecvSpikeAlpha";
     var_type=T_Object;
     object_type=LeabraUnitSpec;
     object_val=$58$;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[47] {
     name="time_max";
     var_type=T_Real;
     real_val=200;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[48] {
     name="sim_dt";
     var_type=T_Real;
     real_val=0.5;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="in msec";
     init_from=NULL;
    };
    ProgVar @[49] {
     name="s_fire_t";
     var_type=T_Int;
     int_val=140;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[50] {
     name="s_fire_off";
     var_type=T_Real;
     real_val=42;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="range around r_fire_t to vary s_fire_t";
     init_from=NULL;
    };
    ProgVar @[51] {
     name="r_fire_off";
     var_type=T_Real;
     real_val=-40;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc="-s_fire_off -- more typical for stdp expts";
     init_from=NULL;
    };
    ProgVar @[52] {
     name="r_fire_t";
     var_type=T_Int;
     int_val=100;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[53] {
     name="time";
     var_type=T_Real;
     real_val=200;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[54] {
     name="RubinEtAl_OffData";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[8].objs[1]$309$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[55] {
     name="RubinEqPlot";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.projects[0].programs[8].objs[2]$310$;
     objs_ptr=1;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[56] {
     name="P";
     var_type=T_Real;
     real_val=0.005186542236675134;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[57] {
     name="P_act";
     var_type=T_Real;
     real_val=4.789048198028228e-07;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[58] {
     name="dP";
     var_type=T_Real;
     real_val=-2.91907920820638e-07;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[59] {
     name="V";
     var_type=T_Real;
     real_val=9.30155620988984e-07;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[60] {
     name="V_act";
     var_type=T_Real;
     real_val=1.38736056359461e-17;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[61] {
     name="dV";
     var_type=T_Real;
     real_val=-9.791111799738003e-08;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[62] {
     name="A";
     var_type=T_Real;
     real_val=0.005177668230305935;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[63] {
     name="A_act";
     var_type=T_Real;
     real_val=0.0009582895779856068;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[64] {
     name="dA";
     var_type=T_Real;
     real_val=-0.0009376397005156285;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[65] {
     name="B";
     var_type=T_Real;
     real_val=1.069793259887273;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[66] {
     name="B_act";
     var_type=T_Real;
     real_val=7.559336580126555e-12;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[67] {
     name="dB";
     var_type=T_Real;
     real_val=-0.02708348108104699;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[68] {
     name="D";
     var_type=T_Real;
     real_val=7.258232249268934e-09;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[69] {
     name="D_act";
     var_type=T_Real;
     real_val=1.355426520919606e-66;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[70] {
     name="dD";
     var_type=T_Real;
     real_val=-2.909111121951476e-11;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[71] {
     name="W";
     var_type=T_Real;
     real_val=0.0003190060544414489;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[72] {
     name="W_p_act";
     var_type=T_Real;
     real_val=0.03985985585052232;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[73] {
     name="W_d_act";
     var_type=T_Real;
     real_val=0.004015725059548635;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[74] {
     name="dW";
     var_type=T_Real;
     real_val=3.053302775840301e-06;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[75] {
     name="W_tot";
     var_type=T_Real;
     real_val=0.0143410814980338;
     objs_ptr=0;
     flags=NULL_CHECK|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   functions {
    name=;
    el_typ=Function;
    el_def=0;
    Function @[0] {
     desc="calcium sensitivity equation";
     flags=;
     name="CaSensEq";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="ca";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="ca level";
       init_from=NULL;
      };
      ProgVar @[1] {
       name="ca_norm";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="ca normalizing variable (pHC, aHC)";
       init_from=NULL;
      };
      ProgVar @[2] {
       name="ca_exp";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="ca exponent (power)";
       init_from=NULL;
      };
      ProgVar @[3] {
       name="num_mult";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc="numerator multiplier (10 or 1)";
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="nrm_exp";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc="normalized exponentiated value";
	 init_from=NULL;
	};
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].functions[0].fun_code[0].local_vars[0]$311$;
       expr {
	expr="pow(ca / ca_norm, ca_exp)";
       };
      };
      ReturnExpr @[2] {
       desc=;
       flags=;
       expr {
	expr="(num_mult * nrm_exp) / (1.0 + nrm_exp)";
       };
      };
     };
    };
    Function @[1] {
     desc=;
     flags=;
     name="Sigmoid";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="x";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="alpha";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="thr";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[3] {
       name="sigma";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      ReturnExpr @[1] {
       desc=;
       flags=;
       expr {
	expr="alpha / (1.0 + exp((x - thr)/sigma))";
       };
      };
     };
    };
    Function @[2] {
     desc="Only does sigmoid if arg is > 0 -- otherwise returns 0";
     flags=;
     name="SigmoidGTZero";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="x";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="alpha";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="thr";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[3] {
       name="sigma";
       var_type=T_Real;
       real_val=0;
       objs_ptr=0;
       flags=NULL_CHECK|LOCAL_VAR|FUN_ARG|USED;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      If @[1] {
       desc=;
       flags=;
       cond {
	expr="fabs(x) <= 1.0e-6";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ReturnExpr @[0] {
	 desc=;
	 flags=;
	 expr {
	  expr="0.0";
	 };
	};
       };
      };
      ReturnExpr @[2] {
       desc=;
       flags=;
       expr {
	expr="alpha / (1.0 + exp((x - thr)/sigma))";
       };
      };
     };
    };
    Function @[3] {
     desc=;
     flags=;
     name="PlotEqs";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="ca";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[1] {
	 name="p_act";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[2] {
	 name="a_act";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[3] {
	 name="x";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[4] {
	 name="V_x";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[5] {
	 name="D_x";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[6] {
	 name="B_x";
	 var_type=T_Real;
	 real_val=0;
	 objs_ptr=0;
	 flags=NULL_CHECK|LOCAL_VAR|USED;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
      };
      ResetDataRows @[1] {
       desc=;
       flags=;
       data_var=.projects[0].programs[8].vars[55]$312$;
      };
      ForLoop @[2] {
       desc=;
       flags=;
       loop_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	FunctionCall @[0] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[8].functions[3].fun_code[0].local_vars[1]$313$;
	 fun=.projects[0].programs[8].functions[0]$314$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="ca";
	   required=1;
	   def_val=;
	   expr {
	    expr="ca";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="ca_norm";
	   required=1;
	   def_val=;
	   expr {
	    expr="pHC";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="ca_exp";
	   required=1;
	   def_val=;
	   expr {
	    expr="pHN";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="num_mult";
	   required=1;
	   def_val=;
	   expr {
	    expr="10.0";
	   };
	  };
	 };
	};
	FunctionCall @[1] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[8].functions[3].fun_code[0].local_vars[2]$315$;
	 fun=$314$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="ca";
	   required=1;
	   def_val=;
	   expr {
	    expr="ca";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="ca_norm";
	   required=1;
	   def_val=;
	   expr {
	    expr="aHC";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="ca_exp";
	   required=1;
	   def_val=;
	   expr {
	    expr="aHN";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="num_mult";
	   required=1;
	   def_val=;
	   expr {
	    expr="1.0";
	   };
	  };
	 };
	};
	FunctionCall @[2] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[8].functions[3].fun_code[0].local_vars[4]$316$;
	 fun=.projects[0].programs[8].functions[1]$317$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="x";
	   required=1;
	   def_val=;
	   expr {
	    expr="ca";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="alpha";
	   required=1;
	   def_val=;
	   expr {
	    expr="V_alpha";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="thr";
	   required=1;
	   def_val=;
	   expr {
	    expr="V_thr";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="sigma";
	   required=1;
	   def_val=;
	   expr {
	    expr="V_sig";
	   };
	  };
	 };
	};
	FunctionCall @[3] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[8].functions[3].fun_code[0].local_vars[5]$318$;
	 fun=$317$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="x";
	   required=1;
	   def_val=;
	   expr {
	    expr="ca";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="alpha";
	   required=1;
	   def_val=;
	   expr {
	    expr="D_alpha";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="thr";
	   required=1;
	   def_val=;
	   expr {
	    expr="D_thr";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="sigma";
	   required=1;
	   def_val=;
	   expr {
	    expr="D_sig";
	   };
	  };
	 };
	};
	FunctionCall @[4] {
	 desc=;
	 flags=;
	 result_var=.projects[0].programs[8].functions[3].fun_code[0].local_vars[6]$319$;
	 fun=$317$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=double;
	   type="double";
	   name="x";
	   required=1;
	   def_val=;
	   expr {
	    expr="ca";
	   };
	  };
	  ProgArg @[1] {
	   arg_type=double;
	   type="double";
	   name="alpha";
	   required=1;
	   def_val=;
	   expr {
	    expr="B_alpha";
	   };
	  };
	  ProgArg @[2] {
	   arg_type=double;
	   type="double";
	   name="thr";
	   required=1;
	   def_val=;
	   expr {
	    expr="B_thr";
	   };
	  };
	  ProgArg @[3] {
	   arg_type=double;
	   type="double";
	   name="sigma";
	   required=1;
	   def_val=;
	   expr {
	    expr="B_sig";
	   };
	  };
	 };
	};
	AddNewDataRow @[5] {
	 desc=;
	 flags=;
	 data_var=$312$;
	};
	DataVarProg @[6] {
	 desc=;
	 flags=;
	 data_var=$312$;
	 set_data=1;
	 row_spec=CUR_ROW;
	 row_var=NULL;
	 quiet=1;
	 var_1=.projects[0].programs[8].functions[3].fun_code[0].local_vars[0]$320$;
	 var_2=$313$;
	 var_3=$315$;
	 var_4=NULL;
	};
	DataVarProg @[7] {
	 desc=;
	 flags=;
	 data_var=$312$;
	 set_data=1;
	 row_spec=CUR_ROW;
	 row_var=NULL;
	 quiet=1;
	 var_1=$316$;
	 var_2=$318$;
	 var_3=$319$;
	 var_4=NULL;
	};
       };
       init {
	expr="ca = 0";
       };
       test {
	expr="ca < 10";
       };
       iter {
	expr="ca+=.1";
       };
      };
     };
    };
    Function @[4] {
     desc="do one time step of computation using current parameters, and writing results to table";
     flags=;
     name="RubinCycle";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[5]$321$;
       expr {
	expr="(time == s_fire_t) ? 1.0 : 0.0";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[6]$322$;
       expr {
	expr="(time == r_fire_t) ? 1.0 : 0.0";
       };
      };
      IfElse @[3] {
       desc=;
       flags=;
       cond {
	expr="time >= s_fire_t";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	MemberMethodCall @[0] {
	 desc=;
	 flags=;
	 obj=.projects[0].programs[8].vars[45]$323$;
	 path="spike";
	 result_var=.projects[0].programs[8].vars[7]$324$;
	 method=SpikeFunSpec::ComputeAlpha;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=float;
	   type="float";
	   name="t";
	   required=0;
	   def_val=;
	   expr {
	    expr="time-s_fire_t";
	   };
	  };
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=$324$;
	 expr {
	  expr="0.0";
	 };
	};
       };
      };
      IfElse @[4] {
       desc=;
       flags=;
       cond {
	expr="time >= r_fire_t";
       };
       true_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	MemberMethodCall @[0] {
	 desc=;
	 flags=;
	 obj=.projects[0].programs[8].vars[46]$325$;
	 path="spike";
	 result_var=.projects[0].programs[8].vars[8]$326$;
	 method=SpikeFunSpec::ComputeAlpha;
	 meth_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	  ProgArg @[0] {
	   arg_type=float;
	   type="float";
	   name="t";
	   required=0;
	   def_val=;
	   expr {
	    expr="time-r_fire_t";
	   };
	  };
	 };
	};
       };
       false_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	AssignExpr @[0] {
	 desc=;
	 flags=;
	 result_var=$326$;
	 expr {
	  expr="0.0";
	 };
	};
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[10]$327$;
       expr {
	expr="ca_gain* (s_cai * s_ge + r_cai * r_ge + sr_cai * s_ge * r_ge)";
       };
      };
      VarIncr @[6] {
       desc=;
       flags=;
       var=.projects[0].programs[8].vars[9]$328$;
       expr {
	expr="sim_dt * (cai_inc * dcai - cai_dec * cai)";
       };
      };
      Comment @[7] {
       desc="==== Below is Rubin et al code";
       flags=;
      };
      FunctionCall @[8] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[57]$329$;
       fun=$314$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="ca";
	 required=1;
	 def_val=;
	 expr {
	  expr="cai";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="ca_norm";
	 required=1;
	 def_val=;
	 expr {
	  expr="pHC";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="ca_exp";
	 required=1;
	 def_val=;
	 expr {
	  expr="pHN";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="num_mult";
	 required=1;
	 def_val=;
	 expr {
	  expr="10.0";
	 };
	};
       };
      };
      FunctionCall @[9] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[63]$330$;
       fun=$314$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="ca";
	 required=1;
	 def_val=;
	 expr {
	  expr="cai";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="ca_norm";
	 required=1;
	 def_val=;
	 expr {
	  expr="aHC";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="ca_exp";
	 required=1;
	 def_val=;
	 expr {
	  expr="aHN";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="num_mult";
	 required=1;
	 def_val=;
	 expr {
	  expr="1.0";
	 };
	};
       };
      };
      FunctionCall @[10] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[60]$331$;
       fun=$317$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="x";
	 required=1;
	 def_val=;
	 expr {
	  expr="cai";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="alpha";
	 required=1;
	 def_val=;
	 expr {
	  expr="V_alpha";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="thr";
	 required=1;
	 def_val=;
	 expr {
	  expr="V_thr";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="sigma";
	 required=1;
	 def_val=;
	 expr {
	  expr="V_sig";
	 };
	};
       };
      };
      FunctionCall @[11] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[66]$332$;
       fun=$317$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="x";
	 required=1;
	 def_val=;
	 expr {
	  expr="A";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="alpha";
	 required=1;
	 def_val=;
	 expr {
	  expr="B_alpha";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="thr";
	 required=1;
	 def_val=;
	 expr {
	  expr="B_thr";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="sigma";
	 required=1;
	 def_val=;
	 expr {
	  expr="B_sig";
	 };
	};
       };
      };
      FunctionCall @[12] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[69]$333$;
       fun=$317$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="x";
	 required=1;
	 def_val=;
	 expr {
	  expr="B";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="alpha";
	 required=1;
	 def_val=;
	 expr {
	  expr="D_alpha";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="thr";
	 required=1;
	 def_val=;
	 expr {
	  expr="D_thr";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="sigma";
	 required=1;
	 def_val=;
	 expr {
	  expr="D_sig";
	 };
	};
       };
      };
      FunctionCall @[13] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[72]$334$;
       fun=$317$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="x";
	 required=1;
	 def_val=;
	 expr {
	  expr="P";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="alpha";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_p_alpha";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="thr";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_p_thr";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="sigma";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_p_sig";
	 };
	};
       };
      };
      FunctionCall @[14] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[73]$335$;
       fun=$317$;
       fun_args {
	name=;
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=double;
	 type="double";
	 name="x";
	 required=1;
	 def_val=;
	 expr {
	  expr="D";
	 };
	};
	ProgArg @[1] {
	 arg_type=double;
	 type="double";
	 name="alpha";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_d_alpha";
	 };
	};
	ProgArg @[2] {
	 arg_type=double;
	 type="double";
	 name="thr";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_d_thr";
	 };
	};
	ProgArg @[3] {
	 arg_type=double;
	 type="double";
	 name="sigma";
	 required=1;
	 def_val=;
	 expr {
	  expr="W_d_sig";
	 };
	};
       };
      };
      AssignExpr @[15] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[58]$336$;
       expr {
	expr="(P_act - P_c * A * P) / P_dt";
       };
      };
      AssignExpr @[16] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[61]$337$;
       expr {
	expr="(V_act - V) / V_dt";
       };
      };
      AssignExpr @[17] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[64]$338$;
       expr {
	expr="(A_act - A) / A_dt";
       };
      };
      AssignExpr @[18] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[67]$339$;
       expr {
	expr="(B_act - B - D_c * B * V) / B_dt";
       };
      };
      AssignExpr @[19] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[70]$340$;
       expr {
	expr="(D_act - D) / D_dt";
       };
      };
      AssignExpr @[20] {
       desc=;
       flags=;
       result_var=.projects[0].programs[8].vars[74]$341$;
       expr {
	expr="(W_p_act - W_d_act - W) / W_dt - dW_base_sub";
       };
      };
      VarIncr @[21] {
       desc=;
       flags=;
       var=.projects[0].programs[8].vars[56]$342$;
       expr {
	expr="sim_dt*dP";
       };
      };
      VarIncr @[22] {
       desc=;
       flags=;
       var=.projects[0].programs[8].vars[59]$343$;
       expr {
	expr="sim_dt*dV";
       };
      };
      VarIncr @[23] {
       desc=;
       flags=;
       var=.projects[0].programs[8].vars[62]$344$;
       expr {
	expr="sim_dt*dA";
       };
      };
      VarIncr @[24] {
       desc=;
       flags=;
       var=.projects[0].programs[8].vars[65]$345$;
       expr {
	expr="sim_dt*dB";
       };
      };
      VarIncr @[25] {
       desc=;
       flags=;
       var=.projects[0].programs[8].vars[68]$346$;
       expr {
	expr="sim_dt*dD";
       };
      };
      VarIncr @[26] {
       desc=;
       flags=;
       var=.projects[0].programs[8].vars[71]$347$;
       expr {
	expr="sim_dt*dW";
       };
      };
      VarIncr @[27] {
       desc=;
       flags=;
       var=.projects[0].programs[8].vars[75]$348$;
       expr {
	expr="sim_dt*W";
       };
      };
      AddNewDataRow @[28] {
       desc=;
       flags=;
       data_var=.projects[0].programs[8].vars[0]$349$;
      };
      DataVarProg @[29] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=.projects[0].programs[8].vars[53]$350$;
       var_2=.projects[0].programs[8].vars[51]$351$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[30] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=NULL;
       var_2=$321$;
       var_3=$324$;
       var_4=NULL;
      };
      DataVarProg @[31] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$322$;
       var_2=$326$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[32] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=$327$;
       var_2=$328$;
       var_3=NULL;
       var_4=NULL;
      };
      DataVarProg @[33] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$342$;
       var_2=$336$;
       var_3=$329$;
       var_4=NULL;
      };
      DataVarProg @[34] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=$344$;
       var_2=$338$;
       var_3=$330$;
       var_4=NULL;
      };
      DataVarProg @[35] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$343$;
       var_2=$337$;
       var_3=$331$;
       var_4=NULL;
      };
      DataVarProg @[36] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=$345$;
       var_2=$339$;
       var_3=$332$;
       var_4=NULL;
      };
      DataVarProg @[37] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=0;
       var_1=$346$;
       var_2=$340$;
       var_3=$333$;
       var_4=NULL;
      };
      DataVarProg @[38] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=$347$;
       var_2=$341$;
       var_3=$334$;
       var_4=$335$;
      };
      DataVarProg @[39] {
       desc=;
       flags=;
       data_var=$349$;
       set_data=1;
       row_spec=CUR_ROW;
       row_var=NULL;
       quiet=1;
       var_1=$348$;
       var_2=NULL;
       var_3=NULL;
       var_4=NULL;
      };
     };
    };
    Function @[5] {
     desc="initialize vals prior to run";
     flags=;
     name="InitRun";
     return_type=T_Int;
     object_type=taOBase;
     args {
      name=;
      el_typ=ProgVar;
      el_def=0;
     };
     fun_code {
      name=;
      el_typ=ProgVars;
      el_def=0;
      ProgVars @[0] {
       desc=;
       flags=;
       local_vars {
	name=;
	el_typ=ProgVar;
	el_def=0;
       };
      };
      AssignExpr @[1] {
       desc=;
       flags=;
       result_var=$328$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[2] {
       desc=;
       flags=;
       result_var=$344$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[3] {
       desc=;
       flags=;
       result_var=$345$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[4] {
       desc=;
       flags=;
       result_var=$346$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[5] {
       desc=;
       flags=;
       result_var=$342$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[6] {
       desc=;
       flags=;
       result_var=$347$;
       expr {
	expr="0.0";
       };
      };
      AssignExpr @[7] {
       desc=;
       flags=;
       result_var=$348$;
       expr {
	expr="0.0";
       };
      };
     };
    };
   };
   load_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   init_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
   };
   prog_code {
    name=;
    el_typ=ProgEl;
    el_def=0;
    FunctionCall @[0] {
     desc=;
     flags=OFF;
     result_var=NULL;
     fun=.projects[0].programs[8].functions[3]$352$;
     fun_args {
      name=;
      el_typ=ProgArg;
      el_def=0;
     };
    };
    ResetDataRows @[1] {
     desc=;
     flags=;
     data_var=$349$;
    };
    AssignExpr @[2] {
     desc=;
     flags=;
     result_var=.projects[0].programs[8].vars[13]$353$;
     expr {
      expr="1.0 - s_cai - r_cai";
     };
    };
    Switch @[3] {
     desc=;
     flags=;
     switch_var=.projects[0].programs[8].vars[1]$354$;
     cases {
      name=;
      el_typ=CaseBlock;
      el_def=0;
      CaseBlock @[0] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	ForLoop @[0] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  AssignExpr @[0] {
	   desc=;
	   flags=;
	   result_var=.projects[0].programs[8].vars[52]$355$;
	   expr {
	    expr="r_fire_t_trg";
	   };
	  };
	  AssignExpr @[1] {
	   desc=;
	   flags=;
	   result_var=.projects[0].programs[8].vars[49]$356$;
	   expr {
	    expr="r_fire_t_trg + s_fire_off";
	   };
	  };
	  AssignExpr @[2] {
	   desc=;
	   flags=;
	   result_var=$351$;
	   expr {
	    expr="-s_fire_off";
	   };
	  };
	  FunctionCall @[3] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=.projects[0].programs[8].functions[5]$357$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  ForLoop @[4] {
	   desc=;
	   flags=;
	   loop_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    FunctionCall @[0] {
	     desc=;
	     flags=;
	     result_var=NULL;
	     fun=.projects[0].programs[8].functions[4]$358$;
	     fun_args {
	      name=;
	      el_typ=ProgArg;
	      el_def=0;
	     };
	    };
	    StopStepPoint @[1] {
	     desc=;
	     flags=;
	    };
	   };
	   init {
	    expr="time = 0";
	   };
	   test {
	    expr="time < time_max";
	   };
	   iter {
	    expr="time += sim_dt";
	   };
	  };
	 };
	 init {
	  expr="s_fire_off = -s_fire_off_rng";
	 };
	 test {
	  expr="s_fire_off <= s_fire_off_rng";
	 };
	 iter {
	  expr="s_fire_off += s_fire_off_inc";
	 };
	};
       };
       case_val {
	expr="PAIRS";
       };
      };
      CaseBlock @[1] {
       desc=;
       flags=;
       prog_code {
	name=;
	el_typ=ProgEl;
	el_def=0;
	Comment @[0] {
	 desc="== PRE-POST-PRE";
	 flags=;
	};
	AssignExpr @[1] {
	 desc=;
	 flags=;
	 result_var=$355$;
	 expr {
	  expr="r_fire_t_trg";
	 };
	};
	AssignExpr @[2] {
	 desc=;
	 flags=;
	 result_var=$356$;
	 expr {
	  expr="r_fire_t_trg - s_fire_off_rng";
	 };
	};
	AssignExpr @[3] {
	 desc="signal that pre-post-pre is first case";
	 flags=;
	 result_var=$351$;
	 expr {
	  expr="-s_fire_off_rng";
	 };
	};
	FunctionCall @[4] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=$357$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	ForLoop @[5] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$358$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  If @[1] {
	   desc="just before next pre spike is due";
	   flags=;
	   cond {
	    expr="time == r_fire_t_trg + s_fire_off_rng -1";
	   };
	   true_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    AssignExpr @[0] {
	     desc=;
	     flags=;
	     result_var=$356$;
	     expr {
	      expr="r_fire_t_trg + s_fire_off_rng";
	     };
	    };
	   };
	  };
	  StopStepPoint @[2] {
	   desc=;
	   flags=;
	  };
	 };
	 init {
	  expr="time = 0";
	 };
	 test {
	  expr="time < time_max";
	 };
	 iter {
	  expr="time += sim_dt";
	 };
	};
	Comment @[6] {
	 desc="== POST-PRE-POST";
	 flags=;
	};
	AssignExpr @[7] {
	 desc=;
	 flags=;
	 result_var=$356$;
	 expr {
	  expr="r_fire_t_trg";
	 };
	};
	AssignExpr @[8] {
	 desc=;
	 flags=;
	 result_var=$355$;
	 expr {
	  expr="r_fire_t_trg - s_fire_off_rng";
	 };
	};
	AssignExpr @[9] {
	 desc="signal that post-pre-post is 2nd case";
	 flags=;
	 result_var=$351$;
	 expr {
	  expr="s_fire_off_rng";
	 };
	};
	FunctionCall @[10] {
	 desc=;
	 flags=;
	 result_var=NULL;
	 fun=$357$;
	 fun_args {
	  name=;
	  el_typ=ProgArg;
	  el_def=0;
	 };
	};
	ForLoop @[11] {
	 desc=;
	 flags=;
	 loop_code {
	  name=;
	  el_typ=ProgEl;
	  el_def=0;
	  FunctionCall @[0] {
	   desc=;
	   flags=;
	   result_var=NULL;
	   fun=$358$;
	   fun_args {
	    name=;
	    el_typ=ProgArg;
	    el_def=0;
	   };
	  };
	  If @[1] {
	   desc="just before next post spike is due";
	   flags=;
	   cond {
	    expr="time == r_fire_t_trg + s_fire_off_rng -1";
	   };
	   true_code {
	    name=;
	    el_typ=ProgEl;
	    el_def=0;
	    AssignExpr @[0] {
	     desc=;
	     flags=;
	     result_var=$355$;
	     expr {
	      expr="r_fire_t_trg + s_fire_off_rng";
	     };
	    };
	   };
	  };
	  StopStepPoint @[2] {
	   desc=;
	   flags=;
	  };
	 };
	 init {
	  expr="time = 0";
	 };
	 test {
	  expr="time < time_max";
	 };
	 iter {
	  expr="time += sim_dt";
	 };
	};
       };
       case_val {
	expr="TRIPLES";
       };
      };
     };
    };
    DataGroupProg @[4] {
     desc=;
     flags=;
     src_data_var=$349$;
     dest_data_var=.projects[0].programs[8].vars[54]$359$;
     group_spec {
      name="group_spec";
      ops {
       name=;
       el_typ=DataGroupEl;
       el_def=0;
       DataGroupEl @[0] {
	col_name="r_fire_off";
	agg {name="Aggregate": op=GROUP: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[1] {
	col_name="time";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[2] {
	col_name="W_tot";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
       DataGroupEl @[3] {
	col_name="W";
	agg {name="Aggregate": op=LAST: rel={name="Relation": rel=LESSTHANOREQUAL: val=0: use_var=0: var=NULL: }: };
       };
      };
      append_agg_name=0;
     };
    };
   };
  };
 };
 viewers {
  name=;
  el_typ=TopLevelViewer;
  el_def=0;
  MainWindowViewer @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItemBase;
    el_def=0;
    UserDataItem @[0] {
     name="view_win_lft";
     value 6 0=-0.00857843179255724;
     val_type_fixed=0;
    };
    UserDataItem @[1] {
     name="view_win_top";
     value 6 0=0.0009727626456879079;
     val_type_fixed=0;
    };
    UserDataItem @[2] {
     name="view_win_wd";
     value 6 0=1;
     val_type_fixed=0;
    };
    UserDataItem @[3] {
     name="view_win_ht";
     value 6 0=0.7996109127998352;
     val_type_fixed=0;
    };
    UserDataItem @[4] {
     name="view_win_iconified";
     value 1 0=0;
     val_type_fixed=0;
    };
    UserDataItem @[5] {
     name="view_splitter_state";
     value 9 0="AAAA/wAAAAAAAAADAAAApAAAAa0AAAOiAQAAAAcBAAAAAQ==";
     val_type_fixed=0;
    };
   };
   name="Browser2";
   m_data=.projects[0]$360$;
   visible=1;
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   toolbars {
    name=;
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItemBase;
      el_def=0;
      UserDataItem @[0] {
       name="view_win_visible";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="Application";
     m_data=NULL;
     visible=0;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name=;
    el_typ=FrameViewer;
    el_def=0;
    tabBrowseViewer @[0] {
     name="Tree";
     m_data=NULL;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$360$;
    };
    PanelViewer @[1] {
     name="Panels";
     m_data=NULL;
     visible=1;
    };
    T3DataViewer @[2] {
     name="T3Frames";
     m_data=NULL;
     visible=1;
     frames {
      name=;
      el_typ=T3DataViewFrame;
      el_def=0;
      T3DataViewFrame @[0] {
       name="XCALSpike_SimData";
       m_data=NULL;
       visible=1;
       root_view {
	name=;
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name=;
	  m_data=$0$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="r_rate";
	    m_data=.projects[0].programs[0].objs[0].data[0]$361$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="s_rate";
	    m_data=.projects[0].programs[0].objs[0].data[1]$362$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=10: fix_max=0: max=90: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="time";
	    m_data=.projects[0].programs[0].objs[0].data[2]$363$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=1: fix_max=1: max=1000: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="s_act";
	    m_data=.projects[0].programs[0].objs[0].data[3]$364$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="r_act";
	    m_data=.projects[0].programs[0].objs[0].data[4]$365$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="Ca";
	    m_data=.projects[0].programs[0].objs[0].data[5]$366$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=5.08924: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="dCa";
	    m_data=.projects[0].programs[0].objs[0].data[6]$367$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="Ca_max";
	    m_data=.projects[0].programs[0].objs[0].data[7]$368$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=5.08924: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[8] {
	    name="Ca_avg";
	    m_data=.projects[0].programs[0].objs[0].data[8]$369$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=2.75206: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[9] {
	    name="NMDAR";
	    m_data=.projects[0].programs[0].objs[0].data[9]$370$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.864405: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[10] {
	    name="dNMDAR";
	    m_data=.projects[0].programs[0].objs[0].data[10]$371$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[11] {
	    name="V";
	    m_data=.projects[0].programs[0].objs[0].data[11]$372$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=-65: fix_max=0: max=-44.9298: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[12] {
	    name="dV";
	    m_data=.projects[0].programs[0].objs[0].data[12]$373$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[13] {
	    name="dw";
	    m_data=.projects[0].programs[0].objs[0].data[13]$374$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=-2.76426: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[14] {
	    name="w";
	    m_data=.projects[0].programs[0].objs[0].data[14]$375$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=-1: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="time";
	   fixed_range {fix_min=0: min=0: fix_max=1: max=1000: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1000: };
	   range {min=0: max=1000: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="s_act";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="r_act";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=0;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="Ca";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=0;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="Ca_max";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=0;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="Ca_avg";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=0;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="dw";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=1;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="NMDAR";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="s_rate";
	   fixed_range {fix_min=0: min=10: fix_max=0: max=90: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=10: max=90: };
	   range {min=10: max=90: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=.colorspecs[0]$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name=;
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="View 0";
	 view_saved=1;
	 pos {x=1.493989: y=0.4449999: z=1.702407: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.714907;
	};
	T3SavedView @[1] {
	 name="View 1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="View 2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="View 3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="View 4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="View 5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3DataViewFrame @[1] {
       name="XCALSpike_OffData";
       m_data=NULL;
       visible=1;
       root_view {
	name=;
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name=;
	  m_data=$2$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="r_rate";
	    m_data=.projects[0].programs[0].objs[1].data[0]$377$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="s_rate";
	    m_data=.projects[0].programs[0].objs[1].data[1]$378$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="time";
	    m_data=.projects[0].programs[0].objs[1].data[2]$379$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="dw";
	    m_data=.projects[0].programs[0].objs[1].data[3]$380$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="Ca_max";
	    m_data=.projects[0].programs[0].objs[1].data[4]$381$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="Ca_avg";
	    m_data=.projects[0].programs[0].objs[1].data[5]$382$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="w";
	    m_data=.projects[0].programs[0].objs[1].data[6]$383$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=1: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=0;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="s_rate";
	   fixed_range {fix_min=0: min=5: fix_max=0: max=5: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=5: max=5: };
	   range {min=5: max=5: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Z;
	   col_name="r_rate";
	   fixed_range {fix_min=0: min=5: fix_max=0: max=5: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=5: max=5: };
	   range {min=5: max=5: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="Ca_avg";
	   fixed_range {fix_min=0: min=1.23574: fix_max=0: max=1.23574: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=1.23574: max=1.23574: };
	   range {min=1.23574: max=1.23574: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="Ca_max";
	   fixed_range {fix_min=0: min=5.05382: fix_max=0: max=11.8022: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=5.053817: max=11.80219: };
	   range {min=5.053817: max=11.80219: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=0;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="dw";
	   fixed_range {fix_min=0: min=-2.9979: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=-2.997903: max=0: };
	   range {min=-2.997903: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=0;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=0;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=0;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=0;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=VALUE_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name=;
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="View 0";
	 view_saved=1;
	 pos {x=1.4275: y=0.445: z=1.376935: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.866935;
	};
	T3SavedView @[1] {
	 name="View 1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="View 2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="View 3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="View 4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="View 5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3DataViewFrame @[2] {
       name="UrakuboEtAl_SimData";
       m_data=NULL;
       visible=1;
       root_view {
	name=;
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name=;
	  m_data=$31$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="r_fire_off";
	    m_data=.projects[0].programs[1].objs[0].data[0]$384$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=-100: fix_max=0: max=100: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="time";
	    m_data=.projects[0].programs[1].objs[0].data[1]$385$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=300: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="s_act";
	    m_data=.projects[0].programs[1].objs[0].data[2]$386$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="r_act";
	    m_data=.projects[0].programs[1].objs[0].data[3]$387$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="Ca";
	    m_data=.projects[0].programs[1].objs[0].data[4]$388$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=7.45035: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="dCa";
	    m_data=.projects[0].programs[1].objs[0].data[5]$389$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="Ca_max";
	    m_data=.projects[0].programs[1].objs[0].data[6]$390$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=7.45035: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="NMDAR";
	    m_data=.projects[0].programs[1].objs[0].data[7]$391$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[8] {
	    name="dNMDAR";
	    m_data=.projects[0].programs[1].objs[0].data[8]$392$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[9] {
	    name="V";
	    m_data=.projects[0].programs[1].objs[0].data[9]$393$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=-65: fix_max=0: max=-35: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[10] {
	    name="dV";
	    m_data=.projects[0].programs[1].objs[0].data[10]$394$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[11] {
	    name="dw";
	    m_data=.projects[0].programs[1].objs[0].data[11]$395$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=-6.24546: fix_max=0: max=152.593: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[12] {
	    name="w";
	    m_data=.projects[0].programs[1].objs[0].data[12]$396$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=300;
	  view_range {min=0: max=-1: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="time";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="s_act";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="Ca";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=0;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="NMDAR";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=0;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="V";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=1;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="r_act";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=0;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="dw";
	   fixed_range {fix_min=0: min=-6.24546: fix_max=0: max=152.593: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=-6.245458: max=152.5928: };
	   range {min=-6.245458: max=152.5928: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=0;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="Ca_max";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=-6e-19: max=6e-19: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name=;
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="View 0";
	 view_saved=1;
	 pos {x=1.508989: y=0.4449999: z=1.720569: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.733069;
	};
	T3SavedView @[1] {
	 name="View 1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="View 2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="View 3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="View 4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="View 5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3DataViewFrame @[3] {
       name="UrakuboEtAl_OffData";
       m_data=NULL;
       visible=1;
       root_view {
	name=;
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name=;
	  m_data=$33$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="r_fire_off";
	    m_data=.projects[0].programs[1].objs[1].data[0]$397$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="time";
	    m_data=.projects[0].programs[1].objs[1].data[1]$398$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="dw";
	    m_data=.projects[0].programs[1].objs[1].data[2]$399$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="Ca_max";
	    m_data=.projects[0].programs[1].objs[1].data[3]$400$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="w";
	    m_data=.projects[0].programs[1].objs[1].data[4]$401$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=19: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE_AND_POINTS;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="r_fire_off";
	   fixed_range {fix_min=0: min=-100: fix_max=0: max=100: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-100: max=100: };
	   range {min=-100: max=100: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="dw";
	   fixed_range {fix_min=0: min=-45.74591: fix_max=0: max=50.01398: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-45.74591: max=50.01398: };
	   range {min=-45.74591: max=50.01398: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="Ca_max";
	   fixed_range {fix_min=0: min=1.712704: fix_max=0: max=7.450349: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=1.712704: max=7.450349: };
	   range {min=1.712704: max=7.450349: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=1;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=0;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=0;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=0;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=0;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name=;
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="View 0";
	 view_saved=1;
	 pos {x=1.475389: y=0.4449999: z=1.680189: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.692689;
	};
	T3SavedView @[1] {
	 name="View 1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="View 2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="View 3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="View 4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="View 5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3DataViewFrame @[4] {
       name="UrakuboLog";
       m_data=NULL;
       visible=1;
       root_view {
	name=;
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name=;
	  m_data=$241$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="time";
	    m_data=.projects[0].programs[5].objs[0].data[0]$402$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=507: fix_max=0: max=1033.73: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="Vm25";
	    m_data=.projects[0].programs[5].objs[0].data[1]$403$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=-65.0001: fix_max=0: max=19.4893: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="Vm20";
	    m_data=.projects[0].programs[5].objs[0].data[2]$404$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="Ca_Co12";
	    m_data=.projects[0].programs[5].objs[0].data[3]$405$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.0370992: fix_max=0: max=4.48905: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="Ca_Co6";
	    m_data=.projects[0].programs[5].objs[0].data[4]$406$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.0148387: fix_max=0: max=3.75403: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="CaM_AC1_Co10";
	    m_data=.projects[0].programs[5].objs[0].data[5]$407$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.340133: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="CaM_AC1_Co4";
	    m_data=.projects[0].programs[5].objs[0].data[6]$408$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.839122: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="CaMCa3";
	    m_data=.projects[0].programs[5].objs[0].data[7]$409$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[8] {
	    name="cAMP";
	    m_data=.projects[0].programs[5].objs[0].data[8]$410$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[9] {
	    name="I1_active";
	    m_data=.projects[0].programs[5].objs[0].data[9]$411$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[10] {
	    name="AMPAR_Internal";
	    m_data=.projects[0].programs[5].objs[0].data[10]$412$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[11] {
	    name="AMPAR_Memb";
	    m_data=.projects[0].programs[5].objs[0].data[11]$413$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[12] {
	    name="AMPAR_PSD";
	    m_data=.projects[0].programs[5].objs[0].data[12]$414$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[13] {
	    name="AMPAR_Trapped";
	    m_data=.projects[0].programs[5].objs[0].data[13]$415$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.611704: fix_max=0: max=3.98669: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[14] {
	    name="Nopen";
	    m_data=.projects[0].programs[5].objs[0].data[14]$416$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.0910778: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[15] {
	    name="Nt0";
	    m_data=.projects[0].programs[5].objs[0].data[15]$417$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.104379: fix_max=0: max=1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[16] {
	    name="Nt1";
	    m_data=.projects[0].programs[5].objs[0].data[16]$418$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.907177: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[17] {
	    name="Nt2";
	    m_data=.projects[0].programs[5].objs[0].data[17]$419$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.166596: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[18] {
	    name="PP1_active_Co1";
	    m_data=.projects[0].programs[5].objs[0].data[18]$420$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.002: fix_max=0: max=0.0712523: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[19] {
	    name="PP1_active_Co7";
	    m_data=.projects[0].programs[5].objs[0].data[19]$421$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.002: fix_max=0: max=0.427642: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[20] {
	    name="CaMKII_active_Co11";
	    m_data=.projects[0].programs[5].objs[0].data[20]$422$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=30.3234: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[21] {
	    name="CaMKII_active_Co5";
	    m_data=.projects[0].programs[5].objs[0].data[21]$423$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1.38841: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[22] {
	    name="CaN_active_Co3";
	    m_data=.projects[0].programs[5].objs[0].data[22]$424$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1.9069: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[23] {
	    name="CaN_active_Co9";
	    m_data=.projects[0].programs[5].objs[0].data[23]$425$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[24] {
	    name="PKA_active_Co2";
	    m_data=.projects[0].programs[5].objs[0].data[24]$426$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.0402832: fix_max=0: max=0.688196: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[25] {
	    name="PKA_active_Co8";
	    m_data=$243$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.0402833: fix_max=0: max=0.688083: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=1564: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="time";
	   fixed_range {fix_min=1: min=507: fix_max=0: max=1022.215: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1022.215: };
	   range {min=507: max=1200: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="AMPAR_Trapped";
	   fixed_range {fix_min=0: min=0.6117042: fix_max=0: max=3.986689: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0.002: max=3.986689: };
	   range {min=0: max=4: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=1;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="CaMKII_active_Co5";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=1.38841: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1.38841: };
	   range {min=0: max=1.38841: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=0;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="CaM_AC1_Co10";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0.340133: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0.3401328: };
	   range {min=0: max=0.3401328: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=0;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="PKA_active_Co8";
	   fixed_range {fix_min=0: min=0.04028334: fix_max=0: max=0.6879394: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=0.04028334: max=0.6879394: };
	   range {min=0.04028334: max=0.6879394: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=1;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="PP1_active_Co7";
	   fixed_range {fix_min=0: min=0.002: fix_max=0: max=0.4004492: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0.002: max=0.4004492: };
	   range {min=0.002: max=0.4004492: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=1;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=0;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name=;
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="View 0";
	 view_saved=1;
	 pos {x=1.502664: y=0.445: z=1.712884: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.725384;
	};
	T3SavedView @[1] {
	 name="View 1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="View 2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="View 3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="View 4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="View 5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3DataViewFrame @[5] {
       name="UrGraph";
       m_data=NULL;
       visible=1;
       root_view {
	name=;
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name=;
	  m_data=$244$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="time";
	    m_data=.projects[0].programs[5].objs[1].data[0]$427$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=501.005: fix_max=1: max=502.1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="Vm25";
	    m_data=.projects[0].programs[5].objs[1].data[1]$428$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=-65.0001: fix_max=0: max=19.4893: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="Vm20";
	    m_data=.projects[0].programs[5].objs[1].data[2]$429$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=-65.0001: fix_max=0: max=-4.4967: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="Ca_Co12";
	    m_data=.projects[0].programs[5].objs[1].data[3]$430$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.0370992: fix_max=0: max=12.6239: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="Ca_Co6";
	    m_data=.projects[0].programs[5].objs[1].data[4]$431$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.0148387: fix_max=0: max=3.99053: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="CaM_AC1_Co10";
	    m_data=.projects[0].programs[5].objs[1].data[5]$432$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1.25599: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="CaM_AC1_Co4";
	    m_data=.projects[0].programs[5].objs[1].data[6]$433$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1.1938: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="CaMCa3";
	    m_data=.projects[0].programs[5].objs[1].data[7]$434$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[8] {
	    name="cAMP";
	    m_data=.projects[0].programs[5].objs[1].data[8]$435$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[9] {
	    name="I1_active";
	    m_data=.projects[0].programs[5].objs[1].data[9]$436$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[10] {
	    name="AMPAR_Internal";
	    m_data=.projects[0].programs[5].objs[1].data[10]$437$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[11] {
	    name="AMPAR_Memb";
	    m_data=.projects[0].programs[5].objs[1].data[11]$438$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[12] {
	    name="AMPAR_PSD";
	    m_data=.projects[0].programs[5].objs[1].data[12]$439$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[13] {
	    name="AMPAR_Trapped";
	    m_data=.projects[0].programs[5].objs[1].data[13]$440$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.611704: fix_max=0: max=3.98669: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[14] {
	    name="Nopen";
	    m_data=.projects[0].programs[5].objs[1].data[14]$441$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.0910778: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[15] {
	    name="Nt0";
	    m_data=.projects[0].programs[5].objs[1].data[15]$442$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[16] {
	    name="Nt1";
	    m_data=.projects[0].programs[5].objs[1].data[16]$443$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[17] {
	    name="Nt2";
	    m_data=.projects[0].programs[5].objs[1].data[17]$444$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[18] {
	    name="PP1_active_Co1";
	    m_data=.projects[0].programs[5].objs[1].data[18]$445$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.002: fix_max=0: max=0.0712523: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[19] {
	    name="PP1_active_Co7";
	    m_data=.projects[0].programs[5].objs[1].data[19]$446$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.002: fix_max=0: max=0.427642: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[20] {
	    name="CaMKII_active_Co11";
	    m_data=.projects[0].programs[5].objs[1].data[20]$447$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=8.4317: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[21] {
	    name="CaMKII_active_Co5";
	    m_data=.projects[0].programs[5].objs[1].data[21]$448$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[22] {
	    name="CaN_active_Co3";
	    m_data=.projects[0].programs[5].objs[1].data[22]$449$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[23] {
	    name="CaN_active_Co9";
	    m_data=.projects[0].programs[5].objs[1].data[23]$450$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[24] {
	    name="PKA_active_Co2";
	    m_data=.projects[0].programs[5].objs[1].data[24]$451$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.0402832: fix_max=0: max=0.688196: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[25] {
	    name="PKA_active_Co8";
	    m_data=.projects[0].programs[5].objs[1].data[25]$452$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.0402833: fix_max=0: max=0.688083: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=214: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="time";
	   fixed_range {fix_min=1: min=501.005: fix_max=1: max=502.1: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1021.792: };
	   range {min=501.005: max=502.1: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="Nopen";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0.2455038: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0.5798129: };
	   range {min=0: max=0.6: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="CaM_AC1_Co10";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0.5798129: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0.5798129: };
	   range {min=0: max=0.5798129: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=0;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="Vm20";
	   fixed_range {fix_min=0: min=-65.0001: fix_max=0: max=-4.4967: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=-65.00009: max=4.489047: };
	   range {min=-70: max=10: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=1;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="Ca_Co12";
	   fixed_range {fix_min=0: min=0.03709923: fix_max=0: max=12.62391: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=0.03709923: max=12.62391: };
	   range {min=0.03709923: max=12.62391: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=1;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="Nopen";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0.0910778: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0: max=0.09107777: };
	   range {min=0: max=0.09107777: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=0;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=0;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	 GraphTableView @[1] {
	  name=;
	  m_data=$244$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=2.396155: y=-0.001798585: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="time";
	    m_data=$427$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=501.005: fix_max=1: max=600: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="Vm25";
	    m_data=$428$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=-65.0001: fix_max=0: max=19.4893: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="Vm20";
	    m_data=$429$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="Ca_Co12";
	    m_data=$430$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="Ca_Co6";
	    m_data=$431$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="CaM_AC1_Co10";
	    m_data=$432$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.344498: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="CaM_AC1_Co4";
	    m_data=$433$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="CaMCa3";
	    m_data=$434$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[8] {
	    name="cAMP";
	    m_data=$435$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[9] {
	    name="I1_active";
	    m_data=$436$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[10] {
	    name="AMPAR_Internal";
	    m_data=$437$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[11] {
	    name="AMPAR_Memb";
	    m_data=$438$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[12] {
	    name="AMPAR_PSD";
	    m_data=$439$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[13] {
	    name="AMPAR_Trapped";
	    m_data=$440$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.611704: fix_max=0: max=3.98669: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[14] {
	    name="Nopen";
	    m_data=$441$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.262678: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[15] {
	    name="Nt0";
	    m_data=$442$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[16] {
	    name="Nt1";
	    m_data=$443$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[17] {
	    name="Nt2";
	    m_data=$444$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[18] {
	    name="PP1_active_Co1";
	    m_data=$445$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[19] {
	    name="PP1_active_Co7";
	    m_data=$446$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.002: fix_max=0: max=0.400449: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[20] {
	    name="CaMKII_active_Co11";
	    m_data=$447$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=8.4317: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[21] {
	    name="CaMKII_active_Co5";
	    m_data=$448$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[22] {
	    name="CaN_active_Co3";
	    m_data=$449$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[23] {
	    name="CaN_active_Co9";
	    m_data=$450$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[24] {
	    name="PKA_active_Co2";
	    m_data=$451$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[25] {
	    name="PKA_active_Co8";
	    m_data=$452$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.0402833: fix_max=0: max=0.0536919: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=2.396155: y=-0.001798585: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=214: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="time";
	   fixed_range {fix_min=1: min=501.005: fix_max=1: max=600: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=1021.792: };
	   range {min=501.005: max=600: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="PP1_active_Co7";
	   fixed_range {fix_min=0: min=0.002: fix_max=0: max=0.4004492: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0.5798129: };
	   range {min=0: max=0.6: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="PKA_active_Co8";
	   fixed_range {fix_min=0: min=0.04028334: fix_max=0: max=0.1027518: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0.04028334: max=0.1027518: };
	   range {min=0.04028334: max=0.1027518: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=0;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="AMPAR_Trapped";
	   fixed_range {fix_min=0: min=0.6117042: fix_max=0: max=3.986689: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0.6117042: max=3.986689: };
	   range {min=0.6117042: max=3.986689: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=1;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="Nopen";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0.2455038: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=0: max=0.2455038: };
	   range {min=0: max=0.2455038: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=0;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="CaM_AC1_Co10";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0.5798129: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0: max=0.5798129: };
	   range {min=0: max=0.5798129: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=0;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=0;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name=;
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="View 0";
	 view_saved=1;
	 pos {x=2.179105: y=0.4441007: z=2.676802: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=2.689302;
	};
	T3SavedView @[1] {
	 name="View 1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="View 2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="View 3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="View 4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="View 5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3DataViewFrame @[6] {
       name="URawActdWt";
       m_data=NULL;
       visible=1;
       root_view {
	name=;
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name=;
	  m_data=$254$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="ActHz";
	    m_data=.projects[0].programs[6].objs[2].data[0]$453$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=10: fix_max=0: max=100: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="DurMsec";
	    m_data=.projects[0].programs[6].objs[2].data[1]$454$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=50: fix_max=0: max=800: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="NSpikes";
	    m_data=.projects[0].programs[6].objs[2].data[2]$455$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.00625: fix_max=0: max=1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="dWt";
	    m_data=.projects[0].programs[6].objs[2].data[3]$456$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=-0.4: fix_max=1: max=0.4: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="dWt_fun";
	    m_data=.projects[0].programs[6].objs[2].data[4]$457$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=-0.45: fix_max=0: max=0.45: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=119: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=0;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="DurMsec";
	   fixed_range {fix_min=0: min=50: fix_max=0: max=800: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=50: max=800: };
	   range {min=50: max=800: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Z;
	   col_name="ActHz";
	   fixed_range {fix_min=0: min=10: fix_max=0: max=100: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=10: max=100: };
	   range {min=10: max=100: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="dWt";
	   fixed_range {fix_min=1: min=-0.4: fix_max=1: max=0.4: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.4: max=0.4: };
	   range {min=-0.4: max=0.4: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="dWt_fun";
	   fixed_range {fix_min=1: min=-0.45: fix_max=0: max=0.45: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.45: max=0.45: };
	   range {min=-0.45: max=0.45: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=1;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=0;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=0;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=0;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=0;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name=;
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="View 0";
	 view_saved=1;
	 pos {x=1.475653: y=0.4449999: z=1.426124: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.916124;
	};
	T3SavedView @[1] {
	 name="View 1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="View 2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="View 3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="View 4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="View 5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3DataViewFrame @[7] {
       name="URawActSRdWt";
       m_data=NULL;
       visible=1;
       root_view {
	name=;
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name=;
	  m_data=$275$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="SActHz";
	    m_data=.projects[0].programs[7].objs[2].data[0]$458$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="RActHz";
	    m_data=.projects[0].programs[7].objs[2].data[1]$459$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="SRAvg";
	    m_data=.projects[0].programs[7].objs[2].data[2]$460$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="DurMsec";
	    m_data=.projects[0].programs[7].objs[2].data[3]$461$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="dWt";
	    m_data=.projects[0].programs[7].objs[2].data[4]$462$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="dWt_fun";
	    m_data=.projects[0].programs[7].objs[2].data[5]$463$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="regress_line";
	    m_data=.projects[0].programs[7].objs[2].data[6]$464$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=139: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=0;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="RActHz";
	   fixed_range {fix_min=0: min=10: fix_max=0: max=100: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=10: max=100: };
	   range {min=10: max=100: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Z;
	   col_name="DurMsec";
	   fixed_range {fix_min=0: min=50: fix_max=0: max=1000: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=50: max=1000: };
	   range {min=50: max=1000: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="dWt";
	   fixed_range {fix_min=1: min=-0.5: fix_max=1: max=0.5: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.5: max=0.5: };
	   range {min=-0.5: max=0.5: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="dWt_fun";
	   fixed_range {fix_min=1: min=-0.75: fix_max=1: max=0.75: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.75: max=0.75: };
	   range {min=-0.75: max=0.75: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=1;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="NSpikes";
	   fixed_range {fix_min=0: min=0.005: fix_max=0: max=1: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0.005: max=1: };
	   range {min=0.005: max=1: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=1;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name="regress_line";
	   fixed_range {fix_min=0: min=-0.335924: fix_max=0: max=0.0989672: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=-0.3359241: max=0.09896724: };
	   range {min=-0.3359241: max=0.09896724: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=0;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=0;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=0;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name=;
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="View 0";
	 view_saved=1;
	 pos {x=1.437989: y=0.4449999: z=1.462763: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.972763;
	};
	T3SavedView @[1] {
	 name="View 1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="View 2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="View 3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="View 4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="View 5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3DataViewFrame @[8] {
       name="ParamSearch";
       m_data=NULL;
       visible=1;
       root_view {
	name=;
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name=;
	  m_data=$277$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="theta_P";
	    m_data=.projects[0].programs[7].objs[4].data[0]$465$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.2: fix_max=0: max=0.48: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="Drev";
	    m_data=.projects[0].programs[7].objs[4].data[1]$466$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="Dmult";
	    m_data=.projects[0].programs[7].objs[4].data[2]$467$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=1: fix_max=0: max=1.9: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="r_val";
	    m_data=.projects[0].programs[7].objs[4].data[3]$468$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0.633706: fix_max=0: max=0.894764: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=1799: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=POINTS;
	  negative_draw=0;
	  negative_draw_z=0;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="Drev";
	   fixed_range {fix_min=0: min=0.01: fix_max=0: max=0.05: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0.01: max=0.05: };
	   range {min=0.01: max=0.05: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name="RAvgWt";
	   fixed_range {fix_min=0: min=0.5: fix_max=0: max=0.65: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0.5: max=0.65: };
	   range {min=0.5: max=0.65: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="r_val";
	   fixed_range {fix_min=0: min=0.7892228: fix_max=0: max=0.8947637: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0.7892228: max=0.8947637: };
	   range {min=0.7892228: max=0.8947637: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=0;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=0;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=0;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=0;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=0;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=VALUE_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name=;
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="View 0";
	 view_saved=1;
	 pos {x=1.435101: y=0.4449999: z=1.633277: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.645777;
	};
	T3SavedView @[1] {
	 name="View 1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="View 2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="View 3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="View 4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="View 5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
      T3DataViewFrame @[9] {
       name="URSRdWtFun";
       m_data=NULL;
       visible=1;
       root_view {
	name=;
	m_data=NULL;
	m_transform=NULL;
	children {
	 name=;
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name=;
	  m_data=$278$;
FloatTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  children {
	   name=;
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="SRAvg";
	    m_data=.projects[0].programs[7].objs[5].data[0]$469$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="dWt";
	    m_data=.projects[0].programs[7].objs[5].data[1]$470$;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=1: y=0: z=0: }: };
	  view_rows=10000;
	  view_range {min=0: max=199: };
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=2;
	  point_size=MEDIUM;
	  point_spacing=1;
	  bar_space=0.2;
	  label_spacing=-1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="SRAvg";
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0.995: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0.995: };
	   range {min=0: max=0.995: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  z_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  plot_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=1;
	   axis=Y;
	   col_name="dWt";
	   fixed_range {fix_min=0: min=-0.34: fix_max=0: max=0.795: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=-0.34: max=0.795: };
	   range {min=-0.34: max=0.795: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  plot_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="red": r=1: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=SQUARE;
	   alt_y=0;
	  };
	  plot_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=DIAMOND;
	   alt_y=0;
	  };
	  plot_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="green3": r=0: g=0.8039216: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=TRIANGLE;
	   alt_y=0;
	  };
	  plot_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=PLUS;
	   alt_y=0;
	  };
	  plot_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CROSS;
	   alt_y=0;
	  };
	  plot_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="brown": r=0.6470588: g=0.1647059: b=0.1647059: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=STAR;
	   alt_y=0;
	  };
	  plot_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="chartreuse": r=0.4980392: g=1: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=MINUS;
	   alt_y=0;
	  };
	  alt_y_1=0;
	  alt_y_2=0;
	  alt_y_3=0;
	  alt_y_4=0;
	  alt_y_5=0;
	  err_1 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_2 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_3 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_4 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_5 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_6 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_7 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_8 {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   line_style=SOLID;
	   point_style=CIRCLE;
	   alt_y=0;
	  };
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=VALUE_COLOR;
	  color_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  colorscale {
	   name="ColorScale";
	   chunks=133;
	   min=-1;
	   max=1;
	   range=0;
	   zero=0;
	   spec=$376$;
	   auto_scale=0;
	  };
	  raster_axis {
	   name=;
	   m_data=NULL;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   data_range {min=0: max=0: };
	   range {min=0: max=0: };
	   n_ticks=10;
	   axis_length=1;
	   row_num=0;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=0.8: g=0.8: b=0.8: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       stereo_view=STEREO_NONE;
       saved_views {
	name=;
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="View 0";
	 view_saved=1;
	 pos {x=1.4275: y=0.4449999: z=1.624621: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.637121;
	};
	T3SavedView @[1] {
	 name="View 1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="View 2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="View 3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="View 4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="View 5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    name=;
    el_typ=DockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     UserDataItem_List @*(.user_data_) {
      name=;
      el_typ=UserDataItemBase;
      el_def=0;
      UserDataItem @[0] {
       name="view_win_lft";
       value 6 0=0;
       val_type_fixed=0;
      };
      UserDataItem @[1] {
       name="view_win_top";
       value 6 0=0.008754863403737545;
       val_type_fixed=0;
      };
      UserDataItem @[2] {
       name="view_win_wd";
       value 6 0=0.05453431233763695;
       val_type_fixed=0;
      };
      UserDataItem @[3] {
       name="view_win_ht";
       value 6 0=0.7285992503166199;
       val_type_fixed=0;
      };
      UserDataItem @[4] {
       name="view_win_iconified";
       value 1 0=0;
       val_type_fixed=0;
      };
      UserDataItem @[5] {
       name="view_visible";
       value 1 0=1;
       val_type_fixed=0;
      };
     };
     name="Tools";
     m_data=NULL;
     visible=1;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 last_change_desc=;
 networks {
  name=;
  el_typ=LeabraNetwork;
  el_def=0;
  LeabraNetwork @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {
     name="norm_err";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[1] {
     name="ext_rew";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[2] {
     name="maxda";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[3] {
     name="minus_output_name";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[4] {
     name="minus_cycles";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[5] {
     name="ct_cycle";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[6] {
     name="phase_no";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[7] {
     name="phase";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[8] {
     name="sse";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[9] {
     name="output_name";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[10] {
     name="trial_name";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[11] {
     name="group_name";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[12] {
     name="time";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[13] {
     name="cycle";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[14] {
     name="tick";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[15] {
     name="trial";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[16] {
     name="group";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[17] {
     name="epoch";
     value 1 0=1;
     val_type_fixed=1;
    };
    UserDataItem @[18] {
     name="batch";
     value 1 0=1;
     val_type_fixed=1;
    };
   };
   name="Network_0";
   desc=;
   specs {
    name=;
    el_typ=LeabraUnitSpec;
    el_def=0;
    LeabraUnitSpec @[0] {
     name="SendSpikeAlpha";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=2: range=2: scale=0.5: };
     bias_con_type=LeabraCon;
     bias_spec {type=LeabraBiasSpec: spec=.projects[0].networks[0].specs[2]$471$: };
     sse_tol=0.5;
     act_fun=SPIKE;
     act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: avg_init=0.15: i_thr=STD: };
     spike {rise=1: decay=6: g_gain=4: window=20: v_m_r=0: eq_gain=10: eq_dt=0.02: clamp_max_p=0.11: clamp_type=REGULAR: };
     adapt {
      on=0;
      dt {set_time=0: rate=0.02: time=50: };
      v_m_gain=1;
      spike_gain=0.25;
      interval=10;
     };
     depress {on=0: rec=0.2: asymp_act=0.5: depl=0.2105263: interval=1: max_amp=2: clamp_norm_max_amp=2: };
     syn_delay {
      on=0;
      delay=4;
     };
     opt_thresh {send=0.1: delta=0.005: phase_dif=0: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=1: range=1: scale=1: };
     v_m_init {name="": type=UNIFORM: mean=0.15: var=0: par=1: };
     dt {vm=0.3: vm_time=3.333333: net=0.7: net_time=1.428571: midpoint=0: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
     g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
     e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
     hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
     acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
     da_mod {on=0: mod=PLUS_CONT: gain=0.1: };
     maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
     noise_type=NO_NOISE;
     noise {name="": type=GAUSSIAN: mean=0: var=0.001: par=1: };
     noise_adapt {trial_fixed=0: mode=FIXED_NOISE: min_pct=0.5: min_pct_c=0.5: };
     noise_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=1;
      cur_val=0;
     };
    };
    LeabraUnitSpec @[1] {
     name="RecvSpikeAlpha";
     desc="alpha function for recv unit spike";
     unique{      };
     children {
      name=;
      el_typ=LeabraUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=2: range=2: scale=0.5: };
     bias_con_type=LeabraCon;
     bias_spec {type=LeabraBiasSpec: spec=$471$: };
     sse_tol=0.5;
     act_fun=SPIKE;
     act {thr=0.25: gain=600: nvar=0.005: avg_dt=0.005: avg_init=0.15: i_thr=STD: };
     spike {rise=1: decay=1: g_gain=4: window=20: v_m_r=0: eq_gain=10: eq_dt=0.02: clamp_max_p=0.11: clamp_type=REGULAR: };
     adapt {
      on=0;
      dt {set_time=0: rate=0.02: time=50: };
      v_m_gain=1;
      spike_gain=0.25;
      interval=10;
     };
     depress {on=0: rec=0.2: asymp_act=0.5: depl=0.2105263: interval=1: max_amp=2: clamp_norm_max_amp=2: };
     syn_delay {
      on=0;
      delay=4;
     };
     opt_thresh {send=0.1: delta=0.005: phase_dif=0: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=1: range=1: scale=1: };
     v_m_init {name="": type=UNIFORM: mean=0.15: var=0: par=1: };
     dt {vm=0.3: vm_time=3.333333: net=0.7: net_time=1.428571: midpoint=0: d_vm_max=0.025: vm_eq_cyc=0: vm_eq_dt=1: };
     g_bar {e=1: l=0.1: i=1: h=0.01: a=0.03: };
     e_rev {e=1: l=0.15: i=0.15: h=1: a=0: };
     hyst {on=0: b_inc_dt=0.05: b_dec_dt=0.05: a_thr=0.8: d_thr=0.7: g_dt=0.1: init=0: trl=0: };
     acc {on=0: b_inc_dt=0.01: b_dec_dt=0.01: a_thr=0.5: d_thr=0.1: g_dt=0.1: init=0: trl=0: };
     da_mod {on=0: mod=PLUS_CONT: gain=0.1: };
     maxda {val=INET_DA: inet_scale=1: lay_avg_thr=0.01: };
     noise_type=NO_NOISE;
     noise {name="": type=GAUSSIAN: mean=0: var=0.001: par=1: };
     noise_adapt {trial_fixed=1: mode=FIXED_NOISE: min_pct=0.5: min_pct_c=0.5: };
     noise_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=1;
      cur_val=0;
     };
    };
    LeabraBiasSpec @[2] {
     name="LeabraBiasSpec_0";
     desc=;
     unique{ rnd;wt_limits;wt_scale;wt_scale_init;     };
     children {
      name=;
      el_typ=LeabraBiasSpec;
      el_def=0;
     };
     rnd {name="": type=UNIFORM: mean=0: var=0: par=1: };
     wt_limits {type=NONE: min=-1: max=5: sym=0: };
     learn_rule=LEABRA_CHL;
     inhib=0;
     wt_scale {abs=1: rel=1: };
     wt_scale_init {init=0: abs=1: rel=1: };
     lrate=0.01;
     cur_lrate=0.01;
     lrs_value=EPOCH;
     lrate_sched {
      name=;
      el_typ=SchedItem;
      el_def=0;
      last_ctr=-1;
      default_val=1;
      interpolate=0;
      cur_val=0;
     };
     wt_sig {gain=6: off=1.25: };
     lmix {hebb=0.001: err=0.999: err_sb=1: };
     xcal {lrn_var=XCAL_SR: mvl_mix=0.002: svm_mix=0.998: s_mix=0.9: m_mix=0.1: l_dt=0.005: l_gain=1.5: ml_dt=0.4: d_rev=0.1: d_gain=1: d_rev_ratio=9: };
     xcal_c {s_dt=0.2: m_dt=0.1: };
     xcalm {ml_mix=0: sm_mix=1: use_sb=1: use_nd=0: avg_init=0.15: };
     savg_cor {cor=0.4: thresh=0.001: norm_con_n=0: };
     rel_net_adapt {
      on=0;
      trg_fm_input=0.85;
      trg_fm_output=0.15;
      trg_lateral=0;
      trg_sum=1;
      tol_lg=0.05;
      tol_sm=0.2;
      rel_lrate=0.2;
     };
     dwt_thresh=0.1;
    };
    LeabraLayerSpec @[3] {
     name="LeabraLayerSpec_0";
     desc=;
     unique{      };
     children {
      name=;
      el_typ=LeabraLayerSpec;
      el_def=0;
     };
     inhib_group=ENTIRE_LAYER;
     inhib {
      type=KWTA_KV2K;
      kwta_pt=0.25;
      min_i=0;
      comp_thr=0.5;
      comp_gain=2;
      gp_pt=0.2;
     };
     kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     gp_kwta {k_from=USE_PCT: k=12: pct=0.25: pat_q=0.5: diff_act_pct=0: act_pct=0.1: gp_i=0: gp_g=0.5: };
     tie_brk {on=0: k_thr=1: diff_thr=0.2: };
     adapt_i {type=NONE: tol=0.02: p_dt=0.1: mx_d=0.9: l=0.2: a_dt=0.005: };
     clamp {hard=1: gain=0.5: };
     decay {event=1: phase=1: phase2=0: clamp_phase2=0: };
     ct_inhib_mod {
      use_sin=0;
      burst_i=0.02;
      trough_i=0.02;
      use_fin=0;
      inhib_i=0;
     };
     abs_net_adapt {
      on=0;
      trg_net=0.5;
      tol=0.1;
      abs_lrate=0.2;
     };
    };
   };
   layers {
    name=;
    el_typ=LeabraLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    max_size {x=1: y=1: z=1: };
    LeabraLayer @[0] {
     name="LeabraLayer_0";
     desc=;
     flags=;
     layer_type=HIDDEN;
     pos {x=0: y=0: z=0: };
     disp_scale=1;
     un_geom {x=1: y=1: n_not_xy=0: n=1: };
     unit_groups=0;
     gp_geom {x=1: y=1: n_not_xy=0: n=1: };
     gp_spc {x=1: y=1: };
     act_geom {x=1: y=1: n_not_xy=0: n=1: };
     scaled_act_geom {x=1: y=1: n_not_xy=0: n=1: };
     projections {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
     };
     send_prjns {
      name=;
      el_typ=LeabraPrjn;
      el_def=0;
     };
     units {
      name=;
      el_typ=LeabraUnit;
      el_def=0;
      pos {x=0: y=0: z=0: };
      unique_geom=0;
      geom {x=1: y=1: n_not_xy=0: n=1: };
      units_lesioned=0;
      output_name=;
     };
     unit_spec {type=LeabraUnitSpec: spec=$57$: };
     ext_flag=;
     dmem_dist=DMEM_DIST_DEFAULT;
     dist {
      fm_input=-1;
      fm_output=-1;
     };
     output_name=;
     sse=0;
     icon_value=0;
     netin {cmpt=1: avg=0: max=0: max_i=-1: };
     i_thrs {cmpt=1: avg=0: max=0: max_i=-1: };
     acts {cmpt=1: avg=0: max=0: max_i=-1: };
     acts_p {cmpt=1: avg=0: max=0: max_i=-1: };
     acts_m {cmpt=1: avg=0: max=0: max_i=-1: };
     phase_dif_ratio=1;
     acts_p2 {cmpt=1: avg=0: max=0: max_i=-1: };
     acts_m2 {cmpt=1: avg=0: max=0: max_i=-1: };
     kwta {k=1: pct=0.25: pct_c=0.75: adth_k=1: k_ithr=0: k1_ithr=0: ithr_r=0: ithr_diff=0: tie_brk=0: };
     i_val {kwta=0: g_i=0: gp_g_i=0: g_i_orig=0: };
     un_g_i {cmpt=0: avg=0: max=0: max_i=-1: };
     adapt_i {avg_avg=0: i_kwta_pt=0: g_bar_i=1: g_bar_l=0.1: };
     maxda=0;
     spec {type=LeabraLayerSpec: spec=.projects[0].networks[0].specs[3]$472$: };
     hard_clamped=0;
     ravg_l_avg=0;
     dav=0;
     avg_netin {cmpt=1: avg=0: max=0: max_i=-1: };
     avg_netin_sum {cmpt=1: avg=0: max=0: max_i=-1: };
     avg_netin_n=0;
     norm_err=0;
     da_updt=0;
    };
   };
   view_objs {
    name=;
    el_typ=NetViewObj;
    el_def=0;
   };
   flags=;
   auto_build=AUTO_BUILD;
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=10;
   batch=0;
   epoch=0;
   group=0;
   trial=0;
   tick=0;
   cycle=0;
   time=0;
   group_name=;
   trial_name=;
   output_name=;
   sse_unit_avg=0;
   sse_sqrt=0;
   sse=0;
   sum_sse=0;
   avg_sse=0;
   cnt_err_tol=0;
   cnt_err=0;
   pct_err=0;
   pct_cor=0;
   cur_sum_sse=0;
   avg_sse_n=0;
   cur_cnt_err=0;
   train_time {name="TimeUsed_0": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: s_used=0: n_used=0: };
   epoch_time {name="TimeUsed_1": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: s_used=0: n_used=0: };
   trial_time {name="TimeUsed_3": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: s_used=0: n_used=0: };
   settle_time {name="TimeUsed_4": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: s_used=0: n_used=0: };
   cycle_time {name="TimeUsed_5": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: s_used=0: n_used=0: };
   wt_sync_time {name="TimeUsed_6": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: s_used=0: n_used=0: };
   misc_time {name="TimeUsed_7": start={usr=0: sys=0: tot=0: }: end={usr=0: sys=0: tot=0: }: used={usr=0: sys=0: tot=0: }: s_used=0: n_used=0: };
   threads {
    run_time {name="": s_used=0: n_used=0: };
    sync_time {name="": s_used=0: n_used=0: };
    total_time {name="": s_used=0: n_used=0: };
    n_wake_in_sync=0;
    run_time_pct=0;
    sync_time_pct=0;
    wake_in_sync_pct=0;
    interleave=1;
    ignore_lay_sync=0;
   };
   dmem_sync_level=DMEM_SYNC_NETWORK;
   dmem_nprocs=1;
   usr1_save_fmt=FULL_NET;
   wt_save_fmt=TEXT;
   lay_layout=THREE_D;
   n_units=1;
   n_cons=0;
   max_size {x=1: y=1: z=1: };
   learn_rule=LEABRA_CHL;
   phase_order=MINUS_PLUS;
   no_plus_test=1;
   sequence_init=DO_NOTHING;
   phase=MINUS_PHASE;
   nothing_phase=0;
   phase_no=0;
   phase_max=2;
   ct_cycle=547816816;
   time_inc=1;
   cycle_max=60;
   mid_minus_cycle=-1;
   min_cycles=15;
   min_cycles_phase2=35;
   ct_time {
    minus=50;
    plus=20;
    inhib=1;
    n_avg_only_epcs=1;
    total_cycles=71;
    inhib_start=70;
   };
   ct_sravg {
    start=30;
    end=1;
    interval=5;
    plus_s_st=19;
   };
   ct_sin_i {
    start=30;
    duration=20;
    n_pi=2;
    burst_i=0.02;
    trough_i=0.02;
   };
   ct_fin_i {
    start=20;
    end=25;
    inhib_i=0;
   };
   sravg_vals {
    s_sum=0;
    s_nrm=1;
    m_sum=0;
    m_nrm=1;
    do_s=0;
   };
   minus_cycles=0;
   avg_cycles=0;
   avg_cycles_sum=0;
   avg_cycles_n=0;
   minus_output_name=;
   net_misc {
    cyc_syn_dep=0;
    syn_dep_int=20;
   };
   send_pct=0;
   send_pct_n=0;
   send_pct_tot=0;
   avg_send_pct=0;
   avg_send_pct_sum=0;
   avg_send_pct_n=0;
   maxda_stopcrit=0.005;
   maxda=0;
   trg_max_act_stopcrit=1;
   trg_max_act=0;
   ext_rew=0;
   ext_rew_avail=0;
   norew_val=0.5;
   avg_ext_rew=0;
   pvlv_pvi=0;
   pvlv_pvr=0;
   pvlv_lve=0;
   pvlv_lvi=0;
   pv_detected=0;
   avg_ext_rew_sum=0;
   avg_ext_rew_n=0;
   off_errs=1;
   on_errs=1;
   norm_err=0;
   avg_norm_err=1;
   avg_norm_err_sum=0;
   avg_norm_err_n=0;
  };
 };
};
