// ta_Dump File v3.0 -- code v8.2.1.0 rev11084
LeabraProject .projects[0] { 
 Doc_Group @.docs = [1] {
  taDoc @[0] { };
 };

 Wizard_Group @.wizards = [1] {
  LeabraWizard @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
   };
  };
 };

 ControlPanel_Group @.ctrl_panels = [2] {
  ControlPanel @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   ControlPanelMember_Group @.mbrs = [0] {
   };

   ControlPanelMethod_Group @.mths = [0] {
   };
  };
  ClusterRun @[1] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
   };

   ControlPanelMember_Group @.mbrs = [0] {
   };

   ControlPanelMethod_Group @.mths = [0] {
   };

   ParamSearchAlgo_List @.search_algos = [0] {
   };
  };
 };

 ParamSet_Group @.active_params = [0] {
 };

 ArchivedParams_Group @.archived_params = [0] {
 };

 DataTable_Group @.data = [0] {
  DataTable_Group @.gp[0] { 
  };
  DataTable_Group @.gp[1] { 
  };
  DataTable_Group @.gp[2] { 
  };
 };

 Program_TopGroup @.programs = [1] {
  Program @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserData_DocLink @[0] { };
   };

   ProgObjList @.objs = [2] {
    DataTable @[0] { 
     DataTableCols @.data = [8] {
      float_Data @[0] { };
      float_Data @[1] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
	UserDataItem @[1] { };
	UserDataItem @[2] { };
       };
      };
      float_Data @[2] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
      float_Data @[3] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
      float_Data @[4] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
      float_Data @[5] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
      float_Data @[6] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
      float_Data @[7] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };
    };
    DataTable @[1] { 
     DataTableCols @.data = [7] {
      float_Data @[0] { };
      float_Data @[1] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
	UserDataItem @[1] { };
	UserDataItem @[2] { };
       };
      };
      float_Data @[2] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
      float_Data @[3] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
      float_Data @[4] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
      float_Data @[5] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
      float_Data @[6] { 
       UserDataItem_List @*(.user_data_) {
	UserDataItem @[0] { };
       };
      };
     };

     DataOpList @.last_sort_spec.ops = [0] {
     };
    };
   };

   ProgVar_List @.objs_vars = [2] {
    ProgVar @[0] { };
    ProgVar @[1] { };
   };

   ProgType_List @.types = [0] {
   };

   ProgVar_List @.args = [0] {
   };

   ProgVar_List @.vars = [12] {
    ProgVar @[0] { };
    ProgVar @[1] { };
    ProgVar @[2] { };
    ProgVar @[3] { };
    ProgVar @[4] { };
    ProgVar @[5] { };
    ProgVar @[6] { };
    ProgVar @[7] { };
    ProgVar @[8] { };
    ProgVar @[9] { };
    ProgVar @[10] { };
    ProgVar @[11] { };
   };

   Function_List @.functions = [2] {
    Function @[0] { 
     ProgVar_List @.args = [1] {
      ProgVar @[0] { };
     };

     ProgEl_List @.fun_code = [2] {
      LocalVars @[0] { 
       ProgVar_List @.local_vars = [0] {
       };
      };
      ReturnExpr @[1] { };
     };
    };
    Function @[1] { 
     ProgVar_List @.args = [1] {
      ProgVar @[0] { };
     };

     ProgEl_List @.fun_code = [5] {
      LocalVars @[0] { 
       ProgVar_List @.local_vars = [2] {
	ProgVar @[0] { };
	ProgVar @[1] { };
       };
      };
      AssignExpr @[1] { };
      If @[2] { 
       ProgEl_List @.true_code = [1] {
	ReturnExpr @[0] { };
       };
      };
      AssignExpr @[3] { };
      ReturnExpr @[4] { };
     };
    };
   };

   ProgEl_List @.init_code = [0] {
   };

   ProgEl_List @.prog_code = [6] {
    LocalVars @[0] { 
     ProgVar_List @.local_vars = [15] {
      ProgVar @[0] { };
      ProgVar @[1] { };
      ProgVar @[2] { };
      ProgVar @[3] { };
      ProgVar @[4] { };
      ProgVar @[5] { };
      ProgVar @[6] { };
      ProgVar @[7] { };
      ProgVar @[8] { };
      ProgVar @[9] { };
      ProgVar @[10] { };
      ProgVar @[11] { };
      ProgVar @[12] { };
      ProgVar @[13] { };
      ProgVar @[14] { };
     };
    };
    If @[1] { 
     ProgEl_List @.true_code = [3] {
      MemberAssign @[0] { };
      MemberAssign @[1] { };
      MethodCall @[2] { 
       ProgArg_List @.meth_args = [7] {
	ProgArg @[0] { };
	ProgArg @[1] { };
	ProgArg @[2] { };
	ProgArg @[3] { };
	ProgArg @[4] { };
	ProgArg @[5] { };
	ProgArg @[6] { };
       };
      };
     };
    };
    AssignExpr @[2] { };
    AssignExpr @[3] { };
    AssignExpr @[4] { };
    ForLoop @[5] { 
     ProgEl_List @.loop_code = [19] {
      AssignExpr @[0] { };
      AssignExpr @[1] { };
      AssignExpr @[2] { };
      AssignExpr @[3] { };
      If @[4] { 
       ProgEl_List @.true_code = [1] {
	AssignExpr @[0] { };
       };
      };
      Else @[5] { 
       ProgEl_List @.true_code = [1] {
	AssignExpr @[0] { };
       };
      };
      MatrixAssign @[6] { };
      If @[7] { 
       ProgEl_List @.true_code = [2] {
	AssignExpr @[0] { };
	AssignExpr @[1] { };
       };
      };
      ElseIf @[8] { 
       ProgEl_List @.true_code = [4] {
	AssignExpr @[0] { };
	AssignExpr @[1] { };
	AssignExpr @[2] { };
	AssignExpr @[3] { };
       };
      };
      ElseIf @[9] { 
       ProgEl_List @.true_code = [2] {
	AssignExpr @[0] { };
	AssignExpr @[1] { };
       };
      };
      Else @[10] { 
       ProgEl_List @.true_code = [3] {
	AssignExpr @[0] { };
	AssignExpr @[1] { };
	AssignExpr @[2] { };
       };
      };
      MatrixAssign @[11] { };
      MatrixAssign @[12] { };
      AssignExpr @[13] { };
      AssignExpr @[14] { };
      AssignExpr @[15] { };
      MatrixAssign @[16] { };
      MatrixAssign @[17] { };
      MethodCall @[18] { 
       ProgArg_List @.meth_args = [0] {
       };
      };
     };
    };
   };
  };
 };

 taViewer_List @.viewers = [1] {
  MainWindowViewer @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
   };

   ToolBar_List @.toolbars = [1] {
    ToolBar @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };
    };
   };

   FrameViewer_List @.frames = [3] {
    BrowseViewerTaBase @[0] { };
    PanelViewer @[1] { };
    T3PanelViewer @[2] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
     };

     T3Panel_List @.panels = [1] {
      T3Panel @[0] { 
       T3DataView_List @.root_view.children = [1] {
	GraphTableView @[0] { 
	 T3DataView_List @.children = [8] {
	  GraphColView @[0] { };
	  GraphColView @[1] { };
	  GraphColView @[2] { };
	  GraphColView @[3] { };
	  GraphColView @[4] { };
	  GraphColView @[5] { };
	  GraphColView @[6] { };
	  GraphColView @[7] { };
	 };

	 T3Annotation_List @.annotations = [0] {
	 };

	 T3DataView_List @.annote_children = [0] {
	 };

	 GraphPlotView_List @.plots = [6] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	 };

	 GraphPlotView_List @.errbars = [6] {
	  GraphPlotView @[0] { };
	  GraphPlotView @[1] { };
	  GraphPlotView @[2] { };
	  GraphPlotView @[3] { };
	  GraphPlotView @[4] { };
	  GraphPlotView @[5] { };
	 };
	};
       };

       T3SavedView_List @.saved_views = [10] {
	T3SavedView @[0] { };
	T3SavedView @[1] { };
	T3SavedView @[2] { };
	T3SavedView @[3] { };
	T3SavedView @[4] { };
	T3SavedView @[5] { };
	T3SavedView @[6] { };
	T3SavedView @[7] { };
	T3SavedView @[8] { };
	T3SavedView @[9] { };
       };
      };
     };
    };
   };

   DockViewer_List @.docks = [1] {
    ToolBoxDockViewer @[0] { 
     UserDataItem_List @*(.user_data_) {
      UserDataItem @[0] { };
      UserDataItem @[1] { };
      UserDataItem @[2] { };
      UserDataItem @[3] { };
      UserDataItem @[4] { };
      UserDataItem @[5] { };
     };
    };
   };
  };
 };

 Network_Group @.networks = [1] {
  LeabraNetwork @[0] { 
   UserDataItem_List @*(.user_data_) {
    UserDataItem @[0] { };
    UserDataItem @[1] { };
    UserDataItem @[2] { };
    UserDataItem @[3] { };
    UserDataItem @[4] { };
    UserDataItem @[5] { };
    UserDataItem @[6] { };
    UserDataItem @[7] { };
    UserDataItem @[8] { };
    UserDataItem @[9] { };
    UserDataItem @[10] { };
    UserDataItem @[11] { };
    UserDataItem @[12] { };
    UserDataItem @[13] { };
    UserDataItem @[14] { };
    UserDataItem @[15] { };
    UserDataItem @[16] { };
    UserDataItem @[17] { };
    UserDataItem @[18] { };
    UserDataItem @[19] { };
   };

   BaseSpec_Group @.specs = [2] {
    LeabraUnitSpec @[0] { 
     BaseSpec_Group @.children = [0] {
     };

     Schedule @.noise_sched = [0] {
     };
    };
    LeabraBiasSpec @[1] { 
     BaseSpec_Group @.children = [0] {
     };

     Schedule @.lrate_sched = [0] {
     };
    };
   };

   ParamSeq_Group @.param_seqs = [0] {
   };

   Layer_Group @.layers = [0] {
   };

   Weights_List @.weights = [0] {
   };
  };
 };
};
LeabraProject .projects[0] {
 name="nxx1_fun_approx";
 desc=;
 tags=;
 version {
  major=0;
  minor=0;
  step=1;
 };
 author="Randall C. O'Reilly";
 email="emergent-users@grey.colorado.edu";
 license {
  license=GPLv2;
  owner_name="Regents of the University of Colorado";
  org="CCNLab at the University of Colorado Boulder";
  year="2017";
  custom=;
 };
 pub_cite=;
 wiki {wiki="": page_name="": };
 docs {
  name="docs";
  el_typ=taDoc;
  el_def=0;
  taDoc @[0] {
   name="ChangeLog";
   desc=;
   web_doc=0;
   wiki=;
   url="local";
   full_url="local";
   text_size=1;
   text="<html>
<head>ChangeLog</head>
<body>
<h1>ChangeLog</h1>
<ul>

<li>Thu Sep 28 03:37:03 2017 version: 0.0.1 user: oreilly file_name: <code>nxx1_fun_approx.proj</code> <br>
program for figuring out good closed-form approximation for convolved NXX1 function -- works well..
</ul>
</body>
</html>
";
   html_text="<html>
<head>ChangeLog</head>
<body>
<h1>ChangeLog</h1>
<ul>
<P>
<li>Thu Sep 28 03:37:03 2017 version: 0.0.1 user: oreilly file_name: <code>nxx1_fun_approx.proj</code> <br>
program for figuring out good closed-form approximation for convolved NXX1 function -- works well..
</ul>
</body>
</html>
";
  };
 };
 wizards {
  name="wizards";
  el_typ=LeabraWizard;
  el_def=0;
  LeabraWizard @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_6";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="NO_CLIP": value=1: val_type_fixed=0: };
    UserDataItem @[1] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="LeabraWizard_0";
  };
 };
 ctrl_panels {
  name="ctrl_panels";
  el_typ=ControlPanel;
  el_def=0;
  master_and_clones=0;
  ControlPanel @[0] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="ControlPanel";
   cp_state=REGULAR;
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=ControlPanelMember;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=ControlPanelMethod;
    el_def=0;
    group_type=GT_BUTTONS;
   };
  };
  ClusterRun @[1] {
   UserDataItem_List @*(.user_data_) {
    name=;
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="user_pinned": value=1: val_type_fixed=0: };
   };
   name="ClusterRun";
   cp_state=REGULAR;
   updt_while_running=0;
   desc=;
   mbrs {
    name="mbrs";
    el_typ=ControlPanelMember;
    el_def=0;
   };
   mths {
    name="mths";
    el_typ=ControlPanelMethod;
    el_def=0;
    group_type=GT_BUTTONS;
   };
   search_algos {
    name="search_algos";
    el_typ=ParamSearchAlgo;
    el_def=0;
   };
   use_search_algo=0;
   cur_search_algo=NULL;
   set_proj_name=0;
   proj_name=;
   auto_updt_interval=10;
   auto_updt_timeout=30;
   cluster=;
   clusters=;
   users=;
   last_submit_time=;
   notes=;
   label=;
   extra_files=;
   svn_repo=;
   repo_url=;
   queue=;
   run_time=;
   exe_cmd="emergent";
   ram_gb=0;
   n_threads=1;
   use_cuda=0;
   use_mpi=0;
   mpi_nodes=10;
   mpi_per_node=1;
   parallel_batch=0;
   pb_batches=10;
   pb_n_batches_per=1;
   nowin_x=0;
   enable_kill=0;
   enable_load=0;
   enable_notes=0;
  };
 };
 active_params {
  name="active_params";
  el_typ=ParamSet;
  el_def=0;
  master_and_clones=0;
 };
 archived_params {
  name="archived_params";
  el_typ=ParamSet;
  el_def=0;
  master_and_clones=0;
 };
 data {
  name="data";
  el_typ=DataTable;
  el_def=0;
  save_tables=1;
  DataTable_Group @.gp[0] {
   name="InputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp[1] {
   name="OutputData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
  DataTable_Group @.gp[2] {
   name="AnalysisData";
   el_typ=DataTable;
   el_def=0;
   save_tables=1;
  };
 };
 programs {
  name="programs";
  el_typ=Program;
  el_def=0;
  tags=;
  desc=;
  debug_mode=0;
  Program @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_1";
    el_typ=UserData_DocLink;
    el_def=0;
    UserData_DocLink @[0] {name="DocLink": doc=.programs[0].doc$$: };
   };
   name="NewNXX1";
   short_nm="NeNXX1";
   tags=;
   desc=;
   version {
    major=0;
    minor=0;
    step=0;
   };
   author="Randall C. O'Reilly";
   email="emergent-users@grey.colorado.edu";
   flags=NO_STOP_STEP|OBJS_UPDT_GUI;
   stop_step_cond {
    expr=;
   };
   objs {
    name="objs";
    el_typ=DataTable;
    el_def=0;
    DataTable @[0] {
     name="Nxx1Fun";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="Net";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0.001;0.0020000001;0.003;0.0040000002;0.0050000004;0.0060000005;0.0070000007;0.0080000004;0.0090000005;
0.010000001;0.011000001;0.012000001;0.013000001;0.014000001;0.015000002;0.016000001;0.017000001;0.018000001;0.019000001;
0.020000001;0.021000002;0.022000002;0.023000002;0.024000002;0.025000002;0.026000002;0.027000003;0.028000003;0.029000003;
0.030000003;0.031000003;0.032000002;0.033;0.033999998;0.034999996;0.035999995;0.036999993;0.037999991;0.03899999;
0.039999988;0.040999986;0.041999985;0.042999983;0.043999981;0.044999979;0.045999978;0.046999976;0.047999974;0.048999973;
0.049999971;0.050999969;0.051999968;0.052999966;0.053999964;0.054999962;0.055999961;0.056999959;0.057999957;0.058999956;
0.059999954;0.060999952;0.061999951;0.062999949;0.063999951;0.064999953;0.065999955;0.066999957;0.067999959;0.068999961;
0.069999963;0.070999965;0.071999967;0.072999969;0.073999971;0.074999973;0.075999975;0.076999977;0.077999979;0.078999981;
0.079999983;0.080999985;0.081999987;0.082999989;0.083999991;0.084999993;0.085999995;0.086999997;0.088;0.089000002;
0.090000004;0.091000006;0.092000008;0.09300001;0.094000012;0.095000014;0.096000016;0.097000018;0.09800002;0.099000022;
0.10000002;0.10100003;0.10200003;0.10300003;0.10400003;0.10500003;0.10600004;0.10700004;0.10800004;0.10900004;
0.11000004;0.11100005;0.11200005;0.11300005;0.11400005;0.11500005;0.11600006;0.11700006;0.11800006;0.11900006;
0.12000006;0.12100007;0.12200007;0.12300007;0.12400007;0.12500007;0.12600008;0.12700008;0.12800008;0.12900008;
0.13000008;0.13100009;0.13200009;0.13300009;0.13400009;0.13500009;0.1360001;0.1370001;0.1380001;0.1390001;
0.1400001;0.14100011;0.14200011;0.14300011;0.14400011;0.14500012;0.14600012;0.14700012;0.14800012;0.14900012;
0.15000013;0.15100013;0.15200013;0.15300013;0.15400013;0.15500014;0.15600014;0.15700014;0.15800014;0.15900014;
0.16000015;0.16100015;0.16200015;0.16300015;0.16400015;0.16500016;0.16600016;0.16700016;0.16800016;0.16900016;
0.17000017;0.17100017;0.17200017;0.17300017;0.17400017;0.17500018;0.17600018;0.17700018;0.17800018;0.17900018;
0.18000019;0.18100019;0.18200019;0.18300019;0.18400019;0.1850002;0.1860002;0.1870002;0.1880002;0.1890002;
0.19000021;0.19100021;0.19200021;0.19300021;0.19400021;0.19500022;0.19600022;0.19700022;0.19800022;0.19900022;
0.20000023;0.20100023;0.20200023;0.20300023;0.20400023;0.20500024;0.20600024;0.20700024;0.20800024;0.20900024;
0.21000025;0.21100025;0.21200025;0.21300025;0.21400025;0.21500026;0.21600026;0.21700026;0.21800026;0.21900027;
0.22000027;0.22100027;0.22200027;0.22300027;0.22400028;0.22500028;0.22600028;0.22700028;0.22800028;0.22900029;
0.23000029;0.23100029;0.23200029;0.23300029;0.2340003;0.2350003;0.2360003;0.2370003;0.2380003;0.23900031;
0.24000031;0.24100031;0.24200031;0.24300031;0.24400032;0.24500032;0.24600032;0.24700032;0.24800032;0.24900033;
0.25000033;0.25100031;0.2520003;0.25300029;0.25400028;0.25500026;0.25600025;0.25700024;0.25800022;0.25900021;
0.2600002;0.26100019;0.26200017;0.26300016;0.26400015;0.26500013;0.26600012;0.26700011;0.2680001;0.26900008;
0.27000007;0.27100006;0.27200004;0.27300003;0.27400002;0.27500001;0.27599999;0.27699998;0.27799997;0.27899995;
0.27999994;0.28099993;0.28199992;0.2829999;0.28399989;0.28499988;0.28599986;0.28699985;0.28799984;0.28899983;
0.28999981;0.2909998;0.29199979;0.29299977;0.29399976;0.29499975;0.29599974;0.29699972;0.29799971;0.2989997;
0.29999968;0.30099967;0.30199966;0.30299965;0.30399963;0.30499962;0.30599961;0.30699959;0.30799958;0.30899957;
0.30999956;0.31099954;0.31199953;0.31299952;0.3139995;0.31499949;0.31599948;0.31699947;0.31799945;0.31899944;
0.31999943;0.32099941;0.3219994;0.32299939;0.32399938;0.32499936;0.32599935;0.32699934;0.32799932;0.32899931;
0.3299993;0.33099928;0.33199927;0.33299926;0.33399925;0.33499923;0.33599922;0.33699921;0.33799919;0.33899918;
0.33999917;0.34099916;0.34199914;0.34299913;0.34399912;0.3449991;0.34599909;0.34699908;0.34799907;0.34899905;
0.34999904;0.35099903;0.35199901;0.352999;0.35399899;0.35499898;0.35599896;0.35699895;0.35799894;0.35899892;
0.35999891;0.3609989;0.36199889;0.36299887;0.36399886;0.36499885;0.36599883;0.36699882;0.36799881;0.3689988;
0.36999878;0.37099877;0.37199876;0.37299874;0.37399873;0.37499872;0.37599871;0.37699869;0.37799868;0.37899867;
0.37999865;0.38099864;0.38199863;0.38299862;0.3839986;0.38499859;0.38599858;0.38699856;0.38799855;0.38899854;
0.38999853;0.39099851;0.3919985;0.39299849;0.39399847;0.39499846;0.39599845;0.39699844;0.39799842;0.39899841;
0.3999984;0.40099838;0.40199837;0.40299836;0.40399835;0.40499833;0.40599832;0.40699831;0.40799829;0.40899828;
0.40999827;0.41099826;0.41199824;0.41299823;0.41399822;0.4149982;0.41599819;0.41699818;0.41799816;0.41899815;
0.41999814;0.42099813;0.42199811;0.4229981;0.42399809;0.42499807;0.42599806;0.42699805;0.42799804;0.42899802;
0.42999801;0.430998;0.43199798;0.43299797;0.43399796;0.43499795;0.43599793;0.43699792;0.43799791;0.43899789;
0.43999788;0.44099787;0.44199786;0.44299784;0.44399783;0.44499782;0.4459978;0.44699779;0.44799778;0.44899777;
0.44999775;0.45099774;0.45199773;0.45299771;0.4539977;0.45499769;0.45599768;0.45699766;0.45799765;0.45899764;
0.45999762;0.46099761;0.4619976;0.46299759;0.46399757;0.46499756;0.46599755;0.46699753;0.46799752;0.46899751;
0.4699975;0.47099748;0.47199747;0.47299746;0.47399744;0.47499743;0.47599742;0.47699741;0.47799739;0.47899738;
0.47999737;0.48099735;0.48199734;0.48299733;0.48399732;0.4849973;0.48599729;0.48699728;0.48799726;0.48899725;
0.48999724;0.49099723;0.49199721;0.4929972;0.49399719;0.49499717;0.49599716;0.49699715;0.49799713;0.49899712;
0.49999711;0.50099713;0.50199711;0.5029971;0.50399709;0.50499707;0.50599706;0.50699705;0.50799704;0.50899702;
0.50999701;0.510997;0.51199698;0.51299697;0.51399696;0.51499695;0.51599693;0.51699692;0.51799691;0.51899689;
0.51999688;0.52099687;0.52199686;0.52299684;0.52399683;0.52499682;0.5259968;0.52699679;0.52799678;0.52899677;
0.52999675;0.53099674;0.53199673;0.53299671;0.5339967;0.53499669;0.53599668;0.53699666;0.53799665;0.53899664;
0.53999662;0.54099661;0.5419966;0.54299659;0.54399657;0.54499656;0.54599655;0.54699653;0.54799652;0.54899651;
0.5499965;0.55099648;0.55199647;0.55299646;0.55399644;0.55499643;0.55599642;0.55699641;0.55799639;0.55899638;
0.55999637;0.56099635;0.56199634;0.56299633;0.56399632;0.5649963;0.56599629;0.56699628;0.56799626;0.56899625;
0.56999624;0.57099622;0.57199621;0.5729962;0.57399619;0.57499617;0.57599616;0.57699615;0.57799613;0.57899612;
0.57999611;0.5809961;0.58199608;0.58299607;0.58399606;0.58499604;0.58599603;0.58699602;0.58799601;0.58899599;
0.58999598;0.59099597;0.59199595;0.59299594;0.59399593;0.59499592;0.5959959;0.59699589;0.59799588;0.59899586;
0.59999585;0.60099584;0.60199583;0.60299581;0.6039958;0.60499579;0.60599577;0.60699576;0.60799575;0.60899574;
0.60999572;0.61099571;0.6119957;0.61299568;0.61399567;0.61499566;0.61599565;0.61699563;0.61799562;0.61899561;
0.61999559;0.62099558;0.62199557;0.62299556;0.62399554;0.62499553;0.62599552;0.6269955;0.62799549;0.62899548;
0.62999547;0.63099545;0.63199544;0.63299543;0.63399541;0.6349954;0.63599539;0.63699538;0.63799536;0.63899535;
0.63999534;0.64099532;0.64199531;0.6429953;0.64399529;0.64499527;0.64599526;0.64699525;0.64799523;0.64899522;
0.64999521;0.65099519;0.65199518;0.65299517;0.65399516;0.65499514;0.65599513;0.65699512;0.6579951;0.65899509;
0.65999508;0.66099507;0.66199505;0.66299504;0.66399503;0.66499501;0.665995;0.66699499;0.66799498;0.66899496;
0.66999495;0.67099494;0.67199492;0.67299491;0.6739949;0.67499489;0.67599487;0.67699486;0.67799485;0.67899483;
0.67999482;0.68099481;0.6819948;0.68299478;0.68399477;0.68499476;0.68599474;0.68699473;0.68799472;0.68899471;
0.68999469;0.69099468;0.69199467;0.69299465;0.69399464;0.69499463;0.69599462;0.6969946;0.69799459;0.69899458;
0.69999456;0.70099455;0.70199454;0.70299453;0.70399451;0.7049945;0.70599449;0.70699447;0.70799446;0.70899445;
0.70999444;0.71099442;0.71199441;0.7129944;0.71399438;0.71499437;0.71599436;0.71699435;0.71799433;0.71899432;
0.71999431;0.72099429;0.72199428;0.72299427;0.72399426;0.72499424;0.72599423;0.72699422;0.7279942;0.72899419;
0.72999418;0.73099416;0.73199415;0.73299414;0.73399413;0.73499411;0.7359941;0.73699409;0.73799407;0.73899406;
0.73999405;0.74099404;0.74199402;0.74299401;0.743994;0.74499398;0.74599397;0.74699396;0.74799395;0.74899393;
0.74999392;0.75099391;0.75199389;0.75299388;0.75399387;0.75499386;0.75599384;0.75699383;0.75799382;0.7589938;
0.75999379;0.76099378;0.76199377;0.76299375;0.76399374;0.76499373;0.76599371;0.7669937;0.76799369;0.76899368;
0.76999366;0.77099365;0.77199364;0.77299362;0.77399361;0.7749936;0.77599359;0.77699357;0.77799356;0.77899355;
0.77999353;0.78099352;0.78199351;0.7829935;0.78399348;0.78499347;0.78599346;0.78699344;0.78799343;0.78899342;
0.78999341;0.79099339;0.79199338;0.79299337;0.79399335;0.79499334;0.79599333;0.79699332;0.7979933;0.79899329;
0.79999328;0.80099326;0.80199325;0.80299324;0.80399323;0.80499321;0.8059932;0.80699319;0.80799317;0.80899316;
0.80999315;0.81099313;0.81199312;0.81299311;0.8139931;0.81499308;0.81599307;0.81699306;0.81799304;0.81899303;
0.81999302;0.82099301;0.82199299;0.82299298;0.82399297;0.82499295;0.82599294;0.82699293;0.82799292;0.8289929;
0.82999289;0.83099288;0.83199286;0.83299285;0.83399284;0.83499283;0.83599281;0.8369928;0.83799279;0.83899277;
0.83999276;0.84099275;0.84199274;0.84299272;0.84399271;0.8449927;0.84599268;0.84699267;0.84799266;0.84899265;
0.84999263;0.85099262;0.85199261;0.85299259;0.85399258;0.85499257;0.85599256;0.85699254;0.85799253;0.85899252;
0.8599925;0.86099249;0.86199248;0.86299247;0.86399245;0.86499244;0.86599243;0.86699241;0.8679924;0.86899239;
0.86999238;0.87099236;0.87199235;0.87299234;0.87399232;0.87499231;0.8759923;0.87699229;0.87799227;0.87899226;
0.87999225;0.88099223;0.88199222;0.88299221;0.8839922;0.88499218;0.88599217;0.88699216;0.88799214;0.88899213;
0.88999212;0.89099211;0.89199209;0.89299208;0.89399207;0.89499205;0.89599204;0.89699203;0.89799201;0.898992;
0.89999199;0.90099198;0.90199196;0.90299195;0.90399194;0.90499192;0.90599191;0.9069919;0.90799189;0.90899187;
0.90999186;0.91099185;0.91199183;0.91299182;0.91399181;0.9149918;0.91599178;0.91699177;0.91799176;0.91899174;
0.91999173;0.92099172;0.92199171;0.92299169;0.92399168;0.92499167;0.92599165;0.92699164;0.92799163;0.92899162;
0.9299916;0.93099159;0.93199158;0.93299156;0.93399155;0.93499154;0.93599153;0.93699151;0.9379915;0.93899149;
0.93999147;0.94099146;0.94199145;0.94299144;0.94399142;0.94499141;0.9459914;0.94699138;0.94799137;0.94899136;
0.94999135;0.95099133;0.95199132;0.95299131;0.95399129;0.95499128;0.95599127;0.95699126;0.95799124;0.95899123;
0.95999122;0.9609912;0.96199119;0.96299118;0.96399117;0.96499115;0.96599114;0.96699113;0.96799111;0.9689911;
0.96999109;0.97099108;0.97199106;0.97299105;0.97399104;0.97499102;0.97599101;0.976991;0.97799098;0.97899097;
0.97999096;0.98099095;0.98199093;0.98299092;0.98399091;0.98499089;0.98599088;0.98699087;0.98799086;0.98899084;
0.98999083;0.99099082;0.9919908;0.99299079;0.99399078;0.99499077;0.99599075;0.99699074;0.99799073;0.99899071;
0.9999907;       };
      };
      float_Data @[1] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_1": value=1: val_type_fixed=0: };
	UserDataItem @[1] {name="MIN": value=0: val_type_fixed=0: };
	UserDataItem @[2] {name="MAX": value=1: val_type_fixed=0: };
       };
       name="Act";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;1.2625271e-06;6.3453572e-06;2.2464465e-05;6.8229398e-05;
0.00018756278;0.00047524594;0.0011178916;0.0024497164;0.0050128135;0.0095981881;0.01723302;0.02908163;0.046250649;0.069529928;
0.099143595;0.13460347;0.17472589;0.21783367;0.26206091;0.30567509;0.34731579;0.38610178;0.42161405;0.45379475;
0.48282045;0.50898689;0.53262627;0.55405933;0.57357234;0.59141248;0.60778838;0.62287611;0.63682473;0.64976114;
0.66179323;0.67301422;0.68350452;0.69333404;0.70256454;0.71124923;0.71943605;0.72716689;0.73447925;0.7414065;
0.74797821;0.75422198;0.76016152;0.76581854;0.77121305;0.77636307;0.78128493;0.78599358;0.79050267;0.79482442;
0.79897082;0.80295211;0.80677783;0.81045729;0.81399864;0.81740934;0.82069695;0.82386768;0.8269279;0.82988304;
0.83273864;0.83549958;0.83817065;0.84075606;0.84325987;0.84568602;0.84803796;0.85031891;0.85253239;0.85468107;
0.85676813;0.85879564;0.86076665;0.86268306;0.86454743;0.86636174;0.86812794;0.86984789;0.87152362;0.87315649;
0.87474853;0.87630075;0.87781513;0.87929267;0.88073486;0.88214308;0.88351816;0.88486147;0.88617438;0.88745725;
0.88871169;0.88993853;0.89113843;0.89231247;0.89346129;0.89458597;0.8956871;0.89676541;0.89782161;0.89885634;
0.89987034;0.9008643;0.9018386;0.90279394;0.90373075;0.90464979;0.90555137;0.90643609;0.90730417;0.90815657;
0.90899324;0.90981477;0.91062176;0.91141421;0.91219276;0.91295779;0.9137097;0.9144485;0.91517496;0.91588885;
0.91659117;0.91728163;0.91796076;0.91862905;0.91928619;0.91993308;0.92056936;0.92119586;0.92181247;0.92241955;
0.92301732;0.92360568;0.9241854;0.92475617;0.92531848;0.92587256;0.92641824;0.92695612;0.92748606;0.92800844;
0.92852342;0.92903101;0.92953146;0.93002486;0.93051142;0.93099105;0.93146449;0.93193114;0.93239164;0.93284577;
0.93329406;0.93373632;0.93417293;0.93460351;0.93502879;0.93544817;0.9358626;0.93627143;0.93667519;0.93707389;
0.93746746;0.93785644;0.93824023;0.93861967;0.93899417;0.93936425;0.93972975;0.94009107;0.94044799;0.94080061;
0.94114923;0.94149357;0.94183409;0.94217062;0.94250327;0.94283217;0.94315732;0.94347864;0.94379634;0.94411051;
0.94442147;0.94472861;0.94503254;0.94533318;0.94563055;0.9459247;0.94621557;0.9465034;0.94678825;0.94707;
0.94734854;0.94762456;0.94789761;0.9481675;0.94843501;0.94869971;0.94896156;0.94922096;0.94947737;0.94973153;
0.94998306;0.95023209;0.95047855;0.95072263;0.95096427;0.9512037;0.95144075;0.95167547;0.95190787;0.95213825;
0.95236617;0.95259196;0.95281571;0.95303738;0.95325696;0.95347458;0.95369023;0.95390356;0.95411515;0.95432472;
0.9545325;0.95473844;0.95494235;0.95514446;0.95534486;0.95554334;0.95574027;0.9559353;0.95612872;0.95632035;
0.95651031;0.9566986;0.95688552;0.95707059;0.95725405;0.95743603;0.95761645;0.95779538;0.95797282;0.9581486;
0.95832336;0.95849627;0.95866787;0.95883799;0.95900673;0.9591741;0.95934033;0.95950484;0.95966816;0.95983022;
0.95999098;0.96015054;0.96030867;0.96046543;0.9606213;0.96077585;0.96092898;0.96108109;0.96123213;0.96138179;
0.96153045;0.96167779;0.96182412;0.96196944;0.96211356;0.96225661;0.96239847;0.96253932;0.96267915;0.96281797;
0.96295571;0.96309245;0.96322823;0.96336299;0.96349669;0.96362948;0.96376121;0.96389216;0.96402216;0.96415108;
0.96427917;0.96440631;0.96453261;0.96465784;0.96478254;0.96490598;0.96502876;0.96515065;0.96527183;0.96539193;
0.96551138;0.96562982;0.96574759;0.96586448;0.96598065;0.96609592;0.9662106;0.96632427;0.96643734;0.96654969;
0.96666127;0.96677214;0.96688223;0.96699148;0.96710002;0.96720803;0.9673152;0.96742153;0.96752727;0.96763253;
0.96773696;0.96784079;0.96794373;0.96804619;0.96814799;0.96824932;0.96834981;0.96844959;0.96854889;0.96864754;
0.96874559;0.96884286;0.96893966;0.96903586;0.96913141;0.96922642;0.96932089;0.96941471;0.96950793;0.96960068;
0.96969301;0.96978438;0.96987551;0.96996599;0.97005588;0.97014529;0.97023416;0.97032249;0.97041029;0.97049761;
0.97058439;0.9706707;0.97075653;0.97084171;0.97092646;0.97101086;0.97109449;0.97117794;0.97126079;0.97134298;
0.97142506;0.97150654;0.97158742;0.97166783;0.97174793;0.97182757;0.97190654;0.97198534;0.97206354;0.97214144;
0.97221893;0.97229576;0.97237241;0.97244841;0.97252417;0.97259957;0.97267455;0.97274894;0.97282308;0.97289675;
0.97296983;0.97304273;0.97311532;0.97318745;0.97325903;0.97333026;0.97340131;0.97347188;0.97354198;0.97361183;
0.97368133;0.97375041;0.97381914;0.9738875;0.97395563;0.97402316;0.97409052;0.97415751;0.97422427;0.97429049;
0.97435623;0.97442198;0.97448707;0.97455204;0.97461671;0.97468102;0.97474498;0.97480845;0.97487193;0.97493488;
0.97499746;0.97505987;0.97512192;0.97518361;0.975245;0.97530615;0.97536713;0.97542751;0.97548771;0.97554785;
0.9756074;0.97566676;0.97572583;0.97578448;0.97584301;0.97590142;0.97595912;0.97601694;0.97607446;0.97613144;
0.97618824;0.97624487;0.97630107;0.97635716;0.97641295;0.9764685;0.97652364;0.97657859;0.97663337;0.97668785;
0.97674197;0.97679603;0.97684968;0.97690326;0.97695655;0.97700948;0.97706217;0.97711474;0.97716695;0.97721893;
0.97727072;0.97732252;0.97737372;0.97742462;0.97747558;0.97752631;0.97757667;0.97762674;0.97767687;0.97772646;
0.97777599;0.97782522;0.9778744;0.97792315;0.97797173;0.97802025;0.97806841;0.97811627;0.97816426;0.97821188;
0.97825921;0.97830635;0.97835338;0.97840005;0.97844666;0.97849303;0.97853917;0.97858512;0.97863084;0.97867632;
0.9787218;0.97876698;0.97881186;0.97885674;0.97890127;0.97894579;0.97898996;0.97903407;0.97907794;0.97912163;
0.97916502;0.97920847;0.97925156;0.97929448;0.97933728;0.97937983;0.97942239;0.97946465;0.97950667;0.97954863;
0.9795903;0.97963208;0.97967333;0.97971451;0.97975564;0.97979653;0.97983736;0.97987795;0.97991824;0.97995865;
0.97999871;0.9800384;0.98007822;0.98011792;0.98015726;0.9801966;0.98023582;0.9802748;0.98031354;0.9803524;
0.98039085;       };
      };
      float_Data @[2] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="Linear";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0.009971261;0.019971132;0.029971004;0.039970875;0.049970746;0.059970617;0.069970489;0.07997036;0.089970231;
0.099970102;0.10996997;0.11996984;0.12996972;0.13996959;0.14996946;0.15996933;0.1699692;0.17996907;0.18996894;
0.19996881;0.20996869;0.21996856;0.22996843;0.2399683;0.24996817;0.25996804;0.26996791;0.27996778;0.28996766;
0.29996753;0.3099674;0.31996727;0.32996714;0.33996701;0.34996688;0.35996675;0.36996663;0.3799665;0.38996637;
0.39996624;0.40996611;0.41996598;0.42996585;0.43996572;0.4499656;0.45996547;0.46996534;0.47996521;0.48996508;
0.49996495;0.50996482;0.51996469;0.52996457;0.53996444;0.54996431;0.55996418;0.56996405;0.57996392;0.58996379;
0.59996367;0.60996354;0.61996341;0.62996328;0.63996315;0.64996302;0.65996289;0.66996276;0.67996264;0.68996251;
0.69996238;0.70996225;0.71996212;0.72996199;0.73996186;0.74996173;0.75996161;0.76996148;0.77996135;0.78996122;
0.79996109;0.80996096;0.81996083;0.8299607;0.83996058;0.84996045;0.85996032;0.86996019;0.87996006;0.88995993;
0.8999598;0.90995967;0.91995955;0.92995942;0.93995929;0.94995916;0.95995903;0.9699589;0.97995877;0.98995864;
0.99995852;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;       };
      };
      float_Data @[3] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="NoNoise";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=9;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0.090671517;0.16646615;0.23059762;0.28556564;0.33320329;0.3748852;0.41166258;0.44435295;0.47360173;
0.49992526;0.52374142;0.54539222;0.56516016;0.5832805;0.59995115;0.61533922;0.62958735;0.64281768;0.65513545;
0.666632;0.67738676;0.6874693;0.69694072;0.70585495;0.71425974;0.72219753;0.72970629;0.7368198;0.74356848;
0.74997967;0.75607818;0.76188618;0.76742411;0.7727102;0.7777614;0.78259301;0.78721893;0.79165214;0.79590434;
0.79998648;0.80390853;0.80767971;0.81130862;0.81480306;0.81817043;0.82141757;0.82455075;0.82757586;0.83049846;
0.8333236;0.83605611;0.83870047;0.84126091;0.8437413;0.84614539;0.84847665;0.85073829;0.85293335;0.85506487;
0.85713542;0.85914767;0.86110407;0.86300683;0.86485815;0.86666012;0.86841464;0.87012357;0.87178874;0.87341172;
0.8749941;0.87653744;0.87804317;0.87951255;0.88094699;0.88234764;0.88371575;0.88505238;0.88635862;0.88763553;
0.88888407;0.89010519;0.89129972;0.89246857;0.89361256;0.89473248;0.89582902;0.89690298;0.897955;0.8989858;
0.89999598;0.90098614;0.90195692;0.9029088;0.90384239;0.90475821;0.90565675;0.90653849;0.90740389;0.90825337;
0.90908748;0.90990651;0.91071093;0.91150117;0.91227746;0.91304028;0.91378999;0.91452682;0.9152512;0.91596335;
0.91666371;0.91735244;0.9180299;0.91869634;0.91935199;0.91999722;0.92063218;0.92125714;0.92187232;0.92247796;
0.92307431;0.92366153;0.92423987;0.92480952;0.92537063;0.92592347;0.92646819;0.92700493;0.92753386;0.92805523;
0.92856914;0.92907572;0.9295752;0.93006772;0.93055332;0.9310323;0.93150467;0.93197066;0.93243033;0.9328838;
0.93333125;0.9337728;0.93420851;0.9346385;0.93506294;0.93548191;0.9358955;0.93630379;0.93670696;0.937105;
0.93749815;0.93788636;0.93826979;0.93864846;0.9390226;0.93939215;0.93975729;0.94011801;0.94047445;0.94082665;
0.94117475;0.94151878;0.94185877;0.94219488;0.94252712;0.94285554;0.9431802;0.94350123;0.94381863;0.94413251;
0.94444287;0.94474983;0.9450534;0.94535369;0.9456507;0.94594443;0.94623506;0.94652259;0.94680703;0.94708848;
0.94736701;0.94764256;0.94791526;0.94818515;0.94845223;0.94871658;0.94897825;0.94923723;0.94949359;0.94974738;
0.94999868;0.95024747;0.95049375;0.9507376;0.95097911;0.95121825;0.95145506;0.95168954;0.95192182;0.95215189;
0.9523797;0.95260543;0.95282894;0.95305043;0.95326984;0.95348716;0.95370251;0.95391589;0.95412725;0.95433676;
0.95454431;0.95475;0.95495385;0.95515585;0.955356;0.95555443;0.95575112;0.95594603;0.95613927;0.95633078;
0.95652068;0.95670891;0.95689547;0.95708048;0.95726389;0.95744574;0.9576261;0.95780486;0.95798218;0.95815796;
0.9583323;0.95850521;0.9586767;0.95884675;0.95901543;0.95918268;0.95934862;0.95951319;0.95967644;0.95983839;
0.95999902;0.96015841;0.96031654;0.96047336;0.96062899;0.96078336;0.96093661;0.9610886;0.9612394;0.96138906;
0.96153754;0.96168494;0.96183115;0.96197629;0.96212035;0.96226329;0.96240515;0.96254593;0.9626857;0.9628244;
0.96296209;0.96309876;0.96323442;0.96336913;0.96350282;0.96363556;0.96376729;0.96389812;0.96402794;0.96415687;
0.9642849;0.96441203;0.96453822;0.96466351;0.96478796;0.96491152;0.96503419;0.96515602;0.96527702;0.96539718;
0.96551645;0.965635;0.96575266;0.96586955;0.96598566;0.96610093;0.96621549;0.96632922;0.96644223;0.96655446;
0.96666592;0.96677667;0.9668867;0.96699595;0.96710455;0.96721238;0.96731955;0.967426;0.96753174;0.96763682;
0.96774125;0.96784496;0.96794802;0.96805042;0.96815217;0.96825325;0.96835375;0.96845359;0.96855277;0.96865135;
0.96874934;0.96884668;0.96894342;0.96903956;0.96913517;0.96923012;0.96932453;0.96941829;0.96951157;0.96960419;
0.96969634;0.9697879;0.96987891;0.96996933;0.97005928;0.97014862;0.97023749;0.97032577;0.97041357;0.97050089;
0.97058761;0.97067386;0.97075963;0.97084486;0.97092962;0.9710139;0.97109765;0.97118098;0.97126377;0.97134614;
0.97142798;0.9715094;0.97159034;0.97167081;0.97175086;0.97183043;0.97190952;0.9719882;0.97206646;0.97214431;
0.97222167;0.97229862;0.97237515;0.97245121;0.97252691;0.97260219;0.97267705;0.9727515;0.97282553;0.9728992;
0.97297245;0.97304529;0.97311771;0.97318983;0.97326148;0.97333282;0.97340369;0.97347426;0.97354442;0.97361428;
0.97368366;0.97375274;0.97382146;0.97388983;0.97395784;0.97402543;0.97409272;0.97415972;0.9742263;0.97429258;
0.97435844;0.97442406;0.97448927;0.97455418;0.97461879;0.97468305;0.974747;0.9748106;0.9748739;0.97493684;
0.97499949;0.97506183;0.97512388;0.97518563;0.97524703;0.97530818;0.97536898;0.97542948;0.97548974;0.97554964;
0.9756093;0.97566861;0.97572768;0.97578645;0.97584492;0.97590315;0.97596109;0.97601873;0.97607607;0.97613317;
0.97619003;0.9762466;0.97630286;0.97635889;0.97641462;0.97647011;0.97652537;0.97658032;0.97663504;0.97668952;
0.97674376;0.9767977;0.9768514;0.97690487;0.9769581;0.97701102;0.97706378;0.97711629;0.9771685;0.97722054;
0.97727227;0.97732383;0.97737515;0.97742623;0.97747707;0.97752768;0.97757804;0.97762823;0.97767812;0.97772789;
0.97777736;0.97782665;0.97787571;0.97792453;0.97797316;0.97802156;0.97806978;0.97811776;0.97816551;0.97821307;
0.97826046;0.9783076;0.97835457;0.9784013;0.97844785;0.97849423;0.97854036;0.97858632;0.97863209;0.97867763;
0.97872299;0.97876817;0.97881317;0.97885793;0.97890258;0.97894698;0.97899121;0.97903526;0.97907913;0.97912276;
0.97916627;0.9792096;0.97925276;0.97929567;0.97933847;0.97938108;0.97942346;0.97946572;0.9795078;0.97954971;
0.97959149;0.97963303;0.9796744;0.97971565;0.97975671;0.9797976;0.97983831;0.9798789;0.97991931;0.97995955;
0.97999966;0.98003954;0.98007929;0.98011893;0.98015839;0.98019767;0.98023677;0.98027575;0.98031461;0.9803533;
0.9803918;       };
      };
      float_Data @[4] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="LogAct";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=9;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;1.2625263e-06;6.3453372e-06;2.2464212e-05;6.8227069e-05;
0.00018754519;0.00047513304;0.0011172673;0.0024467208;0.0050002914;0.0095524183;0.017086215;0.028666783;0.045212962;0.067219235;
0.094531327;0.12628323;0.16103484;0.19707359;0.23274603;0.26672021;0.2981143;0.32649532;0.35179287;0.37417722;
0.39394599;0.41143849;0.42698279;0.44087043;0.4533484;0.46462199;0.47485957;0.48419994;0.49275821;0.5006305;
0.50789726;0.51462692;0.52087766;0.52669936;0.53213567;0.53722364;0.54199636;0.54648244;0.55070722;0.5546931;
0.55845982;0.56202543;0.56540555;0.56861436;0.57166463;0.57456803;0.577335;0.57997489;0.5824964;0.58490717;
0.58721471;0.58942538;0.59154505;0.59357947;0.59553361;0.59741205;0.59921938;0.60095936;0.6026358;0.60425204;
0.60581136;0.60731667;0.60877085;0.61017638;0.61153567;0.61285102;0.61412454;0.615358;0.61655354;0.61771274;
0.61883742;0.61992878;0.62098861;0.62201798;0.62301838;0.62399095;0.62493682;0.62585711;0.62675285;0.62762499;
0.62847453;0.62930214;0.63010895;0.63089544;0.63166261;0.63241106;0.6331414;0.63385433;0.63455063;0.63523054;
0.63589495;0.63654429;0.63717902;0.63779962;0.63840652;0.63900036;0.63958138;0.64015001;0.64070672;0.6412518;
0.64178562;0.64230865;0.64282107;0.6433233;0.64381552;0.64429814;0.6447714;0.6452356;0.6456908;0.64613765;
0.64657599;0.64700627;0.64742869;0.64784336;0.64825064;0.64865065;0.64904362;0.64942962;0.649809;0.65018165;
0.65054816;0.65090835;0.65126252;0.65161091;0.65195334;0.65229034;0.65262169;0.65294784;0.65326875;0.6535846;
0.6538955;0.65420139;0.65450269;0.65479928;0.6550914;0.65537912;0.65566242;0.65594161;0.65621662;0.65648758;
0.65675467;0.65701783;0.65727723;0.65753287;0.65778494;0.65803337;0.65827852;0.6585201;0.6587584;0.65899342;
0.65922529;0.65945405;0.65967983;0.65990239;0.66012222;0.66033894;0.66055304;0.66076416;0.66097265;0.66117853;
0.66138166;0.66158241;0.66178048;0.66197622;0.6621694;0.66236019;0.66254866;0.66273493;0.66291887;0.6631006;
0.66328019;0.66345757;0.66363293;0.6638062;0.6639775;0.66414678;0.66431415;0.66447949;0.66464293;0.66480458;
0.6649645;0.66512245;0.66527873;0.66543329;0.66558611;0.66573727;0.66588676;0.66603464;0.66618097;0.66632569;
0.66646874;0.66661048;0.66675067;0.66688919;0.66702652;0.66716236;0.66729671;0.6674298;0.66756135;0.66769171;
0.66782069;0.66794837;0.66807473;0.6681999;0.66832376;0.66844648;0.66856796;0.66868824;0.66880727;0.66892529;
0.66904205;0.66915768;0.6692723;0.66938579;0.66949821;0.66960961;0.66971999;0.66982919;0.66993749;0.67004472;
0.67015105;0.67025638;0.67036068;0.6704641;0.67056656;0.67066807;0.6707688;0.67086852;0.6709674;0.67106533;
0.67116243;0.67125869;0.67135417;0.67144877;0.67154253;0.67163545;0.67172766;0.67181903;0.67190969;0.67199945;
0.67208868;0.67217696;0.67226458;0.67235142;0.67243755;0.67252302;0.67260784;0.67269182;0.67277515;0.67285782;
0.6729399;0.67302126;0.67310196;0.67318189;0.6732614;0.67334026;0.67341834;0.67349589;0.6735729;0.67364919;
0.67372501;0.67380011;0.67387474;0.67394876;0.67402226;0.67409515;0.67416745;0.67423922;0.67431045;0.6743812;
0.67445135;0.67452103;0.67459017;0.67465883;0.6747269;0.67479455;0.67486161;0.67492831;0.67499447;0.67506015;
0.67512536;0.67519009;0.67525434;0.67531812;0.67538154;0.67544442;0.67550689;0.67556894;0.67563057;0.67569166;
0.67575246;0.67581272;0.67587262;0.67593211;0.67599118;0.67604983;0.67610812;0.67616594;0.67622346;0.67628056;
0.6763373;0.67639369;0.67644966;0.67650521;0.6765604;0.6766153;0.67666978;0.67672384;0.67677754;0.67683107;
0.67688411;0.67693692;0.6769892;0.67704129;0.67709297;0.67714447;0.67719555;0.67724621;0.6772967;0.67734677;
0.6773966;0.67744601;0.67749518;0.677544;0.67759252;0.6776408;0.67768878;0.6777364;0.67778373;0.67783082;
0.67787772;0.6779241;0.67797035;0.6780163;0.6780619;0.67810726;0.67815238;0.67819721;0.67824179;0.67828608;
0.67833012;0.67837393;0.6784175;0.67846072;0.67850369;0.67854655;0.67858899;0.67863131;0.67867333;0.67871505;
0.67875665;0.67879796;0.67883903;0.6788798;0.67892045;0.6789608;0.67900085;0.67904085;0.67908049;0.67912;
0.67915928;0.67919821;0.67923707;0.67927563;0.67931402;0.67935222;0.67939025;0.67942798;0.67946553;0.6795029;
0.67953992;0.67957687;0.67961365;0.67965025;0.67968649;0.67972261;0.67975861;0.67979437;0.6798299;0.6798653;
0.67990047;0.67993551;0.67997032;0.68000495;0.68003947;0.68007368;0.68010777;0.68014175;0.68017554;0.6802091;
0.68024236;0.68027568;0.68030864;0.68034154;0.68037432;0.68040687;0.68043929;0.68047142;0.68050355;0.68053544;
0.68056709;0.68059874;0.68063015;0.68066138;0.68069243;0.68072343;0.68075424;0.68078482;0.68081528;0.68084574;
0.6808759;0.68090594;0.68093586;0.68096554;0.68099517;0.68102473;0.68105394;0.68108314;0.68111229;0.68114114;
0.68116987;0.68119854;0.68122697;0.68125534;0.68128353;0.68131167;0.68133956;0.68136734;0.68139505;0.68142265;
0.68145001;0.68147737;0.68150449;0.68153161;0.68155855;0.68158531;0.68161201;0.6816386;0.681665;0.68169129;
0.68171746;0.68174368;0.68176955;0.6817953;0.68182105;0.68184674;0.68187219;0.68189752;0.68192285;0.68194795;
0.68197298;0.6819979;0.68202275;0.68204737;0.68207192;0.68209648;0.6821208;0.682145;0.68216926;0.68219334;
0.68221724;0.68224108;0.68226486;0.68228847;0.68231201;0.68233544;0.6823588;0.68238199;0.68240511;0.68242812;
0.68245107;0.6824739;0.68249661;0.68251926;0.68254179;0.68256426;0.68258661;0.6826089;0.68263108;0.68265313;
0.68267506;0.682697;0.68271875;0.68274045;0.68276209;0.6827836;0.68280506;0.6828264;0.68284768;0.68286884;
0.68288988;0.68291104;0.68293184;0.68295264;0.68297344;0.68299407;0.68301469;0.68303519;0.68305558;0.68307596;
0.68309617;0.68311626;0.68313634;0.68315637;0.68317628;0.68319613;0.68321592;0.68323565;0.6832552;0.68327481;
0.68329424;       };
      };
      float_Data @[5] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="LogNew";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=9;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;2.220446e-16;2.220446e-16;4.4408921e-16;8.8817842e-16;1.5543122e-15;2.8865799e-15;5.3290705e-15;9.7699626e-15;
1.7763568e-14;3.2196468e-14;5.884182e-14;1.0724754e-13;1.9517721e-13;3.5571546e-13;6.481482e-13;1.1810553e-12;2.1520563e-12;3.9213077e-12;
7.1449513e-12;1.3018919e-11;2.3721913e-11;4.3223869e-11;7.8758333e-11;1.4350587e-10;2.6148284e-10;4.7644932e-10;8.6814045e-10;1.5818427e-09;
2.8822831e-09;5.2518212e-09;9.5693684e-09;1.743639e-08;3.1770927e-08;5.7889949e-08;1.0548152e-07;1.9219827e-07;3.5020506e-07;6.3810927e-07;
1.1626984e-06;2.1185465e-06;3.8601747e-06;7.0335136e-06;1.2815371e-05;2.3349527e-05;4.2540563e-05;7.7497709e-05;0.000141157;0.00025703054;
0.00046776567;0.00085042912;0.0015433386;0.0027916669;0.0050201681;0.0089343339;0.015616969;0.026492275;0.042882055;0.064931341;
0.090467043;0.12495463;0.15831611;0.19060041;0.22187497;0.25220102;0.28163439;0.31022617;0.33802313;0.36506826;
0.39140117;0.40776587;0.42247453;0.43578669;0.4478929;0.45895049;0.46909031;0.47842237;0.4870396;0.49502122;
0.50243509;0.50933969;0.51578581;0.52181756;0.52747369;0.5327881;0.53779089;0.5425086;0.54696482;0.55118072;
0.55517513;0.55896497;0.56256562;0.56599075;0.56925285;0.57236326;0.57533228;0.57816923;0.58088279;0.58348066;
0.5859701;0.58835775;0.59064966;0.5928514;0.5949682;0.59700483;0.59896576;0.60085499;0.60267645;0.60443372;
0.60612994;0.60761988;0.6090591;0.61045063;0.61179686;0.61309987;0.61436188;0.61558461;0.61676997;0.61791968;
0.61903524;0.62011814;0.62116987;0.62219173;0.62318498;0.62415081;0.6250903;0.62600452;0.62689453;0.62776119;
0.62860554;0.62942833;0.63023037;0.63101244;0.63177538;0.63251972;0.6332463;0.6339556;0.63464832;0.63532501;
0.63598621;0.6366325;0.63726425;0.63788211;0.63848639;0.63907766;0.63965625;0.64022255;0.64077699;0.64131993;
0.64185178;0.64237279;0.6428833;0.64338368;0.64387417;0.64435506;0.64482671;0.6452893;0.64574307;0.64618838;
0.64662534;0.64705431;0.64747542;0.6478889;0.64829493;0.64869374;0.64908552;0.64947051;0.64984876;0.65022057;
0.65058601;0.65094531;0.65129858;0.65164596;0.65198761;0.65232372;0.65265441;0.65297973;0.65329987;0.653615;
0.65392512;0.65423042;0.654531;0.654827;0.65511853;0.65540558;0.65568835;0.65596694;0.65624142;0.65651184;
0.65677834;0.65704101;0.65729988;0.6575551;0.65780669;0.65805471;0.65829933;0.65854055;0.65877843;0.65901309;
0.65924454;0.65947288;0.65969819;0.65992051;0.66013986;0.66035634;0.66057003;0.66078091;0.66098911;0.66119462;
0.66139752;0.66159785;0.66179568;0.66199106;0.662184;0.66237462;0.66256285;0.66274881;0.66293252;0.66311401;
0.66329336;0.66347057;0.66364568;0.66381872;0.66398972;0.66415882;0.66432589;0.66449112;0.66465443;0.66481584;
0.66497552;0.66513336;0.66528946;0.66544378;0.66559643;0.66574746;0.66589677;0.66604447;0.66619062;0.66633517;
0.66647822;0.66661972;0.66675973;0.66689825;0.66703534;0.667171;0.66730523;0.66743815;0.66756964;0.66769981;
0.66782868;0.66795623;0.66808254;0.66820759;0.66833133;0.66845393;0.66857529;0.66869545;0.66881442;0.66893226;
0.66904902;0.6691646;0.6692791;0.66939247;0.66950482;0.6696161;0.66972631;0.66983551;0.66994369;0.67005086;
0.67015707;0.67026228;0.67036659;0.67046988;0.67057228;0.67067373;0.67077434;0.670874;0.67097276;0.67107069;
0.67116773;0.67126393;0.6713593;0.67145383;0.67154753;0.67164046;0.67173254;0.67182386;0.67191446;0.67200422;
0.67209327;0.67218155;0.67226911;0.67235589;0.67244202;0.67252737;0.67261207;0.67269605;0.67277938;0.67286199;
0.67294401;0.67302531;0.67310596;0.67318594;0.67326534;0.67334408;0.67342222;0.6734997;0.67357659;0.67365295;
0.67372864;0.67380375;0.67387831;0.67395228;0.67402571;0.67409855;0.67417085;0.67424256;0.67431378;0.67438447;
0.67445463;0.67452425;0.67459333;0.67466193;0.67473;0.67479759;0.67486471;0.67493135;0.67499745;0.67506307;
0.67512828;0.67519295;0.67525721;0.67532098;0.67538434;0.67544723;0.67550963;0.67557162;0.67563319;0.67569435;
0.67575502;0.67581534;0.67587519;0.67593467;0.67599374;0.67605239;0.67611063;0.67616844;0.6762259;0.676283;
0.67633969;0.67639601;0.67645192;0.67650747;0.67656267;0.6766175;0.67667198;0.6767261;0.67677987;0.67683327;
0.67688632;0.67693901;0.6769914;0.67704344;0.67709512;0.67714649;0.67719752;0.67724824;0.67729867;0.67734873;
0.6773985;0.67744792;0.67749709;0.67754591;0.67759442;0.67764264;0.67769057;0.67773825;0.67778558;0.6778326;
0.67787939;0.67792588;0.67797208;0.67801797;0.67806363;0.67810899;0.67815405;0.67819887;0.67824346;0.67828774;
0.67833179;0.67837554;0.67841905;0.67846233;0.6785053;0.6785481;0.6785906;0.67863286;0.67867482;0.6787166;
0.67875814;0.67879945;0.67884046;0.67888129;0.67892188;0.67896223;0.6790024;0.67904228;0.67908198;0.67912143;
0.67916065;0.6791997;0.67923844;0.67927706;0.67931539;0.67935359;0.6793915;0.67942929;0.67946678;0.6795041;
0.67954123;0.67957819;0.6796149;0.67965144;0.67968774;0.67972386;0.6797598;0.67979556;0.67983115;0.67986649;
0.67990166;0.67993671;0.67997152;0.68000615;0.6800406;0.68007481;0.6801089;0.68014282;0.68017656;0.68021011;
0.68024349;0.68027675;0.68030977;0.68034267;0.68037534;0.68040788;0.68044025;0.68047249;0.68050456;0.68053645;
0.68056816;0.68059969;0.6806311;0.68066239;0.68069345;0.68072444;0.6807552;0.68078583;0.68081635;0.68084663;
0.68087685;0.68090689;0.68093675;0.6809665;0.68099612;0.68102556;0.68105489;0.6810841;0.68111312;0.68114197;
0.68117076;0.68119937;0.68122786;0.68125618;0.68128443;0.6813125;0.68134046;0.68136823;0.68139595;0.68142349;
0.6814509;0.6814782;0.68150538;0.68153244;0.68155932;0.68158615;0.68161279;0.68163937;0.68166578;0.68169206;
0.68171829;0.68174434;0.68177027;0.68179607;0.68182182;0.68184739;0.6818729;0.68189824;0.68192351;0.68194866;
0.6819737;0.68199861;0.68202341;0.68204808;0.68207264;0.68209714;0.68212152;0.68214577;0.68216991;0.68219393;
0.6822179;0.68224174;0.68226546;0.68228912;0.68231261;0.68233603;0.6823594;0.68238258;0.68240571;0.68242878;
0.68245167;0.68247449;0.68249726;0.68251991;0.68254244;0.68256485;0.68258721;0.6826095;0.68263161;0.68265373;
0.68267566;0.68269759;0.68271935;0.68274105;0.68276268;0.6827842;0.68280566;0.682827;0.68284822;0.68286943;
0.68289047;0.68291152;0.68293238;0.68295324;0.68297398;0.6829946;0.68301517;0.68303567;0.68305612;0.68307644;
0.68309665;0.68311679;0.68313688;0.68315691;0.68317682;0.68319666;0.68321645;0.68323612;0.68325573;0.68327522;
0.68329471;       };
      };
      float_Data @[6] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="AltAct";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=9;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1.4012985e-45;1.4012985e-45;2.8025969e-45;5.6051939e-45;1.1210388e-44;1.9618179e-44;3.5032462e-44;6.3058431e-44;1.1630777e-43;2.1159607e-43;
3.8535708e-43;7.0064923e-43;1.2779842e-42;2.3275567e-42;4.2417305e-42;7.728161e-42;1.4081648e-41;2.5657775e-41;4.6751521e-41;8.5184934e-41;
1.5521623e-40;2.8281987e-40;5.1532751e-40;9.3898067e-40;1.710921e-39;3.1174771e-39;5.6803693e-39;1.0350226e-38;1.8859196e-38;3.4363431e-38;
6.2613771e-38;1.1408884e-37;2.0788182e-37;3.7878245e-37;6.9018133e-37;1.2575826e-36;2.2914472e-36;4.1752567e-36;7.6077551e-36;1.3862126e-35;
2.5258245e-35;4.6023169e-35;8.3859038e-35;1.5279995e-34;2.7841751e-34;5.0730585e-34;9.243644e-34;1.6842887e-33;3.0689503e-33;5.591949e-33;
1.0189117e-32;1.8565637e-32;3.3828538e-32;6.1639139e-32;1.1231296e-31;2.0464597e-31;3.7288642e-31;6.7943809e-31;1.2380073e-30;2.2557789e-30;
4.1102655e-30;7.4893344e-30;1.3646351e-29;2.4865081e-29;4.5306783e-29;8.2553705e-29;1.504215e-28;2.7408371e-28;4.9940923e-28;9.099759e-28;
1.6580714e-27;3.0211797e-27;5.504906e-27;1.0030515e-26;1.8276648e-26;3.330197e-26;6.0679674e-26;1.1056472e-25;2.0146049e-25;3.6708212e-25;
6.688621e-25;1.2187368e-24;2.2206659e-24;4.0462861e-24;7.3727571e-24;1.3433935e-23;2.4478037e-23;4.4601546e-23;8.126869e-23;1.4808006e-22;
2.6981736e-22;4.9163553e-22;8.9581136e-22;1.6322622e-21;2.9741527e-21;5.4192176e-21;9.8743821e-21;1.7992157e-20;3.2783598e-20;5.9735145e-20;
1.0884369e-19;1.983246e-19;3.613682e-19;6.5845071e-19;1.1997661e-18;2.1860996e-18;3.9833023e-18;7.2579937e-18;1.3224825e-17;2.4097015e-17;
4.3907286e-17;8.0003678e-17;1.4577507e-16;2.6561746e-16;4.8398282e-16;8.8186739e-16;1.6068547e-15;2.9278575e-15;5.334863e-15;9.7206789e-15;
1.7712096e-14;3.2273294e-14;5.8805317e-14;1.0714945e-13;1.9523752e-13;3.5574321e-13;6.4820138e-13;1.1810908e-12;2.1520711e-12;3.921299e-12;
7.1450172e-12;1.301897e-11;2.3721927e-11;4.3223834e-11;7.8758354e-11;1.4350597e-10;2.6148289e-10;4.7644921e-10;8.6814039e-10;1.5818427e-09;
2.8822831e-09;5.2518216e-09;9.5693684e-09;1.743639e-08;3.1770927e-08;5.7889949e-08;1.0548153e-07;1.921983e-07;3.5020514e-07;6.3810944e-07;
1.162699e-06;2.1185488e-06;3.860182e-06;7.0335382e-06;1.2815452e-05;2.3349799e-05;4.2541469e-05;7.7500714e-05;0.00014116697;0.00025706357;
0.0004678751;0.00085079082;0.0015445302;0.0027955673;0.0050327904;0.008974364;0.015739551;0.026846314;0.043814775;0.067085758;
0.094685428;0.17684641;0.24545816;0.30351204;0.35327089;0.39639401;0.43412584;0.4674179;0.49701029;0.52348727;
0.54731613;0.56887531;0.58847433;0.6063689;0.62277204;0.6378628;0.65179265;0.66469049;0.67666703;0.68781745;
0.69822448;0.70796007;0.71708709;0.72566092;0.73373038;0.74133867;0.74852425;0.75532138;0.76176077;0.76786989;
0.77367353;0.77919406;0.78445166;0.78946477;0.79424995;0.79882246;0.80319613;0.80738372;0.81139678;0.81524605;
0.8189413;0.82249165;0.82590544;0.82919043;0.83235371;0.83540201;0.83834141;0.84117764;0.84391612;0.84656173;
0.84911913;0.85159272;0.85398644;0.85630423;0.85854959;0.86072582;0.86283612;0.86488342;0.86687052;0.86880004;
0.87067437;0.87249595;0.87426686;0.87598932;0.87766522;0.87929642;0.88088465;0.88243169;0.88393903;0.88540816;
0.88684064;0.88823771;0.88960069;0.89093089;0.89222932;0.89349729;0.89473569;0.89594567;0.89712816;0.89828408;
0.8994143;0.90051967;0.90160096;0.90265906;0.90369463;0.90470839;0.90570104;0.90667325;0.90762556;0.90855867;
0.90947312;0.91036946;0.91124821;0.91210991;0.91295505;0.91378403;0.91459739;0.91539562;0.916179;0.91694802;
0.91770303;0.91844445;0.91917264;0.91988796;0.9205907;0.92128128;0.92195988;0.92262691;0.92328262;0.92392731;
0.92456126;0.92518473;0.925798;0.92640132;0.92699486;0.92757887;0.92815369;0.9287194;0.92927629;0.92982453;
0.93036437;0.93089598;0.93141949;0.93193513;0.93244308;0.93294352;0.93343657;0.93392247;0.93440133;0.93487322;
0.93533844;0.93579704;0.9362492;0.93669504;0.93713462;0.93756819;0.93799585;0.93841761;0.93883371;0.93924427;
0.93964928;0.94004899;0.9404434;0.94083267;0.94121689;0.94159615;0.94197053;0.94234014;0.94270509;0.9430654;
0.9434213;0.94377273;0.94411981;0.9444626;0.94480127;0.94513583;0.94546634;0.94579285;0.94611555;0.94643438;
0.94674951;0.94706088;0.94736868;0.9476729;0.94797367;0.94827098;0.94856489;0.94885546;0.94914281;0.94942695;
0.94970793;0.94998574;0.95026058;0.95053238;0.95080125;0.95106715;0.95133024;0.95159054;0.95184803;0.95210278;
0.95235491;0.95260435;0.95285118;0.9530955;0.95333725;0.95357656;0.95381343;0.95404792;0.95427996;0.95450974;
0.95473719;0.95496237;0.95518535;0.95540607;0.9556247;0.95584118;0.95605552;0.95626783;0.95647806;0.95668632;
0.95689261;0.95709687;0.95729923;0.95749974;0.95769835;0.9578951;0.95809001;0.95828319;0.95847452;0.95866412;
0.95885205;0.9590382;0.95922273;0.9594056;0.9595868;0.95976645;0.95994449;0.96012092;0.96029586;0.96046925;
0.96064109;0.9608115;0.96098042;0.96114784;0.9613139;0.96147853;0.96164173;0.96180362;0.96196407;0.96212327;
0.96228105;0.96243757;0.96259278;0.96274674;0.96289945;0.96305084;0.96320105;0.96335006;0.96349782;0.96364444;
0.96378982;0.96393412;0.96407723;0.96421921;0.96436006;0.96449983;0.96463853;0.9647761;0.96491265;0.96504813;
0.96518254;0.96531594;0.96544832;0.96557969;0.9657101;0.96583951;0.96596789;0.96609539;0.96622187;0.96634746;
0.96647209;0.96659583;0.96671861;0.96684057;0.96696156;0.96708173;0.96720099;0.96731937;0.96743697;0.96755368;
0.96766955;0.96778458;0.96789885;0.96801227;0.96812493;0.96823674;0.96834779;0.96845812;0.96856761;0.96867639;
0.96878439;0.96889168;0.96899819;0.96910399;0.96920907;0.9693135;0.96941715;0.96952015;0.96962243;0.969724;
0.96982491;0.96992517;0.97002476;0.97012371;0.970222;0.97031963;0.97041661;0.97051299;0.97060871;0.97070384;
0.97079831;0.97089219;0.97098553;0.97107822;0.97117031;0.97126186;0.97135282;0.97144318;0.97153294;0.97162223;
0.97171086;0.97179902;0.97188658;0.97197366;0.97206014;0.97214609;0.97223157;0.97231644;0.97240084;0.97248477;
0.97256815;0.972651;0.97273338;0.97281528;0.97289664;0.97297758;0.97305799;0.97313792;0.97321743;0.9732964;
0.97337496;0.97345304;0.97353065;0.97360784;0.97368455;0.97376084;0.97383666;0.97391206;0.97398704;0.97406155;
0.9741357;0.97420937;0.97428262;0.97435552;0.97442794;0.9745;0.97457159;0.97464281;0.97471368;0.97478408;
0.97485411;0.97492379;0.97499305;0.97506195;0.9751305;0.97519863;0.9752664;0.97533375;0.97540081;0.97546744;
0.97553378;0.97559971;0.97566533;0.97573054;0.97579545;0.97586;0.97592419;0.97598803;0.97605157;0.97611475;
0.97617763;0.97624016;0.97630233;0.9763642;0.97642577;0.97648698;0.9765479;0.97660851;0.97666878;0.9767288;
0.97678846;0.97684783;0.9769069;0.97696567;0.97702408;0.97708225;0.97714013;0.97719771;0.97725505;0.97731203;
0.97736877;0.97742516;0.97748137;0.97753721;0.97759283;0.97764814;0.97770321;0.97775799;0.97781247;0.97786677;
0.97792071;0.97797447;0.97802794;0.97808111;0.97813404;0.97818673;0.97823918;0.97829139;0.97834331;0.97839499;
0.97844642;0.97849762;0.97854859;0.97859931;0.9786498;0.97869998;0.97874999;0.97879976;0.97884929;0.97889858;
0.9789477;0.97899652;0.97904515;0.97909355;0.97914171;0.97918963;0.97923738;0.97928488;0.97933221;0.9793793;
0.97942615;0.97947282;0.97951925;0.97956544;0.97961152;0.97965729;0.97970295;0.97974831;0.97979355;0.97983855;
0.97988337;0.97992796;0.97997236;0.98001659;0.98006058;0.98010439;0.98014802;0.98019147;0.98023474;0.98027778;
0.98032069;0.98036337;0.98040587;0.98044819;0.98049033;0.98053229;0.98057407;0.98061568;0.98065704;0.98069829;
0.98073936;0.98078024;0.98082101;0.98086154;0.9809019;0.98094213;0.98098218;0.981022;0.98106176;0.98110127;
0.98114061;0.98117983;0.98121887;0.9812578;0.98129648;0.98133504;0.98137349;0.9814117;0.98144984;0.98148775;
0.98152554;0.98156315;0.98160064;0.98163795;0.98167515;0.98171216;0.981749;0.98178571;0.98182231;0.98185873;
0.98189503;0.98193115;0.98196715;0.98200297;0.98203874;0.98207426;0.98210973;0.98214501;0.98218012;0.98221517;
0.98225003;       };
      };
      float_Data @[7] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="NewAct";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=9;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
1.4012985e-45;1.4012985e-45;2.8025969e-45;5.6051939e-45;1.1210388e-44;1.9618179e-44;3.5032462e-44;6.3058431e-44;1.1630777e-43;2.1159607e-43;
3.8535708e-43;7.0064923e-43;1.2779842e-42;2.3275567e-42;4.2417305e-42;7.728161e-42;1.4081648e-41;2.5657775e-41;4.6751521e-41;8.5184934e-41;
1.5521623e-40;2.8281987e-40;5.1532751e-40;9.3898067e-40;1.710921e-39;3.1174771e-39;5.6803693e-39;1.0350226e-38;1.8859196e-38;3.4363431e-38;
6.2613771e-38;1.1408884e-37;2.0788182e-37;3.7878245e-37;6.9018133e-37;1.2575826e-36;2.2914472e-36;4.1752567e-36;7.6077551e-36;1.3862126e-35;
2.5258245e-35;4.6023169e-35;8.3859038e-35;1.5279995e-34;2.7841751e-34;5.0730585e-34;9.243644e-34;1.6842887e-33;3.0689503e-33;5.591949e-33;
1.0189117e-32;1.8565637e-32;3.3828538e-32;6.1639139e-32;1.1231296e-31;2.0464597e-31;3.7288642e-31;6.7943809e-31;1.2380073e-30;2.2557789e-30;
4.1102655e-30;7.4893344e-30;1.3646351e-29;2.4865081e-29;4.5306783e-29;8.2553705e-29;1.504215e-28;2.7408371e-28;4.9940923e-28;9.099759e-28;
1.6580714e-27;3.0211797e-27;5.504906e-27;1.0030515e-26;1.8276648e-26;3.330197e-26;6.0679674e-26;1.1056472e-25;2.0146049e-25;3.6708212e-25;
6.688621e-25;1.2187368e-24;2.2206659e-24;4.0462861e-24;7.3727571e-24;1.3433935e-23;2.4478037e-23;4.4601546e-23;8.126869e-23;1.4808006e-22;
2.6981736e-22;4.9163553e-22;8.9581136e-22;1.6322622e-21;2.9741527e-21;5.4192176e-21;9.8743821e-21;1.7992157e-20;3.2783598e-20;5.9735145e-20;
1.0884369e-19;1.983246e-19;3.613682e-19;6.5845071e-19;1.1997661e-18;2.1860996e-18;3.9833023e-18;7.2579937e-18;1.3224825e-17;2.4097015e-17;
4.3907286e-17;8.0003678e-17;1.4577507e-16;2.6561746e-16;4.8398282e-16;8.8186739e-16;1.6068547e-15;2.9278575e-15;5.334863e-15;9.7206789e-15;
1.7712096e-14;3.2273294e-14;5.8805317e-14;1.0714945e-13;1.9523752e-13;3.5574321e-13;6.4820138e-13;1.1810908e-12;2.1520711e-12;3.921299e-12;
7.1450172e-12;1.301897e-11;2.3721927e-11;4.3223834e-11;7.8758354e-11;1.4350597e-10;2.6148289e-10;4.7644921e-10;8.6814039e-10;1.5818427e-09;
2.8822831e-09;5.2518216e-09;9.5693684e-09;1.743639e-08;3.1770927e-08;5.7889949e-08;1.0548153e-07;1.921983e-07;3.5020514e-07;6.3810944e-07;
1.162699e-06;2.1185488e-06;3.860182e-06;7.0335382e-06;1.2815452e-05;2.3349799e-05;4.2541469e-05;7.7500714e-05;0.00014116697;0.00025706357;
0.0004678751;0.00085079082;0.0015445302;0.0027955673;0.0050327904;0.008974364;0.015739551;0.026846314;0.043814775;0.067085758;
0.094685428;0.13309705;0.17153646;0.20997587;0.24841528;0.28685468;0.32529411;0.3637335;0.40217292;0.44061232;
0.47905174;0.5034551;0.5257324;0.54617894;0.56501108;0.58241236;0.59853935;0.61352682;0.62749106;0.64053303;
0.65274096;0.66419196;0.67495418;0.68508768;0.6946457;0.70367575;0.71222019;0.72031701;0.72800022;0.73530066;
0.74224603;0.74886149;0.75516981;0.76119179;0.76694638;0.77245086;0.77772111;0.78277165;0.78761578;0.79226583;
0.7967332;0.80102825;0.80516076;0.80913967;0.81297332;0.81666946;0.82023525;0.82367742;0.82700217;0.83021545;
0.83332264;0.83605611;0.83870047;0.84126091;0.8437413;0.84614539;0.84847665;0.85073829;0.85293335;0.85506487;
0.85713542;0.85914767;0.86110407;0.86300683;0.86485815;0.86666012;0.86841464;0.87012357;0.87178874;0.87341172;
0.8749941;0.87653744;0.87804317;0.87951255;0.88094699;0.88234764;0.88371575;0.88505238;0.88635862;0.88763553;
0.88888407;0.89010519;0.89129972;0.89246857;0.89361256;0.89473248;0.89582902;0.89690298;0.897955;0.8989858;
0.89999598;0.90098614;0.90195692;0.9029088;0.90384239;0.90475821;0.90565675;0.90653849;0.90740389;0.90825337;
0.90908748;0.90990651;0.91071093;0.91150117;0.91227746;0.91304028;0.91378999;0.91452682;0.9152512;0.91596335;
0.91666371;0.91735244;0.9180299;0.91869634;0.91935199;0.91999722;0.92063218;0.92125714;0.92187232;0.92247796;
0.92307431;0.92366153;0.92423987;0.92480952;0.92537063;0.92592347;0.92646819;0.92700493;0.92753386;0.92805523;
0.92856914;0.92907572;0.9295752;0.93006772;0.93055332;0.9310323;0.93150467;0.93197066;0.93243033;0.9328838;
0.93333125;0.9337728;0.93420851;0.9346385;0.93506294;0.93548191;0.9358955;0.93630379;0.93670696;0.937105;
0.93749815;0.93788636;0.93826979;0.93864846;0.9390226;0.93939215;0.93975729;0.94011801;0.94047445;0.94082665;
0.94117475;0.94151878;0.94185877;0.94219488;0.94252712;0.94285554;0.9431802;0.94350123;0.94381863;0.94413251;
0.94444287;0.94474983;0.9450534;0.94535369;0.9456507;0.94594443;0.94623506;0.94652259;0.94680703;0.94708848;
0.94736701;0.94764256;0.94791526;0.94818515;0.94845223;0.94871658;0.94897825;0.94923723;0.94949359;0.94974738;
0.94999868;0.95024747;0.95049375;0.9507376;0.95097911;0.95121825;0.95145506;0.95168954;0.95192182;0.95215189;
0.9523797;0.95260543;0.95282894;0.95305043;0.95326984;0.95348716;0.95370251;0.95391589;0.95412725;0.95433676;
0.95454431;0.95475;0.95495385;0.95515585;0.955356;0.95555443;0.95575112;0.95594603;0.95613927;0.95633078;
0.95652068;0.95670891;0.95689547;0.95708048;0.95726389;0.95744574;0.9576261;0.95780486;0.95798218;0.95815796;
0.9583323;0.95850521;0.9586767;0.95884675;0.95901543;0.95918268;0.95934862;0.95951319;0.95967644;0.95983839;
0.95999902;0.96015841;0.96031654;0.96047336;0.96062899;0.96078336;0.96093661;0.9610886;0.9612394;0.96138906;
0.96153754;0.96168494;0.96183115;0.96197629;0.96212035;0.96226329;0.96240515;0.96254593;0.9626857;0.9628244;
0.96296209;0.96309876;0.96323442;0.96336913;0.96350282;0.96363556;0.96376729;0.96389812;0.96402794;0.96415687;
0.9642849;0.96441203;0.96453822;0.96466351;0.96478796;0.96491152;0.96503419;0.96515602;0.96527702;0.96539718;
0.96551645;0.965635;0.96575266;0.96586955;0.96598566;0.96610093;0.96621549;0.96632922;0.96644223;0.96655446;
0.96666592;0.96677667;0.9668867;0.96699595;0.96710455;0.96721238;0.96731955;0.967426;0.96753174;0.96763682;
0.96774125;0.96784496;0.96794802;0.96805042;0.96815217;0.96825325;0.96835375;0.96845359;0.96855277;0.96865135;
0.96874934;0.96884668;0.96894342;0.96903956;0.96913517;0.96923012;0.96932453;0.96941829;0.96951157;0.96960419;
0.96969634;0.9697879;0.96987891;0.96996933;0.97005928;0.97014862;0.97023749;0.97032577;0.97041357;0.97050089;
0.97058761;0.97067386;0.97075963;0.97084486;0.97092962;0.9710139;0.97109765;0.97118098;0.97126377;0.97134614;
0.97142798;0.9715094;0.97159034;0.97167081;0.97175086;0.97183043;0.97190952;0.9719882;0.97206646;0.97214431;
0.97222167;0.97229862;0.97237515;0.97245121;0.97252691;0.97260219;0.97267705;0.9727515;0.97282553;0.9728992;
0.97297245;0.97304529;0.97311771;0.97318983;0.97326148;0.97333282;0.97340369;0.97347426;0.97354442;0.97361428;
0.97368366;0.97375274;0.97382146;0.97388983;0.97395784;0.97402543;0.97409272;0.97415972;0.9742263;0.97429258;
0.97435844;0.97442406;0.97448927;0.97455418;0.97461879;0.97468305;0.974747;0.9748106;0.9748739;0.97493684;
0.97499949;0.97506183;0.97512388;0.97518563;0.97524703;0.97530818;0.97536898;0.97542948;0.97548974;0.97554964;
0.9756093;0.97566861;0.97572768;0.97578645;0.97584492;0.97590315;0.97596109;0.97601873;0.97607607;0.97613317;
0.97619003;0.9762466;0.97630286;0.97635889;0.97641462;0.97647011;0.97652537;0.97658032;0.97663504;0.97668952;
0.97674376;0.9767977;0.9768514;0.97690487;0.9769581;0.97701102;0.97706378;0.97711629;0.9771685;0.97722054;
0.97727227;0.97732383;0.97737515;0.97742623;0.97747707;0.97752768;0.97757804;0.97762823;0.97767812;0.97772789;
0.97777736;0.97782665;0.97787571;0.97792453;0.97797316;0.97802156;0.97806978;0.97811776;0.97816551;0.97821307;
0.97826046;0.9783076;0.97835457;0.9784013;0.97844785;0.97849423;0.97854036;0.97858632;0.97863209;0.97867763;
0.97872299;0.97876817;0.97881317;0.97885793;0.97890258;0.97894698;0.97899121;0.97903526;0.97907913;0.97912276;
0.97916627;0.9792096;0.97925276;0.97929567;0.97933847;0.97938108;0.97942346;0.97946572;0.9795078;0.97954971;
0.97959149;0.97963303;0.9796744;0.97971565;0.97975671;0.9797976;0.97983831;0.9798789;0.97991931;0.97995955;
0.97999966;0.98003954;0.98007929;0.98011893;0.98015839;0.98019767;0.98023677;0.98027575;0.98031461;0.9803533;
0.9803918;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      name="row_indexes";
     [1001] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;432;433;434;435;436;437;438;439;
440;441;442;443;444;445;446;447;448;449;
450;451;452;453;454;455;456;457;458;459;
460;461;462;463;464;465;466;467;468;469;
470;471;472;473;474;475;476;477;478;479;
480;481;482;483;484;485;486;487;488;489;
490;491;492;493;494;495;496;497;498;499;
500;501;502;503;504;505;506;507;508;509;
510;511;512;513;514;515;516;517;518;519;
520;521;522;523;524;525;526;527;528;529;
530;531;532;533;534;535;536;537;538;539;
540;541;542;543;544;545;546;547;548;549;
550;551;552;553;554;555;556;557;558;559;
560;561;562;563;564;565;566;567;568;569;
570;571;572;573;574;575;576;577;578;579;
580;581;582;583;584;585;586;587;588;589;
590;591;592;593;594;595;596;597;598;599;
600;601;602;603;604;605;606;607;608;609;
610;611;612;613;614;615;616;617;618;619;
620;621;622;623;624;625;626;627;628;629;
630;631;632;633;634;635;636;637;638;639;
640;641;642;643;644;645;646;647;648;649;
650;651;652;653;654;655;656;657;658;659;
660;661;662;663;664;665;666;667;668;669;
670;671;672;673;674;675;676;677;678;679;
680;681;682;683;684;685;686;687;688;689;
690;691;692;693;694;695;696;697;698;699;
700;701;702;703;704;705;706;707;708;709;
710;711;712;713;714;715;716;717;718;719;
720;721;722;723;724;725;726;727;728;729;
730;731;732;733;734;735;736;737;738;739;
740;741;742;743;744;745;746;747;748;749;
750;751;752;753;754;755;756;757;758;759;
760;761;762;763;764;765;766;767;768;769;
770;771;772;773;774;775;776;777;778;779;
780;781;782;783;784;785;786;787;788;789;
790;791;792;793;794;795;796;797;798;799;
800;801;802;803;804;805;806;807;808;809;
810;811;812;813;814;815;816;817;818;819;
820;821;822;823;824;825;826;827;828;829;
830;831;832;833;834;835;836;837;838;839;
840;841;842;843;844;845;846;847;848;849;
850;851;852;853;854;855;856;857;858;859;
860;861;862;863;864;865;866;867;868;869;
870;871;872;873;874;875;876;877;878;879;
880;881;882;883;884;885;886;887;888;889;
890;891;892;893;894;895;896;897;898;899;
900;901;902;903;904;905;906;907;908;909;
910;911;912;913;914;915;916;917;918;919;
920;921;922;923;924;925;926;927;928;929;
930;931;932;933;934;935;936;937;938;939;
940;941;942;943;944;945;946;947;948;949;
950;951;952;953;954;955;956;957;958;959;
960;961;962;963;964;965;966;967;968;969;
970;971;972;973;974;975;976;977;978;979;
980;981;982;983;984;985;986;987;988;989;
990;991;992;993;994;995;996;997;998;999;
1000;     };
     last_sort_spec {
      name="last_sort_spec";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
    };
    DataTable @[1] {
     name="Nxx1Fun_orig";
     desc=;
     data {
      name="data";
      el_typ=float_Data;
      el_def=0;
      float_Data @[0] {
       name="Net";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0.001;0.0020000001;0.003;0.0040000002;0.0050000004;0.0060000005;0.0070000007;0.0080000004;0.0090000005;
0.010000001;0.011000001;0.012000001;0.013000001;0.014000001;0.015000002;0.016000001;0.017000001;0.018000001;0.019000001;
0.020000001;0.021000002;0.022000002;0.023000002;0.024000002;0.025000002;0.026000002;0.027000003;0.028000003;0.029000003;
0.030000003;0.031000003;0.032000002;0.033;0.033999998;0.034999996;0.035999995;0.036999993;0.037999991;0.03899999;
0.039999988;0.040999986;0.041999985;0.042999983;0.043999981;0.044999979;0.045999978;0.046999976;0.047999974;0.048999973;
0.049999971;0.050999969;0.051999968;0.052999966;0.053999964;0.054999962;0.055999961;0.056999959;0.057999957;0.058999956;
0.059999954;0.060999952;0.061999951;0.062999949;0.063999951;0.064999953;0.065999955;0.066999957;0.067999959;0.068999961;
0.069999963;0.070999965;0.071999967;0.072999969;0.073999971;0.074999973;0.075999975;0.076999977;0.077999979;0.078999981;
0.079999983;0.080999985;0.081999987;0.082999989;0.083999991;0.084999993;0.085999995;0.086999997;0.088;0.089000002;
0.090000004;0.091000006;0.092000008;0.09300001;0.094000012;0.095000014;0.096000016;0.097000018;0.09800002;0.099000022;
0.10000002;0.10100003;0.10200003;0.10300003;0.10400003;0.10500003;0.10600004;0.10700004;0.10800004;0.10900004;
0.11000004;0.11100005;0.11200005;0.11300005;0.11400005;0.11500005;0.11600006;0.11700006;0.11800006;0.11900006;
0.12000006;0.12100007;0.12200007;0.12300007;0.12400007;0.12500007;0.12600008;0.12700008;0.12800008;0.12900008;
0.13000008;0.13100009;0.13200009;0.13300009;0.13400009;0.13500009;0.1360001;0.1370001;0.1380001;0.1390001;
0.1400001;0.14100011;0.14200011;0.14300011;0.14400011;0.14500012;0.14600012;0.14700012;0.14800012;0.14900012;
0.15000013;0.15100013;0.15200013;0.15300013;0.15400013;0.15500014;0.15600014;0.15700014;0.15800014;0.15900014;
0.16000015;0.16100015;0.16200015;0.16300015;0.16400015;0.16500016;0.16600016;0.16700016;0.16800016;0.16900016;
0.17000017;0.17100017;0.17200017;0.17300017;0.17400017;0.17500018;0.17600018;0.17700018;0.17800018;0.17900018;
0.18000019;0.18100019;0.18200019;0.18300019;0.18400019;0.1850002;0.1860002;0.1870002;0.1880002;0.1890002;
0.19000021;0.19100021;0.19200021;0.19300021;0.19400021;0.19500022;0.19600022;0.19700022;0.19800022;0.19900022;
0.20000023;0.20100023;0.20200023;0.20300023;0.20400023;0.20500024;0.20600024;0.20700024;0.20800024;0.20900024;
0.21000025;0.21100025;0.21200025;0.21300025;0.21400025;0.21500026;0.21600026;0.21700026;0.21800026;0.21900027;
0.22000027;0.22100027;0.22200027;0.22300027;0.22400028;0.22500028;0.22600028;0.22700028;0.22800028;0.22900029;
0.23000029;0.23100029;0.23200029;0.23300029;0.2340003;0.2350003;0.2360003;0.2370003;0.2380003;0.23900031;
0.24000031;0.24100031;0.24200031;0.24300031;0.24400032;0.24500032;0.24600032;0.24700032;0.24800032;0.24900033;
0.25000033;0.25100031;0.2520003;0.25300029;0.25400028;0.25500026;0.25600025;0.25700024;0.25800022;0.25900021;
0.2600002;0.26100019;0.26200017;0.26300016;0.26400015;0.26500013;0.26600012;0.26700011;0.2680001;0.26900008;
0.27000007;0.27100006;0.27200004;0.27300003;0.27400002;0.27500001;0.27599999;0.27699998;0.27799997;0.27899995;
0.27999994;0.28099993;0.28199992;0.2829999;0.28399989;0.28499988;0.28599986;0.28699985;0.28799984;0.28899983;
0.28999981;0.2909998;0.29199979;0.29299977;0.29399976;0.29499975;0.29599974;0.29699972;0.29799971;0.2989997;
0.29999968;0.30099967;0.30199966;0.30299965;0.30399963;0.30499962;0.30599961;0.30699959;0.30799958;0.30899957;
0.30999956;0.31099954;0.31199953;0.31299952;0.3139995;0.31499949;0.31599948;0.31699947;0.31799945;0.31899944;
0.31999943;0.32099941;0.3219994;0.32299939;0.32399938;0.32499936;0.32599935;0.32699934;0.32799932;0.32899931;
0.3299993;0.33099928;0.33199927;0.33299926;0.33399925;0.33499923;0.33599922;0.33699921;0.33799919;0.33899918;
0.33999917;0.34099916;0.34199914;0.34299913;0.34399912;0.3449991;0.34599909;0.34699908;0.34799907;0.34899905;
0.34999904;0.35099903;0.35199901;0.352999;0.35399899;0.35499898;0.35599896;0.35699895;0.35799894;0.35899892;
0.35999891;0.3609989;0.36199889;0.36299887;0.36399886;0.36499885;0.36599883;0.36699882;0.36799881;0.3689988;
0.36999878;0.37099877;0.37199876;0.37299874;0.37399873;0.37499872;0.37599871;0.37699869;0.37799868;0.37899867;
0.37999865;0.38099864;0.38199863;0.38299862;0.3839986;0.38499859;0.38599858;0.38699856;0.38799855;0.38899854;
0.38999853;0.39099851;0.3919985;0.39299849;0.39399847;0.39499846;0.39599845;0.39699844;0.39799842;0.39899841;
0.3999984;0.40099838;0.40199837;0.40299836;0.40399835;0.40499833;0.40599832;0.40699831;0.40799829;0.40899828;
0.40999827;0.41099826;0.41199824;0.41299823;0.41399822;0.4149982;0.41599819;0.41699818;0.41799816;0.41899815;
0.41999814;0.42099813;0.42199811;0.4229981;0.42399809;0.42499807;0.42599806;0.42699805;0.42799804;0.42899802;
0.42999801;0.430998;0.43199798;0.43299797;0.43399796;0.43499795;0.43599793;0.43699792;0.43799791;0.43899789;
0.43999788;0.44099787;0.44199786;0.44299784;0.44399783;0.44499782;0.4459978;0.44699779;0.44799778;0.44899777;
0.44999775;0.45099774;0.45199773;0.45299771;0.4539977;0.45499769;0.45599768;0.45699766;0.45799765;0.45899764;
0.45999762;0.46099761;0.4619976;0.46299759;0.46399757;0.46499756;0.46599755;0.46699753;0.46799752;0.46899751;
0.4699975;0.47099748;0.47199747;0.47299746;0.47399744;0.47499743;0.47599742;0.47699741;0.47799739;0.47899738;
0.47999737;0.48099735;0.48199734;0.48299733;0.48399732;0.4849973;0.48599729;0.48699728;0.48799726;0.48899725;
0.48999724;0.49099723;0.49199721;0.4929972;0.49399719;0.49499717;0.49599716;0.49699715;0.49799713;0.49899712;
0.49999711;0.50099713;0.50199711;0.5029971;0.50399709;0.50499707;0.50599706;0.50699705;0.50799704;0.50899702;
0.50999701;0.510997;0.51199698;0.51299697;0.51399696;0.51499695;0.51599693;0.51699692;0.51799691;0.51899689;
0.51999688;0.52099687;0.52199686;0.52299684;0.52399683;0.52499682;0.5259968;0.52699679;0.52799678;0.52899677;
0.52999675;0.53099674;0.53199673;0.53299671;0.5339967;0.53499669;0.53599668;0.53699666;0.53799665;0.53899664;
0.53999662;0.54099661;0.5419966;0.54299659;0.54399657;0.54499656;0.54599655;0.54699653;0.54799652;0.54899651;
0.5499965;0.55099648;0.55199647;0.55299646;0.55399644;0.55499643;0.55599642;0.55699641;0.55799639;0.55899638;
0.55999637;0.56099635;0.56199634;0.56299633;0.56399632;0.5649963;0.56599629;0.56699628;0.56799626;0.56899625;
0.56999624;0.57099622;0.57199621;0.5729962;0.57399619;0.57499617;0.57599616;0.57699615;0.57799613;0.57899612;
0.57999611;0.5809961;0.58199608;0.58299607;0.58399606;0.58499604;0.58599603;0.58699602;0.58799601;0.58899599;
0.58999598;0.59099597;0.59199595;0.59299594;0.59399593;0.59499592;0.5959959;0.59699589;0.59799588;0.59899586;
0.59999585;0.60099584;0.60199583;0.60299581;0.6039958;0.60499579;0.60599577;0.60699576;0.60799575;0.60899574;
0.60999572;0.61099571;0.6119957;0.61299568;0.61399567;0.61499566;0.61599565;0.61699563;0.61799562;0.61899561;
0.61999559;0.62099558;0.62199557;0.62299556;0.62399554;0.62499553;0.62599552;0.6269955;0.62799549;0.62899548;
0.62999547;0.63099545;0.63199544;0.63299543;0.63399541;0.6349954;0.63599539;0.63699538;0.63799536;0.63899535;
0.63999534;0.64099532;0.64199531;0.6429953;0.64399529;0.64499527;0.64599526;0.64699525;0.64799523;0.64899522;
0.64999521;0.65099519;0.65199518;0.65299517;0.65399516;0.65499514;0.65599513;0.65699512;0.6579951;0.65899509;
0.65999508;0.66099507;0.66199505;0.66299504;0.66399503;0.66499501;0.665995;0.66699499;0.66799498;0.66899496;
0.66999495;0.67099494;0.67199492;0.67299491;0.6739949;0.67499489;0.67599487;0.67699486;0.67799485;0.67899483;
0.67999482;0.68099481;0.6819948;0.68299478;0.68399477;0.68499476;0.68599474;0.68699473;0.68799472;0.68899471;
0.68999469;0.69099468;0.69199467;0.69299465;0.69399464;0.69499463;0.69599462;0.6969946;0.69799459;0.69899458;
0.69999456;0.70099455;0.70199454;0.70299453;0.70399451;0.7049945;0.70599449;0.70699447;0.70799446;0.70899445;
0.70999444;0.71099442;0.71199441;0.7129944;0.71399438;0.71499437;0.71599436;0.71699435;0.71799433;0.71899432;
0.71999431;0.72099429;0.72199428;0.72299427;0.72399426;0.72499424;0.72599423;0.72699422;0.7279942;0.72899419;
0.72999418;0.73099416;0.73199415;0.73299414;0.73399413;0.73499411;0.7359941;0.73699409;0.73799407;0.73899406;
0.73999405;0.74099404;0.74199402;0.74299401;0.743994;0.74499398;0.74599397;0.74699396;0.74799395;0.74899393;
0.74999392;0.75099391;0.75199389;0.75299388;0.75399387;0.75499386;0.75599384;0.75699383;0.75799382;0.7589938;
0.75999379;0.76099378;0.76199377;0.76299375;0.76399374;0.76499373;0.76599371;0.7669937;0.76799369;0.76899368;
0.76999366;0.77099365;0.77199364;0.77299362;0.77399361;0.7749936;0.77599359;0.77699357;0.77799356;0.77899355;
0.77999353;0.78099352;0.78199351;0.7829935;0.78399348;0.78499347;0.78599346;0.78699344;0.78799343;0.78899342;
0.78999341;0.79099339;0.79199338;0.79299337;0.79399335;0.79499334;0.79599333;0.79699332;0.7979933;0.79899329;
0.79999328;0.80099326;0.80199325;0.80299324;0.80399323;0.80499321;0.8059932;0.80699319;0.80799317;0.80899316;
0.80999315;0.81099313;0.81199312;0.81299311;0.8139931;0.81499308;0.81599307;0.81699306;0.81799304;0.81899303;
0.81999302;0.82099301;0.82199299;0.82299298;0.82399297;0.82499295;0.82599294;0.82699293;0.82799292;0.8289929;
0.82999289;0.83099288;0.83199286;0.83299285;0.83399284;0.83499283;0.83599281;0.8369928;0.83799279;0.83899277;
0.83999276;0.84099275;0.84199274;0.84299272;0.84399271;0.8449927;0.84599268;0.84699267;0.84799266;0.84899265;
0.84999263;0.85099262;0.85199261;0.85299259;0.85399258;0.85499257;0.85599256;0.85699254;0.85799253;0.85899252;
0.8599925;0.86099249;0.86199248;0.86299247;0.86399245;0.86499244;0.86599243;0.86699241;0.8679924;0.86899239;
0.86999238;0.87099236;0.87199235;0.87299234;0.87399232;0.87499231;0.8759923;0.87699229;0.87799227;0.87899226;
0.87999225;0.88099223;0.88199222;0.88299221;0.8839922;0.88499218;0.88599217;0.88699216;0.88799214;0.88899213;
0.88999212;0.89099211;0.89199209;0.89299208;0.89399207;0.89499205;0.89599204;0.89699203;0.89799201;0.898992;
0.89999199;0.90099198;0.90199196;0.90299195;0.90399194;0.90499192;0.90599191;0.9069919;0.90799189;0.90899187;
0.90999186;0.91099185;0.91199183;0.91299182;0.91399181;0.9149918;0.91599178;0.91699177;0.91799176;0.91899174;
0.91999173;0.92099172;0.92199171;0.92299169;0.92399168;0.92499167;0.92599165;0.92699164;0.92799163;0.92899162;
0.9299916;0.93099159;0.93199158;0.93299156;0.93399155;0.93499154;0.93599153;0.93699151;0.9379915;0.93899149;
0.93999147;0.94099146;0.94199145;0.94299144;0.94399142;0.94499141;0.9459914;0.94699138;0.94799137;0.94899136;
0.94999135;0.95099133;0.95199132;0.95299131;0.95399129;0.95499128;0.95599127;0.95699126;0.95799124;0.95899123;
0.95999122;0.9609912;0.96199119;0.96299118;0.96399117;0.96499115;0.96599114;0.96699113;0.96799111;0.9689911;
0.96999109;0.97099108;0.97199106;0.97299105;0.97399104;0.97499102;0.97599101;0.976991;0.97799098;0.97899097;
0.97999096;0.98099095;0.98199093;0.98299092;0.98399091;0.98499089;0.98599088;0.98699087;0.98799086;0.98899084;
0.98999083;0.99099082;0.9919908;0.99299079;0.99399078;0.99499077;0.99599075;0.99699074;0.99799073;0.99899071;
0.9999907;       };
      };
      float_Data @[1] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_1": value=1: val_type_fixed=0: };
	UserDataItem @[1] {name="MIN": value=0: val_type_fixed=0: };
	UserDataItem @[2] {name="MAX": value=1: val_type_fixed=0: };
       };
       name="Act";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;1.2625271e-06;6.3453572e-06;2.2464465e-05;6.8229398e-05;
0.00018756278;0.00047524594;0.0011178916;0.0024497164;0.0050128135;0.0095981881;0.01723302;0.02908163;0.046250649;0.069529928;
0.099143595;0.13460347;0.17472589;0.21783367;0.26206091;0.30567509;0.34731579;0.38610178;0.42161405;0.45379475;
0.48282045;0.50898689;0.53262627;0.55405933;0.57357234;0.59141248;0.60778838;0.62287611;0.63682473;0.64976114;
0.66179323;0.67301422;0.68350452;0.69333404;0.70256454;0.71124923;0.71943605;0.72716689;0.73447925;0.7414065;
0.74797821;0.75422198;0.76016152;0.76581854;0.77121305;0.77636307;0.78128493;0.78599358;0.79050267;0.79482442;
0.79897082;0.80295211;0.80677783;0.81045729;0.81399864;0.81740934;0.82069695;0.82386768;0.8269279;0.82988304;
0.83273864;0.83549958;0.83817065;0.84075606;0.84325987;0.84568602;0.84803796;0.85031891;0.85253239;0.85468107;
0.85676813;0.85879564;0.86076665;0.86268306;0.86454743;0.86636174;0.86812794;0.86984789;0.87152362;0.87315649;
0.87474853;0.87630075;0.87781513;0.87929267;0.88073486;0.88214308;0.88351816;0.88486147;0.88617438;0.88745725;
0.88871169;0.88993853;0.89113843;0.89231247;0.89346129;0.89458597;0.8956871;0.89676541;0.89782161;0.89885634;
0.89987034;0.9008643;0.9018386;0.90279394;0.90373075;0.90464979;0.90555137;0.90643609;0.90730417;0.90815657;
0.90899324;0.90981477;0.91062176;0.91141421;0.91219276;0.91295779;0.9137097;0.9144485;0.91517496;0.91588885;
0.91659117;0.91728163;0.91796076;0.91862905;0.91928619;0.91993308;0.92056936;0.92119586;0.92181247;0.92241955;
0.92301732;0.92360568;0.9241854;0.92475617;0.92531848;0.92587256;0.92641824;0.92695612;0.92748606;0.92800844;
0.92852342;0.92903101;0.92953146;0.93002486;0.93051142;0.93099105;0.93146449;0.93193114;0.93239164;0.93284577;
0.93329406;0.93373632;0.93417293;0.93460351;0.93502879;0.93544817;0.9358626;0.93627143;0.93667519;0.93707389;
0.93746746;0.93785644;0.93824023;0.93861967;0.93899417;0.93936425;0.93972975;0.94009107;0.94044799;0.94080061;
0.94114923;0.94149357;0.94183409;0.94217062;0.94250327;0.94283217;0.94315732;0.94347864;0.94379634;0.94411051;
0.94442147;0.94472861;0.94503254;0.94533318;0.94563055;0.9459247;0.94621557;0.9465034;0.94678825;0.94707;
0.94734854;0.94762456;0.94789761;0.9481675;0.94843501;0.94869971;0.94896156;0.94922096;0.94947737;0.94973153;
0.94998306;0.95023209;0.95047855;0.95072263;0.95096427;0.9512037;0.95144075;0.95167547;0.95190787;0.95213825;
0.95236617;0.95259196;0.95281571;0.95303738;0.95325696;0.95347458;0.95369023;0.95390356;0.95411515;0.95432472;
0.9545325;0.95473844;0.95494235;0.95514446;0.95534486;0.95554334;0.95574027;0.9559353;0.95612872;0.95632035;
0.95651031;0.9566986;0.95688552;0.95707059;0.95725405;0.95743603;0.95761645;0.95779538;0.95797282;0.9581486;
0.95832336;0.95849627;0.95866787;0.95883799;0.95900673;0.9591741;0.95934033;0.95950484;0.95966816;0.95983022;
0.95999098;0.96015054;0.96030867;0.96046543;0.9606213;0.96077585;0.96092898;0.96108109;0.96123213;0.96138179;
0.96153045;0.96167779;0.96182412;0.96196944;0.96211356;0.96225661;0.96239847;0.96253932;0.96267915;0.96281797;
0.96295571;0.96309245;0.96322823;0.96336299;0.96349669;0.96362948;0.96376121;0.96389216;0.96402216;0.96415108;
0.96427917;0.96440631;0.96453261;0.96465784;0.96478254;0.96490598;0.96502876;0.96515065;0.96527183;0.96539193;
0.96551138;0.96562982;0.96574759;0.96586448;0.96598065;0.96609592;0.9662106;0.96632427;0.96643734;0.96654969;
0.96666127;0.96677214;0.96688223;0.96699148;0.96710002;0.96720803;0.9673152;0.96742153;0.96752727;0.96763253;
0.96773696;0.96784079;0.96794373;0.96804619;0.96814799;0.96824932;0.96834981;0.96844959;0.96854889;0.96864754;
0.96874559;0.96884286;0.96893966;0.96903586;0.96913141;0.96922642;0.96932089;0.96941471;0.96950793;0.96960068;
0.96969301;0.96978438;0.96987551;0.96996599;0.97005588;0.97014529;0.97023416;0.97032249;0.97041029;0.97049761;
0.97058439;0.9706707;0.97075653;0.97084171;0.97092646;0.97101086;0.97109449;0.97117794;0.97126079;0.97134298;
0.97142506;0.97150654;0.97158742;0.97166783;0.97174793;0.97182757;0.97190654;0.97198534;0.97206354;0.97214144;
0.97221893;0.97229576;0.97237241;0.97244841;0.97252417;0.97259957;0.97267455;0.97274894;0.97282308;0.97289675;
0.97296983;0.97304273;0.97311532;0.97318745;0.97325903;0.97333026;0.97340131;0.97347188;0.97354198;0.97361183;
0.97368133;0.97375041;0.97381914;0.9738875;0.97395563;0.97402316;0.97409052;0.97415751;0.97422427;0.97429049;
0.97435623;0.97442198;0.97448707;0.97455204;0.97461671;0.97468102;0.97474498;0.97480845;0.97487193;0.97493488;
0.97499746;0.97505987;0.97512192;0.97518361;0.975245;0.97530615;0.97536713;0.97542751;0.97548771;0.97554785;
0.9756074;0.97566676;0.97572583;0.97578448;0.97584301;0.97590142;0.97595912;0.97601694;0.97607446;0.97613144;
0.97618824;0.97624487;0.97630107;0.97635716;0.97641295;0.9764685;0.97652364;0.97657859;0.97663337;0.97668785;
0.97674197;0.97679603;0.97684968;0.97690326;0.97695655;0.97700948;0.97706217;0.97711474;0.97716695;0.97721893;
0.97727072;0.97732252;0.97737372;0.97742462;0.97747558;0.97752631;0.97757667;0.97762674;0.97767687;0.97772646;
0.97777599;0.97782522;0.9778744;0.97792315;0.97797173;0.97802025;0.97806841;0.97811627;0.97816426;0.97821188;
0.97825921;0.97830635;0.97835338;0.97840005;0.97844666;0.97849303;0.97853917;0.97858512;0.97863084;0.97867632;
0.9787218;0.97876698;0.97881186;0.97885674;0.97890127;0.97894579;0.97898996;0.97903407;0.97907794;0.97912163;
0.97916502;0.97920847;0.97925156;0.97929448;0.97933728;0.97937983;0.97942239;0.97946465;0.97950667;0.97954863;
0.9795903;0.97963208;0.97967333;0.97971451;0.97975564;0.97979653;0.97983736;0.97987795;0.97991824;0.97995865;
0.97999871;0.9800384;0.98007822;0.98011792;0.98015726;0.9801966;0.98023582;0.9802748;0.98031354;0.9803524;
0.98039085;       };
      };
      float_Data @[2] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="Linear";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{        };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=8;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0.009971261;0.019971132;0.029971004;0.039970875;0.049970746;0.059970617;0.069970489;0.07997036;0.089970231;
0.099970102;0.10996997;0.11996984;0.12996972;0.13996959;0.14996946;0.15996933;0.1699692;0.17996907;0.18996894;
0.19996881;0.20996869;0.21996856;0.22996843;0.2399683;0.24996817;0.25996804;0.26996791;0.27996778;0.28996766;
0.29996753;0.3099674;0.31996727;0.32996714;0.33996701;0.34996688;0.35996675;0.36996663;0.3799665;0.38996637;
0.39996624;0.40996611;0.41996598;0.42996585;0.43996572;0.4499656;0.45996547;0.46996534;0.47996521;0.48996508;
0.49996495;0.50996482;0.51996469;0.52996457;0.53996444;0.54996431;0.55996418;0.56996405;0.57996392;0.58996379;
0.59996367;0.60996354;0.61996341;0.62996328;0.63996315;0.64996302;0.65996289;0.66996276;0.67996264;0.68996251;
0.69996238;0.70996225;0.71996212;0.72996199;0.73996186;0.74996173;0.75996161;0.76996148;0.77996135;0.78996122;
0.79996109;0.80996096;0.81996083;0.8299607;0.83996058;0.84996045;0.85996032;0.86996019;0.87996006;0.88995993;
0.8999598;0.90995967;0.91995955;0.92995942;0.93995929;0.94995916;0.95995903;0.9699589;0.97995877;0.98995864;
0.99995852;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;1;1;1;1;1;1;1;1;1;
1;       };
      };
      float_Data @[3] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="NewAct";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=9;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;       };
      };
      float_Data @[4] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="NoNoise";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=9;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;       };
      };
      float_Data @[5] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="LogAct";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=9;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;       };
      };
      float_Data @[6] {
       UserDataItem_List @*(.user_data_) {
	name="UserDataItem_List_1";
	el_typ=UserDataItem;
	el_def=0;
	UserDataItem @[0] {name="PLOT_2": value=1: val_type_fixed=0: };
       };
       name="LogNew";
       col_flags=SAVE_DATA|AUTO_WIDTH;
       is_matrix=0;
       cell_geom{ 1;       };
       calc_expr {
	expr=;
       };
       dim_names {
	name="dim_names";
       [0]        };
       width=9;
       matrix_col_width=10;
       ar {
	name="ar";
       [1001] 0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;0;0;0;0;0;0;0;0;0;
0;       };
      };
     };
     data_flags=SAVE_ROWS|AUTO_CALC;
     auto_load=NO_AUTO_LOAD;
     auto_load_file=;
     row_height=1;
     max_col_width=50;
     keygen 4 0=0;
     row_indexes {
      name="row_indexes";
     [1001] 0;1;2;3;4;5;6;7;8;9;
10;11;12;13;14;15;16;17;18;19;
20;21;22;23;24;25;26;27;28;29;
30;31;32;33;34;35;36;37;38;39;
40;41;42;43;44;45;46;47;48;49;
50;51;52;53;54;55;56;57;58;59;
60;61;62;63;64;65;66;67;68;69;
70;71;72;73;74;75;76;77;78;79;
80;81;82;83;84;85;86;87;88;89;
90;91;92;93;94;95;96;97;98;99;
100;101;102;103;104;105;106;107;108;109;
110;111;112;113;114;115;116;117;118;119;
120;121;122;123;124;125;126;127;128;129;
130;131;132;133;134;135;136;137;138;139;
140;141;142;143;144;145;146;147;148;149;
150;151;152;153;154;155;156;157;158;159;
160;161;162;163;164;165;166;167;168;169;
170;171;172;173;174;175;176;177;178;179;
180;181;182;183;184;185;186;187;188;189;
190;191;192;193;194;195;196;197;198;199;
200;201;202;203;204;205;206;207;208;209;
210;211;212;213;214;215;216;217;218;219;
220;221;222;223;224;225;226;227;228;229;
230;231;232;233;234;235;236;237;238;239;
240;241;242;243;244;245;246;247;248;249;
250;251;252;253;254;255;256;257;258;259;
260;261;262;263;264;265;266;267;268;269;
270;271;272;273;274;275;276;277;278;279;
280;281;282;283;284;285;286;287;288;289;
290;291;292;293;294;295;296;297;298;299;
300;301;302;303;304;305;306;307;308;309;
310;311;312;313;314;315;316;317;318;319;
320;321;322;323;324;325;326;327;328;329;
330;331;332;333;334;335;336;337;338;339;
340;341;342;343;344;345;346;347;348;349;
350;351;352;353;354;355;356;357;358;359;
360;361;362;363;364;365;366;367;368;369;
370;371;372;373;374;375;376;377;378;379;
380;381;382;383;384;385;386;387;388;389;
390;391;392;393;394;395;396;397;398;399;
400;401;402;403;404;405;406;407;408;409;
410;411;412;413;414;415;416;417;418;419;
420;421;422;423;424;425;426;427;428;429;
430;431;432;433;434;435;436;437;438;439;
440;441;442;443;444;445;446;447;448;449;
450;451;452;453;454;455;456;457;458;459;
460;461;462;463;464;465;466;467;468;469;
470;471;472;473;474;475;476;477;478;479;
480;481;482;483;484;485;486;487;488;489;
490;491;492;493;494;495;496;497;498;499;
500;501;502;503;504;505;506;507;508;509;
510;511;512;513;514;515;516;517;518;519;
520;521;522;523;524;525;526;527;528;529;
530;531;532;533;534;535;536;537;538;539;
540;541;542;543;544;545;546;547;548;549;
550;551;552;553;554;555;556;557;558;559;
560;561;562;563;564;565;566;567;568;569;
570;571;572;573;574;575;576;577;578;579;
580;581;582;583;584;585;586;587;588;589;
590;591;592;593;594;595;596;597;598;599;
600;601;602;603;604;605;606;607;608;609;
610;611;612;613;614;615;616;617;618;619;
620;621;622;623;624;625;626;627;628;629;
630;631;632;633;634;635;636;637;638;639;
640;641;642;643;644;645;646;647;648;649;
650;651;652;653;654;655;656;657;658;659;
660;661;662;663;664;665;666;667;668;669;
670;671;672;673;674;675;676;677;678;679;
680;681;682;683;684;685;686;687;688;689;
690;691;692;693;694;695;696;697;698;699;
700;701;702;703;704;705;706;707;708;709;
710;711;712;713;714;715;716;717;718;719;
720;721;722;723;724;725;726;727;728;729;
730;731;732;733;734;735;736;737;738;739;
740;741;742;743;744;745;746;747;748;749;
750;751;752;753;754;755;756;757;758;759;
760;761;762;763;764;765;766;767;768;769;
770;771;772;773;774;775;776;777;778;779;
780;781;782;783;784;785;786;787;788;789;
790;791;792;793;794;795;796;797;798;799;
800;801;802;803;804;805;806;807;808;809;
810;811;812;813;814;815;816;817;818;819;
820;821;822;823;824;825;826;827;828;829;
830;831;832;833;834;835;836;837;838;839;
840;841;842;843;844;845;846;847;848;849;
850;851;852;853;854;855;856;857;858;859;
860;861;862;863;864;865;866;867;868;869;
870;871;872;873;874;875;876;877;878;879;
880;881;882;883;884;885;886;887;888;889;
890;891;892;893;894;895;896;897;898;899;
900;901;902;903;904;905;906;907;908;909;
910;911;912;913;914;915;916;917;918;919;
920;921;922;923;924;925;926;927;928;929;
930;931;932;933;934;935;936;937;938;939;
940;941;942;943;944;945;946;947;948;949;
950;951;952;953;954;955;956;957;958;959;
960;961;962;963;964;965;966;967;968;969;
970;971;972;973;974;975;976;977;978;979;
980;981;982;983;984;985;986;987;988;989;
990;991;992;993;994;995;996;997;998;999;
1000;     };
     last_sort_spec {
      name="last_sort_spec";
      ops {
       name="ops";
       el_typ=DataSortEl;
       el_def=0;
      };
     };
     row_with_hilite=-1;
    };
   };
   objs_vars {
    name="objs_vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="nxx1_fun";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.programs[0].objs[0]$$;
     object_scope=NULL;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="nxx1_fun_orig";
     var_type=T_Object;
     object_type=DataTable;
     object_val=.programs[0].objs[1]$$;
     object_scope=NULL;
     objs_ptr=1;
     flags=NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
   };
   types {
    name="types";
    el_typ=DynEnumType;
    el_def=0;
   };
   args {
    name="args";
    el_typ=ProgVar;
    el_def=0;
   };
   vars {
    name="vars";
    el_typ=ProgVar;
    el_def=0;
    ProgVar @[0] {
     name="act_thr";
     var_type=T_Real;
     real_val=0.5;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[1] {
     name="first_thr";
     var_type=T_Real;
     real_val=0;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[2] {
     name="gain";
     var_type=T_Real;
     real_val=100;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[3] {
     name="nvar";
     var_type=T_Real;
     real_val=0.005;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[4] {
     name="sig_mult";
     var_type=T_Real;
     real_val=0.33;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[5] {
     name="sig_mult_pow";
     var_type=T_Real;
     real_val=0.8;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[6] {
     name="sig_gain";
     var_type=T_Real;
     real_val=3;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="sigmoid gain";
     init_from=NULL;
    };
    ProgVar @[7] {
     name="leabra_unit_spec_2";
     var_type=T_Object;
     object_type=LeabraUnitSpec;
     object_val=.networks[0].specs[0]$$;
     object_scope=NULL;
     objs_ptr=0;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[8] {
     name="gain_cor_range";
     var_type=T_Real;
     real_val=10;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="range for correcting gain to deal with convolution";
     init_from=NULL;
    };
    ProgVar @[9] {
     name="gain_cor";
     var_type=T_Real;
     real_val=0.1;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="how much to correct gain to compensate for convolution";
     init_from=NULL;
    };
    ProgVar @[10] {
     name="sig_thr";
     var_type=T_Real;
     real_val=0;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc=;
     init_from=NULL;
    };
    ProgVar @[11] {
     name="interp_range";
     var_type=T_Real;
     real_val=0.01;
     object_scope=NULL;
     flags=CTRL_PANEL|NULL_CHECK|SAVE_VAL|USED|EDIT_VAL;
     reference=0;
     desc="range for using linear interpolation right above 0";
     init_from=NULL;
    };
   };
   functions {
    name="functions";
    el_typ=Function;
    el_def=0;
    Function @[0] {
     name="xx1";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="xx1(double x) returns: double";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name="args";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="x";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
     fun_code {
      name="fun_code";
      el_typ=ProgCode;
      el_def=0;
      LocalVars @[0] {
       name="LocalVars_LocalVars0vars";
       desc=;
       flags=0;
       code_string=;
       local_vars {
	name="local_vars";
	el_typ=ProgVar;
	el_def=0;
       };
      };
      ReturnExpr @[1] {
       name="ReturnExpr_returnx10x";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="return x / (1.0 + x)";
       expr {
	expr="x / (1.0 + x)";
       };
      };
     };
    };
    Function @[1] {
     name="xx1_gain_mod";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="xx1_gain_mod(double x) returns: double";
     return_type=T_Real;
     object_type=taOBase;
     args {
      name="args";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="x";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|FUN_ARG|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
     fun_code {
      name="fun_code";
      el_typ=ProgCode;
      el_def=0;
      LocalVars @[0] {
       name="LocalVars_LocalVars2vars";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="LocalVars (2 vars)";
       local_vars {
	name="local_vars";
	el_typ=ProgVar;
	el_def=0;
	ProgVar @[0] {
	 name="gain_cor_fact";
	 var_type=T_Real;
	 real_val=0;
	 object_scope=NULL;
	 flags=LOCAL_VAR|USED|EDIT_VAL;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
	ProgVar @[1] {
	 name="new_gain";
	 var_type=T_Real;
	 real_val=0;
	 object_scope=NULL;
	 flags=LOCAL_VAR|USED|EDIT_VAL;
	 reference=0;
	 desc=;
	 init_from=NULL;
	};
       };
      };
      AssignExpr @[1] {
       name="AssignExpr_gaincorfactgainc_vargaincorrange";
       desc="how close we are to end of this range, normalized by range";
       flags=CAN_REVERT_TO_CODE;
       code_string="gain_cor_fact = (gain_cor_range - (x/nvar)) / gain_cor_range";
       result_var=.programs[0].functions[1].fun_code[0].local_vars[0]$$;
       expr {
	expr="(gain_cor_range - (x/nvar)) / gain_cor_range";
       };
      };
      If @[2] {
       name="If_ifgaincorfact0";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="if (gain_cor_fact < 0)";
       cond {
	expr="gain_cor_fact < 0";
       };
       true_code {
	name="true_code";
	el_typ=ProgCode;
	el_def=0;
	ReturnExpr @[0] {
	 name="ReturnExpr_returnxx1gainx";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="return xx1(gain*x)";
	 expr {
	  expr="xx1(gain*x)";
	 };
	};
       };
      };
      AssignExpr @[3] {
       name="AssignExpr_newgaingain10gaincorgaincorfact";
       desc="reduce gain";
       flags=CAN_REVERT_TO_CODE;
       code_string="new_gain = gain * (1.0-gain_cor* gain_cor_fact)";
       result_var=.programs[0].functions[1].fun_code[0].local_vars[1]$$;
       expr {
	expr="gain * (1.0-gain_cor* gain_cor_fact)";
       };
      };
      ReturnExpr @[4] {
       name="ReturnExpr_returnxx1newgainx";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="return xx1(new_gain * x)";
       expr {
	expr="xx1(new_gain * x)";
       };
      };
     };
    };
   };
   init_code {
    name="init_code";
    el_typ=ProgCode;
    el_def=0;
   };
   prog_code {
    name="prog_code";
    el_typ=ProgCode;
    el_def=0;
    LocalVars @[0] {
     name="LocalVars_LocalVars15vars";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="LocalVars (15 vars)";
     local_vars {
      name="local_vars";
      el_typ=ProgVar;
      el_def=0;
      ProgVar @[0] {
       name="i";
       var_type=T_Int;
       int_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[1] {
       name="netin";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[2] {
       name="gain_x";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[3] {
       name="no_noise";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[4] {
       name="act";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[5] {
       name="orig_act";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[6] {
       name="log_act";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[7] {
       name="log_new";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[8] {
       name="net_thr";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[9] {
       name="sig_mult_eff";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[10] {
       name="net_thr_nvars";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[11] {
       name="alt_act";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[12] {
       name="prop_fact";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[13] {
       name="val_at_interp";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
      ProgVar @[14] {
       name="sig_val_at_0";
       var_type=T_Real;
       real_val=0;
       object_scope=NULL;
       flags=LOCAL_VAR|USED|EDIT_VAL;
       reference=0;
       desc=;
       init_from=NULL;
      };
     };
    };
    If @[1] {
     name="If_ifgainleabraunit_nitspec2actnvar";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="if (gain != leabra_unit_spec_2.act.gain || nvar !=  leabra_unit_spec_2.act.nvar)";
     cond {
      expr="gain != leabra_unit_spec_2.act.gain || nvar !=  leabra_unit_spec_2.act.nvar";
     };
     true_code {
      name="true_code";
      el_typ=ProgCode;
      el_def=0;
      MemberAssign @[0] {
       name="MemberAssign_leabraunitspec2actgaingain";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="leabra_unit_spec_2.act.gain = gain";
       obj=.programs[0].vars[7]$$;
       path="act.gain";
       expr {
	expr="gain";
       };
       update_after=1;
      };
      MemberAssign @[1] {
       name="MemberAssign_leabraunitspec2actnvarnvar";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="leabra_unit_spec_2.act.nvar = nvar";
       obj=$.programs[0].vars[7]$;
       path="act.nvar";
       expr {
	expr="nvar";
       };
       update_after=1;
      };
      MethodCall @[2] {
       name="MethodCall_leabraunitspec2G_xx1fun501001510";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="leabra_unit_spec_2->GraphActFmNetFun(nxx1_fun, .5, 0, 1, .001, .5, 10)";
       result_var=NULL;
       obj=$.programs[0].vars[7]$;
       method=LeabraUnitSpec::GraphActFmNetFun;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
	ProgArg @[0] {
	 arg_type=DataTable_ptr;
	 type="DataTable*";
	 name="graph_data";
	 required=1;
	 def_val=;
	 prev_expr=;
	 expr {
	  expr="nxx1_fun";
	 };
	};
	ProgArg @[1] {
	 arg_type=float;
	 type="float";
	 name="g_i";
	 required=0;
	 def_val=".5";
	 prev_expr=;
	 expr {
	  expr=".5";
	 };
	};
	ProgArg @[2] {
	 arg_type=float;
	 type="float";
	 name="min";
	 required=0;
	 def_val="0.0";
	 prev_expr=;
	 expr {
	  expr="0";
	 };
	};
	ProgArg @[3] {
	 arg_type=float;
	 type="float";
	 name="max";
	 required=0;
	 def_val="1.0";
	 prev_expr=;
	 expr {
	  expr="1";
	 };
	};
	ProgArg @[4] {
	 arg_type=float;
	 type="float";
	 name="incr";
	 required=0;
	 def_val=".001";
	 prev_expr=;
	 expr {
	  expr=".001";
	 };
	};
	ProgArg @[5] {
	 arg_type=float;
	 type="float";
	 name="g_e_thr";
	 required=0;
	 def_val="0.5";
	 prev_expr=;
	 expr {
	  expr=".5";
	 };
	};
	ProgArg @[6] {
	 arg_type=float;
	 type="float";
	 name="lin_gain";
	 required=0;
	 def_val="10";
	 prev_expr=;
	 expr {
	  expr="10";
	 };
	};
       };
       meth_sig="void GraphActFmNetFun(DataTable* graph_data, float g_i = .5, float min = 0.0, float max = 1.0, float incr = .001, float g_e_thr = 0.5, float lin_gain = 10)";
       meth_desc=" graph the activation function as a function of net input -- this is the direct activation function, computed relative to the g_e_thr threshold value provided -- a linear comparison with lin_gain slope is also provided for reference -- always computed as lin_gain * (net - g_e_thr) (NULL = new graph data)";
      };
     };
    };
    AssignExpr @[2] {
     name="AssignExpr_sigmulteffpowgai_gmultpowsigmult";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="sig_mult_eff = pow(gain * nvar, sig_mult_pow) * sig_mult";
     result_var=.programs[0].prog_code[0].local_vars[9]$$;
     expr {
      expr="pow(gain * nvar, sig_mult_pow) * sig_mult";
     };
    };
    AssignExpr @[3] {
     name="AssignExpr_sigvalat005sigmulteff";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="sig_val_at_0 = 0.5 * sig_mult_eff";
     result_var=.programs[0].prog_code[0].local_vars[14]$$;
     expr {
      expr="0.5 * sig_mult_eff";
     };
    };
    AssignExpr @[4] {
     name="AssignExpr_valatinterpxx1gainmodinterprange";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="val_at_interp = xx1_gain_mod(interp_range)";
     result_var=.programs[0].prog_code[0].local_vars[13]$$;
     expr {
      expr="xx1_gain_mod(interp_range)";
     };
    };
    ForLoop @[5] {
     name="ForLoop_fori0inxx1funrowsi";
     desc=;
     flags=CAN_REVERT_TO_CODE;
     code_string="for (i=0; i<nxx1_fun.rows; i++)";
     loop_code {
      name="loop_code";
      el_typ=ProgCode;
      el_def=0;
      AssignExpr @[0] {
       name="AssignExpr_netinnxx1funNeti";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="netin = nxx1_fun[\"Net\"][i]";
       result_var=.programs[0].prog_code[0].local_vars[1]$$;
       expr {
	expr="nxx1_fun[\"Net\"][i]";
       };
      };
      AssignExpr @[1] {
       name="AssignExpr_netthrnetinactthr";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="net_thr = netin - act_thr";
       result_var=.programs[0].prog_code[0].local_vars[8]$$;
       expr {
	expr="netin - act_thr";
       };
      };
      AssignExpr @[2] {
       name="AssignExpr_gainxgainnetthr";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="gain_x = gain * net_thr";
       result_var=.programs[0].prog_code[0].local_vars[2]$$;
       expr {
	expr="gain * net_thr";
       };
      };
      AssignExpr @[3] {
       name="AssignExpr_netthrnvarsnetthrnvar";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="net_thr_nvars = net_thr / nvar";
       result_var=.programs[0].prog_code[0].local_vars[10]$$;
       expr {
	expr="net_thr / nvar";
       };
      };
      If @[4] {
       name="If_ifgainx0";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="if (gain_x < 0)";
       cond {
	expr="gain_x < 0";
       };
       true_code {
	name="true_code";
	el_typ=ProgCode;
	el_def=0;
	AssignExpr @[0] {
	 name="AssignExpr_nonoise0";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="no_noise = 0";
	 result_var=.programs[0].prog_code[0].local_vars[3]$$;
	 expr {
	  expr="0";
	 };
	};
       };
      };
      Else @[5] {
       name="Else_If_ifgainx0";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="else";
       cond {
	expr=;
       };
       true_code {
	name="true_code";
	el_typ=ProgCode;
	el_def=0;
	AssignExpr @[0] {
	 name="AssignExpr_nonoisexx1gainx";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="no_noise = xx1(gain_x)";
	 result_var=$.programs[0].prog_code[0].local_vars[3]$;
	 expr {
	  expr="xx1(gain_x)";
	 };
	};
       };
      };
      MatrixAssign @[6] {
       name="MatrixAssign_nxx1funNoNoiseinonoise";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="nxx1_fun[\"NoNoise\"][i] = no_noise";
       variable=.programs[0].objs_vars[0]$$;
       data_table=1;
       col {
	expr="\"NoNoise\"";
       };
       dim0 {
	expr="i";
       };
       dim1 {
	expr=;
       };
       dim2 {
	expr=;
       };
       dim3 {
	expr=;
       };
       dim4 {
	expr=;
       };
       dim5 {
	expr=;
       };
       expr {
	expr="no_noise";
       };
      };
      If @[7] {
       name="If_ifnetthrsigthr";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="if (net_thr < sig_thr)";
       cond {
	expr="net_thr < sig_thr";
       };
       true_code {
	name="true_code";
	el_typ=ProgCode;
	el_def=0;
	AssignExpr @[0] {
	 name="AssignExpr_actsigmulteff10e_tthrsiggainnvar";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="act = sig_mult_eff / (1.0 + exp(-(net_thr * sig_gain)/nvar))";
	 result_var=.programs[0].prog_code[0].local_vars[4]$$;
	 expr {
	  expr="sig_mult_eff / (1.0 + exp(-(net_thr * sig_gain)/nvar))";
	 };
	};
	AssignExpr @[1] {
	 name="AssignExpr_altactact";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="alt_act = act";
	 result_var=.programs[0].prog_code[0].local_vars[11]$$;
	 expr {
	  expr="act";
	 };
	};
       };
      };
      ElseIf @[8] {
       name="ElseIf_elseifnetthrinterprange";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="else if (net_thr < interp_range)";
       cond {
	expr="net_thr < interp_range";
       };
       true_code {
	name="true_code";
	el_typ=ProgCode;
	el_def=0;
	AssignExpr @[0] {
	 name="AssignExpr_propfact10interp_tthrinterprange";
	 desc="how close we are to end of this range, normalized by range";
	 flags=CAN_REVERT_TO_CODE;
	 code_string="prop_fact = 1.0 - ((interp_range - net_thr) / interp_range)";
	 result_var=.programs[0].prog_code[0].local_vars[12]$$;
	 expr {
	  expr="1.0 - ((interp_range - net_thr) / interp_range)";
	 };
	};
	AssignExpr @[1] {
	 name="AssignExpr_actsigvalat0prop_interpsigvalat0";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="act = sig_val_at_0 + prop_fact * (val_at_interp - sig_val_at_0)";
	 result_var=$.programs[0].prog_code[0].local_vars[4]$;
	 expr {
	  expr="sig_val_at_0 + prop_fact * (val_at_interp - sig_val_at_0)";
	 };
	};
	AssignExpr @[2] {
	 name="AssignExpr_altactact";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="alt_act = act";
	 result_var=$.programs[0].prog_code[0].local_vars[11]$;
	 expr {
	  expr="act";
	 };
	};
	AssignExpr @[3] {
	 name="AssignExpr_altactsigvalat0gainx10gainx";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="alt_act = (sig_val_at_0 +gain_x) / (1.0 + gain_x)";
	 result_var=$.programs[0].prog_code[0].local_vars[11]$;
	 expr {
	  expr="(sig_val_at_0 +gain_x) / (1.0 + gain_x)";
	 };
	};
       };
      };
      ElseIf @[9] {
       name="ElseIf_elseifnetthrnvarsgaincorrange";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="else if (net_thr_nvars < gain_cor_range)";
       cond {
	expr="net_thr_nvars < gain_cor_range";
       };
       true_code {
	name="true_code";
	el_typ=ProgCode;
	el_def=0;
	AssignExpr @[0] {
	 name="AssignExpr_actxx1gainmodnetthr";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="act = xx1_gain_mod(net_thr)";
	 result_var=$.programs[0].prog_code[0].local_vars[4]$;
	 expr {
	  expr="xx1_gain_mod(net_thr)";
	 };
	};
	AssignExpr @[1] {
	 name="AssignExpr_altactsigvalat0gainx10gainx";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="alt_act = (sig_val_at_0 +gain_x) / (1.0 + gain_x)";
	 result_var=$.programs[0].prog_code[0].local_vars[11]$;
	 expr {
	  expr="(sig_val_at_0 +gain_x) / (1.0 + gain_x)";
	 };
	};
       };
      };
      Else @[10] {
       name="Else_ElseIf_elseifnetthrnvarsgaincorrange";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="else";
       cond {
	expr=;
       };
       true_code {
	name="true_code";
	el_typ=ProgCode;
	el_def=0;
	AssignExpr @[0] {
	 name="AssignExpr_actnonoise";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="act = no_noise";
	 result_var=$.programs[0].prog_code[0].local_vars[4]$;
	 expr {
	  expr="no_noise";
	 };
	};
	AssignExpr @[1] {
	 name="AssignExpr_altactgainnetthr_var10gainnetthr";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="alt_act = gain * net_thr / (sqrt(1.0 / (nvar*nvar)) * nvar * (1.0 + gain * net_thr))";
	 result_var=$.programs[0].prog_code[0].local_vars[11]$;
	 expr {
	  expr="gain * net_thr / (sqrt(1.0 / (nvar*nvar)) * nvar * (1.0 + gain * net_thr))";
	 };
	};
	AssignExpr @[2] {
	 name="AssignExpr_altactsigvalat0gainx10gainx";
	 desc=;
	 flags=CAN_REVERT_TO_CODE;
	 code_string="alt_act = (sig_val_at_0 +gain_x) / (1.0 + gain_x)";
	 result_var=$.programs[0].prog_code[0].local_vars[11]$;
	 expr {
	  expr="(sig_val_at_0 +gain_x) / (1.0 + gain_x)";
	 };
	};
       };
      };
      MatrixAssign @[11] {
       name="MatrixAssign_nxx1funNewActiact";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="nxx1_fun[\"NewAct\"][i] = act";
       variable=$.programs[0].objs_vars[0]$;
       data_table=1;
       col {
	expr="\"NewAct\"";
       };
       dim0 {
	expr="i";
       };
       dim1 {
	expr=;
       };
       dim2 {
	expr=;
       };
       dim3 {
	expr=;
       };
       dim4 {
	expr=;
       };
       dim5 {
	expr=;
       };
       expr {
	expr="act";
       };
      };
      MatrixAssign @[12] {
       name="MatrixAssign_nxx1funAltActialtact";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="nxx1_fun[\"AltAct\"][i] = alt_act";
       variable=$.programs[0].objs_vars[0]$;
       data_table=1;
       col {
	expr="\"AltAct\"";
       };
       dim0 {
	expr="i";
       };
       dim1 {
	expr=;
       };
       dim2 {
	expr=;
       };
       dim3 {
	expr=;
       };
       dim4 {
	expr=;
       };
       dim5 {
	expr=;
       };
       expr {
	expr="alt_act";
       };
      };
      AssignExpr @[13] {
       name="AssignExpr_origactnxx1funActi";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="orig_act = nxx1_fun[\"Act\"][i]";
       result_var=.programs[0].prog_code[0].local_vars[5]$$;
       expr {
	expr="nxx1_fun[\"Act\"][i]";
       };
      };
      AssignExpr @[14] {
       name="AssignExpr_logactlog10origact";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="log_act = log(1.0 + orig_act)";
       result_var=.programs[0].prog_code[0].local_vars[6]$$;
       expr {
	expr="log(1.0 + orig_act)";
       };
      };
      AssignExpr @[15] {
       name="AssignExpr_lognewlog10act";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="log_new = log(1.0 + act)";
       result_var=.programs[0].prog_code[0].local_vars[7]$$;
       expr {
	expr="log(1.0 + act)";
       };
      };
      MatrixAssign @[16] {
       name="MatrixAssign_nxx1funLogActilogact";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="nxx1_fun[\"LogAct\"][i] = log_act";
       variable=$.programs[0].objs_vars[0]$;
       data_table=1;
       col {
	expr="\"LogAct\"";
       };
       dim0 {
	expr="i";
       };
       dim1 {
	expr=;
       };
       dim2 {
	expr=;
       };
       dim3 {
	expr=;
       };
       dim4 {
	expr=;
       };
       dim5 {
	expr=;
       };
       expr {
	expr="log_act";
       };
      };
      MatrixAssign @[17] {
       name="MatrixAssign_nxx1funLogNewilognew";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="nxx1_fun[\"LogNew\"][i] = log_new";
       variable=$.programs[0].objs_vars[0]$;
       data_table=1;
       col {
	expr="\"LogNew\"";
       };
       dim0 {
	expr="i";
       };
       dim1 {
	expr=;
       };
       dim2 {
	expr=;
       };
       dim3 {
	expr=;
       };
       dim4 {
	expr=;
       };
       dim5 {
	expr=;
       };
       expr {
	expr="log_new";
       };
      };
      MethodCall @[18] {
       name="MethodCall_nxx1funWriteClose";
       desc=;
       flags=CAN_REVERT_TO_CODE;
       code_string="nxx1_fun->WriteClose()";
       result_var=NULL;
       obj=$.programs[0].objs_vars[0]$;
       method=DataTable::WriteClose;
       meth_args {
	name="meth_args";
	el_typ=ProgArg;
	el_def=0;
       };
       meth_sig="void WriteClose()";
       meth_desc=" closes up a write operation -- call when done writing data -- performs any post-writing cleanup/closing of files, etc";
      };
     };
     init {
      expr="i=0";
     };
     test {
      expr="i<nxx1_fun.rows";
     };
     iter {
      expr="i++";
     };
    };
   };
   step_prog=NULL;
   step_n=1;
   doc {
    name="doc";
    desc=;
    web_doc=0;
    wiki=;
    url="local";
    full_url="local";
    text_size=1;
    text="<html>
<head></head>
<body>
== Enter Title Here ==
</body>
</html>
";
    html_text="<html>
<head></head>
<body>
<h2> Enter Title Here </h2>
</body>
</html>
";
   };
  };
 };
 viewers {
  name="viewers";
  el_typ=MainWindowViewer;
  el_def=0;
  MainWindowViewer @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_102";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="view_win_lft": value=0.02937294: val_type_fixed=0: };
    UserDataItem @[1] {name="view_win_top": value=0.1199532: val_type_fixed=0: };
    UserDataItem @[2] {name="view_win_wd": value=1: val_type_fixed=0: };
    UserDataItem @[3] {name="view_win_ht": value=0.7992978: val_type_fixed=0: };
    UserDataItem @[4] {name="view_win_iconified": value=0: val_type_fixed=0: };
    UserDataItem @[5] {name="view_splitter_state": value=AAAA/wAAAAEAAAADAAABFwAAAfwAAAKMAf////8BAAAAAQA=: val_type_fixed=0: };
   };
   name="Browser2";
   m_data=.$$;
   cur_font_size=12;
   visible=1;
   win_name=".projects[\"nxx1_fun_approx\"] - nxx1_fun_approx.proj";
   m_is_root=0;
   m_is_viewer_xor_browser=0;
   m_is_proj_viewer=1;
   m_is_dialog=0;
   revert_to_tab_no=-1;
   toolbars {
    name="toolbars";
    el_typ=ToolBar;
    el_def=0;
    ToolBar @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_103";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_win_visible": value=1: val_type_fixed=0: };
     };
     name="Application";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     lft=0;
     top=0;
     o=Horizontal;
    };
   };
   frames {
    name="frames";
    el_typ=BrowseViewerTaBase;
    el_def=0;
    BrowseViewerTaBase @[0] {
     name="Navigator";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     root_typ=LeabraProject;
     root_md=NULL;
     m_root=$.$;
    };
    PanelViewer @[1] {
     name="Editor";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
    };
    T3PanelViewer @[2] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_104";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_panel_selected": value=1: val_type_fixed=0: };
     };
     name="Visualizer";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     panels {
      name="panels";
      el_typ=T3Panel;
      el_def=0;
      T3Panel @[0] {
       name="Nxx1Fun";
       m_data=NULL;
       cur_font_size=12;
       visible=1;
       root_view {
	name="root_view";
	m_data=NULL;
	cur_font_size=12;
	m_transform=NULL;
	children {
	 name="children";
	 el_typ=T3DataViewMain;
	 el_def=0;
	 GraphTableView @[0] {
	  name="Nxx1Fun_Graph";
	  m_data=$.programs[0].objs[0]$;
	  cur_font_size=15;
taTransform @*(.m_transform) {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  children {
	   name="children";
	   el_typ=GraphColView;
	   el_def=0;
	   GraphColView @[0] {
	    name="Net";
	    m_data=.programs[0].objs[0].data[0]$$;
	    cur_font_size=15;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=0.48: fix_max=1: max=0.6: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[1] {
	    name="Act";
	    m_data=.programs[0].objs[0].data[1]$$;
	    cur_font_size=15;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=0: fix_max=1: max=1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[2] {
	    name="Linear";
	    m_data=.programs[0].objs[0].data[2]$$;
	    cur_font_size=15;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=1: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[3] {
	    name="NoNoise";
	    m_data=.programs[0].objs[0].data[3]$$;
	    cur_font_size=15;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.980392: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[4] {
	    name="LogAct";
	    m_data=.programs[0].objs[0].data[4]$$;
	    cur_font_size=15;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=1: min=0: fix_max=1: max=0.01: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[5] {
	    name="LogNew";
	    m_data=.programs[0].objs[0].data[5]$$;
	    cur_font_size=15;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.673729: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[6] {
	    name="AltAct";
	    m_data=.programs[0].objs[0].data[6]$$;
	    cur_font_size=15;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.98225: };
	    data_range {min=0: max=0: };
	   };
	   GraphColView @[7] {
	    name="NewAct";
	    m_data=.programs[0].objs[0].data[7]$$;
	    cur_font_size=15;
	    m_transform=NULL;
	    visible=1;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.980392: };
	    data_range {min=0: max=0: };
	   };
	  };
	  main_xform {scale={x=1: y=1: z=1: }: rotate={x=0: y=0: z=1: rot=0: }: translate={x=0: y=0: z=0: }: };
	  annotations {
	   name="annotations";
	   el_typ=T3Annotation;
	   el_def=0;
	  };
	  annote_children {
	   name="annote_children";
	   el_typ=T3DataView;
	   el_def=0;
	  };
	  view_rows=10000;
	  view_range {min=0: max=1000: };
	  page_rows=0;
	  display_on=1;
	  manip_ctrl_on=1;
	  graph_type=XY;
	  plot_style=LINE;
	  negative_draw=0;
	  negative_draw_z=1;
	  line_width=1;
	  point_size=0.01;
	  point_spacing=1;
	  solid_lines=0;
	  bar_space=0.2;
	  bar_depth=0.01;
	  label_spacing=-1;
	  string_spacing=1;
	  width=1;
	  depth=1;
	  axis_font_size=0.05;
	  label_font_size=0.04;
	  x_axis_label_rot=0;
	  x_axis {
	   name="x_axis";
	   m_data=NULL;
	   cur_font_size=15;
	   m_transform=NULL;
	   on=1;
	   axis=X;
	   col_name="Net";
	   col_name_good="Net";
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=1: min=0.48: fix_max=1: max=0.6: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  z_axis {
	   name="z_axis";
	   m_data=NULL;
	   cur_font_size=15;
	   m_transform=NULL;
	   on=0;
	   axis=Z;
	   col_name=;
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  tot_plots=6;
	  plots {
	   name="plots";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="Nxx1Fun_Graph_plot_1";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="Act";
	    col_name_good="Act";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=0: fix_max=1: max=1: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[1] {
	    name="Nxx1Fun_Graph_plot_2";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=1;
	    axis=Y;
	    col_name="NewAct";
	    col_name_good="NewAct";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.9803918: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="red": r=1: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=SQUARE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[2] {
	    name="Nxx1Fun_Graph_plot_3";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name="NoNoise";
	    col_name_good="NoNoise";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.980392: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="blue": r=0: g=0: b=1: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=DIAMOND;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[3] {
	    name="Nxx1Fun_Graph_plot_4";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name="AltAct";
	    col_name_good="AltAct";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.98225: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="ForestGreen": r=0.1333333: g=0.5450981: b=0.1333333: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_UP;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[4] {
	    name="Nxx1Fun_Graph_plot_5";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name="LogAct";
	    col_name_good="LogAct";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=1: min=0: fix_max=1: max=0.01: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="purple": r=0.627451: g=0.1254902: b=0.9411765: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=TRIANGLE_DN;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[5] {
	    name="Nxx1Fun_Graph_plot_6";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name="LogNew";
	    col_name_good="LogNew";
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0.673729: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="orange": r=1: g=0.6470588: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=PLUS;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	  };
	  errbars {
	   name="errbars";
	   el_typ=GraphPlotView;
	   el_def=0;
	   GraphPlotView @[0] {
	    name="Nxx1Fun_Graph_err_1";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[1] {
	    name="Nxx1Fun_Graph_err_2";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[2] {
	    name="Nxx1Fun_Graph_err_3";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[3] {
	    name="Nxx1Fun_Graph_err_4";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[4] {
	    name="Nxx1Fun_Graph_err_5";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	   GraphPlotView @[5] {
	    name="Nxx1Fun_Graph_err_6";
	    m_data=NULL;
	    cur_font_size=15;
	    m_transform=NULL;
	    on=0;
	    axis=Y;
	    col_name=;
	    col_name_good=;
	    is_string=0;
	    is_matrix=0;
	    n_cells=1;
	    matrix_cell=0;
	    fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	    show_axis_label=1;
	    show_alt_axis_label=1;
	    color {name="black": r=0: g=0: b=0: a=1: desc="": };
	    flip=0;
	    n_ticks=10;
	    axis_length=1;
	    line_style=SOLID;
	    point_style=CIRCLE;
	    alt_y=0;
	    axis_label=;
	    alt_axis_label=;
	   };
	  };
	  x_axis_label=;
	  y_axis_label=;
	  alt_y_axis_label=;
	  z_axis_label=;
	  err_spacing=1;
	  err_bar_width=0.02;
	  color_mode=FIXED;
	  color_gp_use_y=0;
	  color_axis {
	   name="color_axis";
	   m_data=NULL;
	   cur_font_size=15;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  colorscale {
	   name="colorscale";
	   chunks=133;
	   min=-1;
	   max=1;
	   last_min=-1;
	   last_max=1;
	   range=1;
	   zero=0;
	   spec=.colorspecs["C_ColdHot"]$$<ColorScaleSpec,C_ColdHot>;
	   auto_scale=0;
	  };
	  raster_axis {
	   name="raster_axis";
	   m_data=NULL;
	   cur_font_size=15;
	   m_transform=NULL;
	   on=0;
	   axis=Y;
	   col_name=;
	   col_name_good=;
	   is_string=0;
	   is_matrix=0;
	   n_cells=1;
	   matrix_cell=0;
	   fixed_range {fix_min=0: min=0: fix_max=0: max=0: };
	   show_axis_label=1;
	   show_alt_axis_label=1;
	   color {name="black": r=0: g=0: b=0: a=1: desc="": };
	   flip=0;
	   n_ticks=10;
	   axis_length=1;
	   labels_on=0;
	   labels_col_name=;
	   row_num=0;
	   axis_label=;
	  };
	  thresh=0.5;
	  thr_line_len=0.48;
	  matrix_mode=SEP_GRAPHS;
	  mat_layout=BOT_ZERO;
	  mat_odd_vert=1;
	  two_d_font=0;
	  two_d_font_scale=350;
	 };
	};
       };
       bg_color {r=1: g=1: b=1: a=1: };
       text_color {r=0: g=0: b=0: a=1: };
       headlight_on=1;
       headlight_intensity=1;
       ambient_light=0;
       camera_params {field_of_view=45: near_distance=0.1: focal=5: far_distance=1000: };
       stereo_view=STEREO_NONE;
       saved_views {
	name="saved_views";
	el_typ=T3SavedView;
	el_def=0;
	T3SavedView @[0] {
	 name="Vw_0";
	 view_saved=1;
	 pos {x=0.425: y=0.4080001: z=1.590496: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=1.580496;
	};
	T3SavedView @[1] {
	 name="Vw_1";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[2] {
	 name="Vw_2";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[3] {
	 name="Vw_3";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[4] {
	 name="Vw_4";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[5] {
	 name="Vw_5";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[6] {
	 name="Vw_6";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[7] {
	 name="Vw_7";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[8] {
	 name="Vw_8";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
	T3SavedView @[9] {
	 name="Vw_9";
	 view_saved=0;
	 pos {x=0: y=0: z=0: };
	 orient {x=0: y=0: z=1: rot=0: };
	 focal_dist=0;
	};
       };
      };
     };
    };
   };
   docks {
    name="docks";
    el_typ=ToolBoxDockViewer;
    el_def=0;
    ToolBoxDockViewer @[0] {
     UserDataItem_List @*(.user_data_) {
      name="UserDataItem_List_105";
      el_typ=UserDataItem;
      el_def=0;
      UserDataItem @[0] {name="view_win_lft": value=0: val_type_fixed=0: };
      UserDataItem @[1] {name="view_win_top": value=0.0093622: val_type_fixed=0: };
      UserDataItem @[2] {name="view_win_wd": value=0.02706271: val_type_fixed=0: };
      UserDataItem @[3] {name="view_win_ht": value=0.7507314: val_type_fixed=0: };
      UserDataItem @[4] {name="view_win_iconified": value=0: val_type_fixed=0: };
      UserDataItem @[5] {name="view_visible": value=1: val_type_fixed=0: };
     };
     name="Tools";
     m_data=NULL;
     cur_font_size=12;
     visible=1;
     win_name=;
     dock_flags=DV_MOVABLE|DV_FLOATABLE;
     dock_area=1;
    };
   };
  };
 };
 save_view=1;
 save_as_only=0;
 auto_name=1;
 last_change_desc="program for figuring out good closed-form approximation for convolved NXX1 function -- works well..";
 tree_state{ .;.patches;.docs;.wizards;.ctrl_panels;.active_params;.data;.data.gp[0];.data.gp[1];.data.gp[2];.programs;.programs.break_points;.programs[0];.programs[0].objs;.programs[0].objs[0];.programs[0].types;.programs[0].vars;.programs[0].functions;.viewers[0];.viewers[0].frames[2];.networks;.networks[0];.networks[0].spec_tables;.networks[0].specs;.networks[0].specs[0];.networks[0].param_seqs;.networks[0].layers;.networks[0].weights; };
 networks {
  name="networks";
  el_typ=LeabraNetwork;
  el_def=0;
  LeabraNetwork @[0] {
   UserDataItem_List @*(.user_data_) {
    name="UserDataItem_List_1";
    el_typ=UserDataItem;
    el_def=0;
    UserDataItem @[0] {name="cos_err": value=1: val_type_fixed=1: };
    UserDataItem @[1] {name="norm_err": value=1: val_type_fixed=1: };
    UserDataItem @[2] {name="ext_rew": value=1: val_type_fixed=1: };
    UserDataItem @[3] {name="minus_output_name": value=1: val_type_fixed=1: };
    UserDataItem @[4] {name="rt_cycles": value=1: val_type_fixed=1: };
    UserDataItem @[5] {name="tot_cycle": value=1: val_type_fixed=1: };
    UserDataItem @[6] {name="phase": value=1: val_type_fixed=1: };
    UserDataItem @[7] {name="quarter": value=1: val_type_fixed=1: };
    UserDataItem @[8] {name="sse": value=1: val_type_fixed=1: };
    UserDataItem @[9] {name="output_name": value=1: val_type_fixed=1: };
    UserDataItem @[10] {name="trial_name": value=1: val_type_fixed=1: };
    UserDataItem @[11] {name="group_name": value=1: val_type_fixed=1: };
    UserDataItem @[12] {name="total_trials": value=1: val_type_fixed=1: };
    UserDataItem @[13] {name="time": value=1: val_type_fixed=1: };
    UserDataItem @[14] {name="cycle": value=1: val_type_fixed=1: };
    UserDataItem @[15] {name="tick": value=1: val_type_fixed=1: };
    UserDataItem @[16] {name="trial": value=1: val_type_fixed=1: };
    UserDataItem @[17] {name="group": value=1: val_type_fixed=1: };
    UserDataItem @[18] {name="epoch": value=1: val_type_fixed=1: };
    UserDataItem @[19] {name="batch": value=1: val_type_fixed=1: };
   };
   name="Network_2";
   desc=;
   specs {
    name="specs";
    el_typ=LeabraUnitSpec;
    el_def=0;
    LeabraUnitSpec @[0] {
     name="LeabraUnitSpec_2";
     is_used=0;
     used_status=UNUSED;
     desc=;
     unique{      };
     saved{      };
     children {
      name="children";
      el_typ=LeabraUnitSpec;
      el_def=0;
     };
     act_range {min=0: max=1: range=1: scale=1: };
     bias_spec {type=LeabraBiasSpec: spec=.networks[0].specs[1]$$: };
     sse_tol=0.5;
     act_fun=NOISY_XX1;
     act {thr=0.5: gain=100: nvar=0.005: };
     act_misc {rec_nd=1: avg_nd=1: dif_avg=0: net_gain=1: act_max_hz=100: avg_trace=0: lambda=0: avg_tau=200: avg_init=0.15: avg_dt=0.005: };
     spike {rise=0: decay=5: g_gain=9: window=3: eq_gain=8: eq_tau=50: eq_dt=0.02: };
     spike_misc {ex=0: exp_slope=0.02: spk_thr=1.2: vm_r=0.3: t_r=3: clamp_max_p=0.12: clamp_type=REGULAR: eff_spk_thr=0.5: };
     opt_thresh {send=0.1: delta=0.005: xcal_lrn=0.01: };
     clamp_range {min=0: max=0.95: range=0.95: scale=1.052632: };
     vm_range {min=0: max=2: range=2: scale=0.5: };
     init {v_m=0.4: act=0: netin=0: };
     dt {integ=1: vm_tau=3.3: net_tau=1.4: fast_cyc=0: vm_dt=0.3030303: net_dt=0.7142857: };
     act_avg {ss_tau=2: s_tau=2: m_tau=10: m_in_s=0.1: ss_dt=0.5: s_dt=0.5: m_dt=0.1: s_in_s=0.9: };
     avg_l {init=0.4: gain=2.5: min=0.2: tau=10: lrn_max=0.5: lrn_min=0.0001: dt=0.1: lrn_fact=0.2173478: };
     avg_l_2 {err_mod=1: err_min=0.01: lay_act_thr=0.01: };
     g_bar {e=1: l=0.2: i=1: };
     e_rev {e=1: l=0.3: i=0.25: };
     adapt {on=0: tau=144: vm_gain=0.04: spike_gain=0.00805: Ei_dyn=1: Ei_gain=0.001: Ei_tau=50: dt=0.006944444: Ei_dt=0.02: };
     stp {on=0: algorithm=CYCLES: f_r_ratio=0.02: rec_tau=200: p0=0.2: p0_norm=0.2: kre_tau=100: kre=0.002: fac_tau=4: fac=0.3: thresh=0.5: n_trials=1: rec_prob=0.1: rec_dt=0.005: fac_dt=0.25: kre_dt=0.01: oneo_p0_norm=5: };
     syn_delay {on=0: delay=4: };
     deep_raw_qtr=Q4;
     deep {on=0: role=SUPER: raw_thr_rel=0.1: raw_thr_abs=0.1: mod_min=0.8: mod_thr=0.1: ctxt_prv=0: tick_updt=-1: else_prv=0.9: mod_range=0.2: ctxt_new=1: else_new=0.1: };
     trc {p_only_m=0: thal_gate=0: avg_clamp=0: deep_gain=0.2: clip=0: clip_max=0.4: std_gain=0.8: };
     da_mod {on=0: minus=0: plus=0.01: };
     noise_type=NO_NOISE;
     noise {name="noise": type=GAUSSIAN: mean=0: var=0.001000000047497451: par=1: };
     noise_adapt {trial_fixed=1: mode=FIXED_NOISE: };
     noise_sched {
      name="noise_sched";
      el_typ=SchedItem;
      el_def=0;
      default_val=1;
      interpolate=1;
     };
    };
    LeabraBiasSpec @[1] {
     name="LeabraBiasSpec_1";
     is_used=1;
     used_status=USED;
     desc=;
     unique{ rnd;wt_limits;wt_scale;learn;     };
     saved{      };
     children {
      name="children";
      el_typ=LeabraBiasSpec;
      el_def=0;
     };
     rnd {name="rnd": type=UNIFORM: mean=0: var=0: par=1: };
     wt_limits {type=NONE: min=-1: max=5: sym=0: sym_fm_top=0: };
     inhib=0;
     wt_scale {abs=1: rel=1: no_plus_net=0: };
     learn=0;
     learn_qtr=Q4;
     lrate=0.04;
     use_lrate_sched=1;
     cur_lrate=0.02;
     lrs_mult=1;
     lrate_sched {
      name="lrate_sched";
      el_typ=SchedItem;
      el_def=0;
      default_val=1;
      interpolate=0;
     };
     use_unlearnable=1;
     xcal {m_lrn=1: set_l_lrn=0: l_lrn=1: d_rev=0.1: d_thr=0.0001: d_rev_ratio=-9: };
     wt_sig {gain=6: off=1: soft_bound=1: };
     momentum {on=1: dwavg_tau=1000: norm_min=0.001: m_tau=20: lrate_comp=0.01: dwavg_dt=0.001: dwavg_dt_c=0.999: m_dt=0.05: m_dt_c=0.95: };
     wt_bal {on=1: hi_thr=0.4: hi_gain=4: lo_thr=0.2: lo_gain=4: };
     adapt_scale {on=0: tau=5000: lo_thr=0.25: hi_thr=0.75: lo_scale=0.01: hi_scale=2: dt=0.0002: };
     slow_wts {on=0: swt_pct=0.8: slow_tau=100: wt_tau=1: fwt_pct=0.2: slow_dt=0.01: wt_dt=1: };
     deep {on=0: bg_lrate=1: fg_lrate=0: };
     margin {lrate_mod=0: stable_lrate=0.5: sign_dwt=0: sign_lrn=0.5: };
     dwt_thresh=0.1;
    };
   };
   param_seqs {
    name="param_seqs";
    el_typ=ParamSeq;
    el_def=0;
   };
   layers {
    name="layers";
    el_typ=LeabraLayer;
    el_def=0;
    pos {x=0: y=0: z=0: };
    pos2d {x=0: y=0: };
    max_disp_size {x=1: y=1: z=1: };
    max_disp_size2d {x=1: y=1: };
   };
   weights {
    name="weights";
    el_typ=Weights;
    el_def=0;
   };
   flags=BUILD_INIT_WTS;
   unit_vars_type=LeabraUnitVars;
   con_group_type=LeabraConGroup;
   auto_build=AUTO_BUILD;
   auto_load_wts=NO_AUTO_LOAD;
   auto_load_file=;
   brain_atlas_name=;
   train_mode=TRAIN;
   wt_update=ON_LINE;
   small_batch_n=10;
   stats {sse_unit_avg=0: sse_sqrt=0: cnt_err_tol=0: prerr=0: };
   threads {run_time={name="TimeUsedHR_117": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: sync_time={name="TimeUsedHR_118": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: total_time={name="TimeUsedHR_119": s_used=0: n_used=0: avg_used={avg=0: sum=0: n=0: }: }: n_wake_in_sync=0: run_time_pct=0: sync_time_pct=0: wake_in_sync_pct=0: };
   cuda {sync_units=0: sync_cons=0: min_threads=32: max_threads=1024: cons_per_thread=2: timers_on=0: n_threads=32: };
   usr1_save_fmt=FULL_NET;
   wt_save_fmt=TEXT;
   n_units=1;
   n_cons=0;
   max_prjns=1;
   max_disp_size {x=1: y=1: z=1: };
   max_disp_size2d {x=1: y=1: };
   times {quarter=25: deep_cyc=5: time_inc=0.001: wt_bal_int=10: minus=75: plus=25: total_cycles=100: thal_gate_cycle=-2: };
   lstats {trg_max_act_crit=0.5: off_errs=1: on_errs=1: agg_unlearnable=0: wt_bal=0: };
   net_misc {spike=0: deep=0: bias_learn=0: trial_decay=0: diff_scale_p=0: diff_scale_q1=0: wt_bal=0: lay_gp_inhib=0: inhib_cons=0: };
   deep {on=0: ctxt=0: raw_net=0: mod_net=0: raw_qtr=0: };
   rel_netin {on=1: trl_skip=10: epc_skip=10: };
  };
 };
};
